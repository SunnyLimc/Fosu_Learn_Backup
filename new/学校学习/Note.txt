//float可四舍五入，double不可四舍五入（待定）

// IF中分号就结束啦，第二个分号是肯定会执行的。
// IF沒遇到分号是不会结束的，小心嵌套if的坑

// switch当前嵌套没break都是会继续执行的，不管内层switch有无break
/case中可以整型加法
// 管他下面还有啥，break;直接跳到当前大括号结束
// case冒号后面允许没有语句

// C语言中没有int(c)只有(int)c

// 注意判断的时候，要是第一次判断已经出结果，后面的条件是不会判断的
// 短路是逻辑运算符短路，即前者符合条件才会短路，逻辑后者符合条件不会短路
// 短路只影响本个逻辑运算符，不影响后面的
// 排序 +- >< && || ?:

//  ()表达式，先返回后面，再执行前面


//  (a>b>c)别掉坑了，哈哈

// 'a'是ASCII不是变量a
// 多个条件运算符是自右向左结合

// 在比较中表达式有括号才执行见51-2
// 区分好 = 和 ==，一般=的表达式为为变量本身(非0则真)
// while(i--);是一个只执行i--的语句
//  !x 看结果 结果是0则不执行
// while(i++) i会自增

// 注意for执行时判断的顺序
// continue会执行for中内容
// 转义符整体在strlen中算一个字符 （\n 为一个字符，\\算一个字符）
// 这是一段神奇的代码 s = 10 * s + ch[a] - '0';
// 打印指针p时会将p地址后存在的字符型数组打印出来(见6-1.9)
// 字符串连接不能将数组连接到常量中，否则程序会崩溃
// 在条件判断是 =='0' 和 ==0 不是同一个东西
// strcmp 返回0是一致

// f(x) x*x 的x是会自动替换的
// 不要关注define格式，直接套进去就完了
// 返回的值赋予到变量中，要留意变量在原函数中定义的类型
// for循环里注意在i+=2之后，i 的值是否已经超过了边界
// 传递二维数组必须指定一维数组的长度

//如果函数中定义了形参，在本函数中全局变量会被形参代替而失效

// strcpy是会清空原数组的，strcat才是按位拼接
// extern (int) 在函数中只是对全局变量的引用进行声明而已，而不是定义全局变量。定义全局变量是在函数外直接 int xx
// 默认声明类型为int，如static c等同于 ststic int c
// 不用static声明函数的都是外部(全局)函数
// a[i] = *p++; 这里不是指针值自增,而应理解为*(p++) 是地址自增

//todo弄懂**

// 访问数组值用 [ eg. int a[5], *p; p=a; *(p+4) ] *(p+4) 即为a[4]的值，千万不可写成 *p+4
// 若a是二维数组，p指定时要用p = a[1]
// a = b++ 即使是指针下也是先赋值再加

// 指针的表示含义应该结合符号的结合顺序来看
// 二维数组不能直接取纯数组名(eg a[2][5],取a)作为地址赋给指针
// 字符指针赋字符串是给指针地址赋值，而非*指针本身
