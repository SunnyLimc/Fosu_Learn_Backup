#include <stdio.h>

int main()
{
    int num[100], i, j, numL, numCor[100], total = 0, tmp;

    i = 0;
    do
    {
        scanf("%d", &num[i]);
        numL = i;
        i++;
    } while (getchar() != '\n');

    for (int i = 0; i < numL; i++)
    {
        total = 0;
        for (j = 0; j < numL; j++)
        {
            if (num[j] <= num[j + 1])
            {
                numCor[j] = 1;
            }
            else
            {
                numCor[j] = 0;
                tmp = num[j];
                num[j] = num[j + 1];
                num[j + 1] = tmp;
            }
            total += numCor[j];
        }
    }

    for (i = 0; i <= numL; i++)
    {
        printf("%d\n", num[i]);
    }
    return 0;
}// #include <stdio.h>
// int main()
// {
//     int k, i, m, s, tol;
//     scanf("%d", &k);
//     for (m = 1, i = 1, s = 1, tol = 0; m <= i; m++)
//     {
//         s = s * m;
//         if (m == i)
//         {
//             tol += s;
//             i++;
//             if (i > k)
//                 break;
//             m = 1;
//             s = 1;
//         }
//     }
//     printf("%d", tol);
//     return 0;
// }

// #include <stdio.h>
// int main()
// {
//     int k, t, i, j, sum = 0;
//     scanf("%d", &k);
//     for (i = 1; i <= k; i++)
//     {
//         for (j = 1, t = 1; j <= i; j++)
//         {
//             t *= j;
//         }
//         sum += t;
//     }
//     printf("%d", sum);
// }#include <stdio.h>
int main()
{
    int a[100], cnt, i = 0, j, tmp;
    do
    {
        scanf("%d", &a[i]);
        i++;
    } while (getchar() != '\n');
    cnt = i;
    for (i = 0; i < cnt; i++)
    {
        tmp = a[i];
        for (j = i; j < cnt; j++)
        {
            if (a[j] < tmp)
            {
                tmp = a[j];
                a[j] = a[i];
                a[i] = tmp;
            }
        }
    }

    for (i = 0; i < cnt; i++)
    {
        printf("%d ", a[i]);
    }
}#include <stdio.h>
#include "slist.h"
#include <assert.h>
#include <stdlib.h>
#include <stddef.h>

void SListInit(SList *s)
{
    assert(s);
    s->_pHead = NULL;
}

void SListPushBack(SList *s, SDataType data)
{
    //ÊâæÈìæË°®ÊúÄÂêé‰∏Ä‰∏™ËäÇÁÇπ
    assert(s);
    PNode pNewNode = BuySListNode(data);
    if (s->_pHead == NULL)
    { //ÈìæË°®Ê≤°ÊúâËäÇÁÇπÁöÑÊÉÖÂÜµ
        s->_pHead = pNewNode;
    }
    else
    {
        PNode pCur = s->_pHead;
        while (pCur->_PNext)
        {
            pCur = pCur->_PNext;
        }
        //ËÆ©ÊúÄÂêé‰∏Ä‰∏™ËäÇÁÇπÊåáÂêëÊñ∞ËäÇÁÇπ
        pCur->_PNext = pNewNode;
    }
}

void SListPopBack(SList *s)
{
    assert(s);
    if (s->_pHead == NULL)
    { //ÈìæË°®‰∏≠Ê≤°ÊúâËäÇÁÇπ
        return;
    }
    else if (s->_pHead->_PNext == NULL)
    { //Âè™Êúâ‰∏Ä‰∏™ËäÇÁÇπ
        free(s->_pHead);
        s->_pHead = NULL;
    }
    else
    { //Â§ö‰∏™ËäÇÁÇπ
        PNode pCur = s->_pHead;
        PNode pPre = NULL;
        while (pCur->_PNext)
        {
            pPre = pCur;
            pCur = pCur->_PNext;
        }
        free(pCur);
        pPre->_PNext = NULL;
    }
}

void SListPushFront(SList *s, SDataType data)
{
    assert(s);
    PNode pNewNode = BuySListNode(data);
    if (s->_pHead == NULL)
    { //ÈìæË°®‰∏∫Á©∫
        s->_pHead = pNewNode;
    }
    else
    {
        pNewNode->_PNext = s->_pHead;
        s->_pHead = pNewNode;
    }
}

void SListPopFront(SList *s)
{
    assert(s);
    if (s->_pHead == NULL)
    { //ÈìæË°®‰∏∫Á©∫
        return;
    }
    else if (s->_pHead->_PNext == NULL)
    { //Âè™Êúâ‰∏Ä‰∏™ËäÇÁÇπ
        free(s->_pHead);
        s->_pHead = NULL;
    }
    else
    {
        PNode pCur = s->_pHead;
        s->_pHead = pCur->_PNext;
        free(pCur);
    }
}

void SListInsert(PNode pos, SDataType data)
{
    PNode pNewNode = NULL;
    if (pos == NULL)
    {
        return;
    }
    pNewNode = BuySListNode(data);

    pNewNode->_PNext = pos->_PNext;
    pos->_PNext = pNewNode;
}

PNode SListFind(SList *s, SDataType data)
{
    assert(s);
    PNode pCur = s->_pHead;
    while (pCur)
    {
        if (pCur->_data == data)
        {
            return pCur;
        }
        pCur = pCur->_PNext;
    }
    return NULL;
}

void SListRemove(SList *s, SDataType data)
{
    assert(s);
    if (s->_pHead == NULL)
    {
        return;
    }
    PNode pPre = NULL;
    PNode pCur = s->_pHead;
    while (pCur)
    {
        if (pCur->_data == data)
        {
            if (pCur == s->_pHead)
            { //Ë¶ÅÂà†Èô§ÁöÑÊòØÁ¨¨‰∏Ä‰∏™‰ΩçÁΩÆÁöÑËäÇÁÇπ
                s->_pHead = pCur->_PNext;
            }
            else
            {
                pPre->_PNext = pCur->_PNext; //ÂÖ∂ÂÆÉ‰ΩçÁΩÆÁöÑÊÉÖÂÜµÔºåËÆ©Ââç‰∏Ä‰∏™ËäÇÁÇπÊåáÂêëÂÖ∂Âêé‰∏Ä‰∏™ËäÇÁÇπ
            }
            free(pCur);
            return;
        }
        else
        {
            pPre = pCur;
            pCur = pCur->_PNext;
        }
    }
}

int SListSize(SList *s)
{ //Ëé∑ÂèñÈìæË°®ÊúâÊïàËäÇÁÇπÁöÑ‰∏™Êï∞
    assert(s);
    int count = 0;
    PNode pCur = s->_pHead;
    while (pCur)
    {
        count++;
        pCur = pCur->_PNext;
    }
    return count;
}

int SListEmpty(SList *s)
{ //Ê£ÄÊµãÈìæË°®ÊòØÂê¶‰∏∫Á©∫
    assert(s);
    if (s->_pHead == NULL)
    {
        return -1;
    }
    return 0;
}

void SListClear(SList *s)
{ //Ê∏ÖÁ©∫ÈìæË°®
    assert(s);
    if (s->_pHead == NULL)
    {
        return;
    }
    PNode pCur = s->_pHead;
    while (pCur->_PNext)
    { //Âæ™ÁéØÊ∏ÖÁ©∫ÈìæË°®‰∏≠ÁöÑËäÇÁÇπ
        PNode Tmp = pCur->_PNext;
        free(pCur);
        pCur = Tmp;
    }
    if (pCur)
    { //Ê∏ÖÁ©∫ÊúÄÂêé‰∏Ä‰∏™ËäÇÁÇπ
        free(pCur);
        pCur = NULL;
    }
}

void SListDestroy(SList *s)
{ //ÈîÄÊØÅÈìæË°®
    assert(s);
    if (s->_pHead == NULL)
    {
        free(s->_pHead);
        return;
    }
    while (s->_pHead)
    {
        PNode Tmp = s->_pHead->_PNext;
        free(s->_pHead);
        s->_pHead = Tmp;
    }
}

void SListPrint(SList *s)
{ //ÊâìÂç∞ÈìæË°®
    assert(s);
    PNode pCur = s->_pHead;
    while (pCur)
    {
        printf("%d--->", pCur->_data);
        pCur = pCur->_PNext;
    }
    printf("\n");
}
void main()
{
    SList s;
    SListInit(&s);
    SListPushBack(&s, 1);
    SListPushBack(&s, 2);
    SListPushBack(&s, 3);
    printf("size=%d\n", SListSize(&s));
    SListPrint(&s);
    SListInsert(SListFind(&s, 2), 0);
    SListPrint(&s);
    SListRemove(&s, 2);
    SListPrint(&s);
    system("pause");
    return;
}#include <stdio.h>

int main()
{
    int num[100], i, t, numL, numCor[100], total = 0, tmp;
    for (i = 1;; i++)
    {
        printf("Please input a number(2333333 to exit):");
        scanf("%d", &num[i]);
        if (num[i] == 2333333)
        {
            break;
        }
        numL = i;
    }
    i = 1;
    while (1)
    {
        //»Ù≈≈–ÚŒ¥ÕÍ≥…‘Ú÷ÿ–¬≈≈–Ú
        if (i == numL)
        {
            i = 1;
            total = 0;
        }
        //ø™ º≈≈–Ú
        if (num[i] <= num[i + 1])
        {
            numCor[i] = 1;
        }
        else
        {
            numCor[i] = 0;
            tmp = num[i];
            num[i] = num[i + 1];
            num[i + 1] = tmp;
        }
        //≈–∂œ «∑Ò≈≈–ÚÕÍ≥…
        total = total + numCor[i];
        if (total == (numL - 1))
        {
            break;
        }
        //◊‘‘ˆ
        i++;
    }
    for (i = 1; i <= numL; i++)
    {
        printf("%d\n", num[i]);
    }
    return 0;
}#include <stdio.h>
int main()
{
    int array[10];
    int hehe(int []);
    array[9] = 1;
    hehe(array);
    printf("%d", array[11]);
    return 0;
}
int hehe(int hehe[])
{
    hehe[11] = 1000;
    return 0;
}#include <stdio.h>
int main(int argc, char **argv)
{
    if (argc != 2)
    {
        printf("Give me two attritube, Fuck you.");
    }
    else
    {
        printf("Hello, %s", argv[1]);
    }
    return 0;
}#include <stdio.h>

int main()
{
    int i, m = 0, targetNum, num[100];
    scanf("%d", &targetNum);
    while (targetNum != 0)
    {
        num[m] = targetNum % 10;
        targetNum = targetNum / 10;
        m++;
    }
    for (i = m - 1; i >= 0; i--)
    {
        printf("%d ", num[i]);
    }
    return 0;
}#include <stdio.h>

void main()
{
    int i, j, k, l = 0;
    for (i = 0; i < 5; i++)
    {
        printf("’‚ «i\n%d\n\n", i);
        for (j = 0; j < 5; j++)
        {
            printf("’‚ «j\n%d\n\n", j);
            for (k = 0; k < 5; k++)
            {
                printf("’‚ «k\n%d\n\n", k);
                l = l + 1;
            }
        }
    }
    printf("“ªπ≤≈‹¡À%d––\n", l);
}
// ¿ÌΩ‚£∫œ»Ω¯»Îi£¨»ª∫ÛΩ¯»Îjµ⁄“ª≤„£¨»ª∫ÛΩ¯»Îk£¨∞—k≈‹ÕÍ»´≤ø≤„£ªΩ¯»Îjµ⁄∂˛≤„£¨∞—k≈‹ÕÍ»´≤ø≤„£ª“‘¥À¿‡Õ∆£¨∞—j≈‹ÕÍ£ª
// Ω¯»Îiµ⁄∂˛≤„÷ÿ∏¥…œ“ª––◊¢ Õ£¨÷±÷¡∞—i≈‹ÕÍ£¨Ω· ¯°£// Ã‚ƒø£∫”–1°¢2°¢3°¢4∏ˆ ˝◊÷£¨ƒ‹◊È≥…∂‡…Ÿ∏ˆª•≤ªœ‡Õ¨«“Œﬁ÷ÿ∏¥ ˝◊÷µƒ»˝Œª ˝£ø∂º «∂‡…Ÿ£ø

// ≥Ã–Ú∑÷Œˆ£∫ø…ÃÓ‘⁄∞ŸŒª°¢ ÆŒª°¢∏ˆŒªµƒ ˝◊÷∂º «1°¢2°¢3°¢4°£◊È≥…À˘”–µƒ≈≈¡–∫Û‘Ÿ»• µÙ≤ª¬˙◊„Ãıº˛µƒ≈≈¡–°£

#include <stdio.h>

void main()
{
    int i, j, k, l = 0;
    printf("\n");
    for (i = 1; i < 5; i++)
    {
        for (j = 1; j < 5; j++)
        {
            for (k = 1; k < 5; k++)
            {
                if (i != j && i != k && j != k)
                {
                    l = l + 1;
                    printf("%d,%d,%d\n", i, j, k);
                }
            }
        }
    }
    printf("◊‹π≤”–%d∏ˆ ˝", l);
}#include <stdio.h>
int main()
{
    int a, b, i, r, n;
    scanf("%d %d", &a, &b);
    if (a < b)
    {
        a = a + b;
        b = a - b;
        a = a - b;
    }
    r = a % b;
    n = a * b;
    while (r != 0)
    {
        a = b;
        b = r;
        r = a % b;
    }
    printf("’‚¡Ω∏ˆ ˝µƒ◊Ó¥Ûπ´‘º ˝ «%d£¨◊Ó–°π´±∂ ˝ «%d\n", b, n / b);
    return 0;
}//∑÷Ω‚÷ “Ú ˝
#include <stdio.h>
int main()
{
    int i, n;
    scanf("%d", &n);
    printf("%d=", n);
    for (i = 2; i <= n; i++)
    {
        while (n % i == 0)
        {
            printf("%d", i);
            n /= i;
            if (n != 1)
                printf("*");
        }
    }
    return 0;
}// Ã‚ƒø£∫∆Û“µ∑¢∑≈µƒΩ±Ω∏˘æ›¿˚»ÛÃ·≥…°£

// ¿˚»Û(I)µÕ”⁄ªÚµ»”⁄10ÕÚ‘™ ±£¨Ω±Ωø…Ã·10%£ª
// ¿˚»Û∏ﬂ”⁄10ÕÚ‘™£¨µÕ”⁄20ÕÚ‘™ ±£¨µÕ”⁄10ÕÚ‘™µƒ≤ø∑÷∞¥10%Ã·≥…£¨∏ﬂ”⁄10ÕÚ‘™µƒ≤ø∑÷£¨ø…Ã·≥…7.5%£ª
// 20ÕÚµΩ40ÕÚ÷Æº‰ ±£¨∏ﬂ”⁄20ÕÚ‘™µƒ≤ø∑÷£¨ø…Ã·≥…5%£ª
// 40ÕÚµΩ60ÕÚ÷Æº‰ ±∏ﬂ”⁄40ÕÚ‘™µƒ≤ø∑÷£¨ø…Ã·≥…3%£ª
// 60ÕÚµΩ100ÕÚ÷Æº‰ ±£¨∏ﬂ”⁄60ÕÚ‘™µƒ≤ø∑÷£¨ø…Ã·≥…1.5%£ª
// ∏ﬂ”⁄100ÕÚ‘™ ±£¨≥¨π˝100ÕÚ‘™µƒ≤ø∑÷∞¥1%Ã·≥…°£
// ¥”º¸≈Ã ‰»Îµ±‘¬¿˚»ÛI£¨«Û”¶∑¢∑≈Ω±Ω◊‹ ˝£ø

// ≥Ã–Ú∑÷Œˆ£∫«Î¿˚”√ ˝÷·¿¥∑÷ΩÁ£¨∂®Œª°£◊¢“‚∂®“Â ±–Ë∞—Ω±Ω∂®“Â≥…≥§’˚–Õ°£

#include <stdio.h>
void main()
{
    double i;
    double bonus1, bonus2, bonus4, bonus6, bonus10, bonus;
    printf("ƒ„µƒ¥ø¿˚»Û «:\n");
    scanf("%lf", &i);
    bonus1 = 100000 * 0.1;
    bonus2 = bonus1 + 100000 * 0.075;
    bonus4 = bonus2 + 200000 * 0.05;
    bonus6 = bonus4 + 200000 * 0.03;
    bonus10 = bonus6 + 400000 * 0.015;
    if (i < 100000)
    {
        bonus = i * 0.1;
    }
    else if (i <= 200000)
    {
        bonus = bonus1 + (i - 100000) * 0.075;
    }
    else if (i <= 400000)
    {
        bonus = bonus2 + (i - 200000) * 0.05;
    }
    else if (i <= 600000)
    {
        bonus = bonus4 + (i - 400000) * 0.03;
    }
    else if (i <= 1000000)
    {
        bonus = bonus6 + (i - 600000) * 0.015;
    }
    else if (i > 1000000)
    {
        bonus = bonus10 + (i - 1000000) * 0.01;
    }
    printf("Ã·≥…Œ™£∫\n%.1lf", bonus);
    printf("\n");
}#include <stdio.h>
int main()
{
    int num, arr[1000], sum;
    int i, j, numL = 0;
    scanf("%d", &num);
    //’“ƒ≥ ˝ÕÍ ˝
    for (j = 1; j <= (num / 2); i++)
    {
        if (num % j == 0)
        {
            arr[numL] = j;
            numL++;
            sum += j;
        }
        if(sum == j){
            printf("%d=", j);
            for (i = 0;i<)
        }
    }
}//±æ◊˜“µƒøµƒ «—ßœ∞Ω·ππÃÂ

#include <stdio.h>
#include <string.h>
#define N 12

int i = 0, j = 0; //∂®“Â»´æ÷±‰¡ø

struct student
{
    char name[10];
    int score;
} stu[N], tmp; //∂®“ÂΩ·ππÃÂ

int defname()
{
    strcpy(stu[0].name, "–°∫Ï");
    strcpy(stu[1].name, "–°¿∂");
    strcpy(stu[2].name, "–°¬Ã");
    strcpy(stu[3].name, "–°∞◊");
    strcpy(stu[4].name, "–°∫⁄");
    strcpy(stu[5].name, "–°√˜");
    strcpy(stu[6].name, "–°ª∆");
    strcpy(stu[7].name, "–°◊œ");
    strcpy(stu[8].name, "–°«‡");
    strcpy(stu[9].name, "–°ª™");
} //Ω·ππÃÂ¥Ê–’√˚

int sort()
{
    for (i = 0; i < 10; i++)
    {
        for (j = 0; j < 10 - i; j++)
            if (stu[j].score < stu[j + 1].score)
            {
                tmp = stu[j];
                stu[j] = stu[j + 1];
                stu[j + 1] = tmp;
            }
    }
} //≈≈–Ú

int getscore()
{
    for (i = 0; i < 10; i++)
    {
        printf("Please input %s's score:\n", stu[i].name);
        scanf("%d", &stu[i].score);
    }
}

int printname()
{
    system("cls");
    printf("The result is:\n");
    for (i = 0; i < 10; i++)
    {
        printf("%s:%d ", stu[i].name, stu[i].score);
    }
}

int main()
{
    defname();
    getscore();
    sort();
    printname();
}#include <stdio.h>
int main()
{
    int a, b;
    scanf("%d %d", &a, &b);
    printf("%d", a + b);
    return 0;
}#include <stdio.h>
#include <math.h>
double main()
{
    double a, b, c, delta;
    int moret0(double, double, double);
    int equal0(double, double);
    int lesst0();
    scanf("%lf %lf %lf", &a, &b, &c);
    delta = b * b - 4 * a * c;
    delta > 0 ? moret0(a, b, delta) : (delta == 0 ? equal0(a, b) : lesst0());
    return 0;
}
int lesst0()
{
    return 0;
}
int equal0(double a, double b)
{
    printf("x=%.2lf", -b / (2 * a));
    return 0;
}
int moret0(double a, double b, double delta)
{
    printf("x1=%.2lf x2=%.2lf", (-b + sqrt(delta)) / (2 * a), (-b - sqrt(delta)) / (2 * a));
    return 0;
}#include <stdio.h>
int main()
{
    int a, b, max, min;
    int maxf(int, int);
    int minf(int, int);
    scanf("%d %d", &a, &b);
    if (a < b)
    {
        a = a + b;
        b = a - b;
        a = a - b;
    } //a”ÎbΩªªªµƒ–°ºº«…°£Œ™ ≤√¥“™Ωªªªab£øø…≤ŒøºC”Ô—‘100Ã‚µƒµ⁄16Ã‚÷–µƒ’∑◊™œ‡≥˝∑®°£
    max = maxf(a, b);
    min = minf(a, b);
    printf("%d %d", max, min);
    return 0;
}

int maxf(int a, int b)
{
    int r;
    r = a % b;
    while (r != 0)
    {
        a = b;
        b = r;
        r = a % b;
    }
    return b;
}
//∆‰ µ¡Ω∏ˆ «≤Ó≤ª∂‡µƒ
int minf(int a, int b)
{
    int r, n;
    n = a * b;
    r = a % b;
    while (r != 0)
    {
        a = b;
        b = r;
        r = a % b;
    }
    return n / b;
}#include <stdio.h>
#include <math.h>
int main()
{
    double a, b, c, delta;
    scanf("%lf %lf %lf", &a, &b, &c);
    delta = b * b - 4 * a * c;
    if (delta == 0)
        printf("x=%.2lf", -b / 2 * a);
    else if (delta > 0)
        printf("x1=%.2lf x2=%.2lf", (-b + sqrt(delta)) / (2 * a), (-b - sqrt(delta)) / (2 * a));
    return 0;
}#include <stdio.h>
int main()
{
    int i;
    for (i = 1900; i <= 2000; i++)
        if (i % 400 == 0 || i % 100 != 0 && i % 4 == 0)
            printf("%d ", i);
    return 0;
}#include <stdio.h>
#include <math.h>
int main()
{
    int num[10], i, max;
    for (i = 0; i < 10; i++)
        scanf("%d", &num[i]);
    max = num[0];
    for (i = 0; i < 10; i++)
        if (num[i] > max)
            max = num[i];
    printf("%d", max);
    return 0;
}#include <stdio.h>

int main()
{
    printf("*****");
    printf("\n");
    printf("  *****");
    printf("\n");
    printf("    *****");
    printf("\n");
    printf("      *****");
    printf("\n");
    return 0;
}#include <stdio.h>

int main()
{
    printf("Hello World!");
    return 0;
}#include <stdio.h>

int main()
{
    int a, b, c, max;
    scanf("%d,%d,%d", &a, &b, &c);
    max = a;
    if (max < b)
        max = b;
    if (max < c)
        max = c;
    printf("%d", max);
    return 0;
}#include <stdio.h>
int main()
{
    int n, i, j, tmpCnt, cnt = 0, flag = 0;
    scanf("n=%d", &n);
    for (i = ; i <= n; i++)
    {
        flag = 0;
        tmpCnt = 0;
        for (j = 1; j <= i; j++)
        {
            if (i % j != 0)
                tmpCnt++;
        }
        if (tmpCnt == i - 2)
        {
            printf("%-5d", i);
            flag = 1;
            cnt++;
        }
        if (cnt % 10 == 0 && flag == 1)
        {
            printf("\n");
            flag == 0;
        }
    }
    printf("\n%d", cnt);
    return 0;
}
#include <stdio.h>
int main()
{
    int i;
    for (i = 1900; i <= 2000; i++)
        if ((i % 4 == 0 && i % 100 != 0) || i % 400 == 0)
            printf("%d ", i);
    return 0;
}
#include <io.h>
#include <direct.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 256

long total;

int countLines(const char *filename);
void findAllCodes(const char *path);
void findALLFiles(const char *path);

int countLines(const char *filename)
{
    FILE *fp;
    int count = 0;
    int temp;

    if ((fp = fopen(filename, "r")) == NULL)
    {
        fprintf(stderr, "Can not open the file£∫%s\n", filename);
        return 0;
    }

    while ((temp = fgetc(fp)) != EOF)
    {
        if (temp == '\n')
        {
            count++;
        }
    }

    fclose(fp);

    return count;
}

void findAllCodes(const char *path)
{
    struct _finddata_t fa;
    long handle;
    char thePath[MAX], target[MAX];

    strcpy(thePath, path);
    if ((handle = _findfirst(strcat(thePath, "/*.c"), &fa)) != -1L)
    {
        do
        {
            sprintf(target, "%s/%s", path, fa.name);
            total += countLines(target);
        } while (_findnext(handle, &fa) == 0);
    }

    _findclose(handle);
}

void findALLDirs(const char *path)
{
    struct _finddata_t fa;
    long handle;
    char thePath[MAX];

    strcpy(thePath, path);
    if ((handle = _findfirst(strcat(thePath, "/*"), &fa)) == -1L)
    {
        fprintf(stderr, "The path %s is wrong!\n", path);
        return;
    }

    do
    {
        if (!strcmp(fa.name, ".") || !strcmp(fa.name, ".."))
            continue;

        if (fa.attrib == _A_SUBDIR)
        {
            sprintf(thePath, "%s/%s", path, fa.name);
            findAllCodes(thePath);
            findALLDirs(thePath);
        }
    } while (_findnext(handle, &fa) == 0);

    _findclose(handle);
}

int main()
{
    char path[MAX] = ".";

    printf("º∆À„÷–...\n");

    findAllCodes(path);
    findALLDirs(path);

    printf("ƒø«∞ƒ„◊‹π≤–¥¡À %ld ––¥˙¬Î£°\n\n", total);
    system("pause");

    return 0;
}#include <stdio.h>
int N, c;
long long int a[1000000];
int judge(long long int mid)
{
    for (int i = 1, count = 1, tmp = a[0]; i <= N; i++)
    {
        if (a[i] - tmp >= mid)
        {
            tmp = a[i];
            count++;
        }
        if (count == c)
            return 1;
    }
    return 0;
}
void sort(long long int a[])
{
    for (int i = 0, tmp, min; i < N; i++)
    {
        for (int j = min = i; j < N; j++)
        {
            if (a[j] < a[min])
                min = j;
        }
        tmp = a[i];
        a[i] = a[min];
        a[min] = tmp;
    }
}
int main()
{
    long long int mid, ans;
    scanf("%d %d", &N, &c);
    for (int i = 0; i < N; i++)
        scanf("%lld", &a[i]);
    sort(a);
    // for (int i = 0; i < N; i++)
    //     printf("%lld ", a[i]); //for test sort
    long long int l = a[0], r = a[N - 1] - a[0];
    while (l <= r)
    {
        mid = (l + r) / 2;
        if (judge(mid))
        {
            ans = mid;
            l = mid + 1;
        }
        else
            r = mid - 1;
    }
    printf("%lld", ans);
}#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define N 5000 //ÂÆèÂèòÈáè‰ª•ÂÆö‰πâÊï∞ÈáèÁöÑÂ§öÂ∞ë

//ÂèòÈáèÁöÑÂ£∞Êòé
long long int id[N * N + 1], sz[N * N + 1], stat[N * N + 1];

//ÂàùÂßãÂåñÂáΩÊï∞
int init()
{
    for (long long int i = 1; i <= N * N; i++)
    {
        if (i <= N && i >= 1)
            id[i] = 1;
        else if (i >= N * N - (N - 1) && i <= N * N)
            id[i] = N * N;
        else
            id[i] = i;
        sz[i] = 1;
        stat[i] = 0;
    }
}

//Êü•ÊâæÊ†πËäÇÁÇπ„ÄÅË∑ØÂæÑÂéãÁº©
long long int find_root(long long int i)
{
    while (id[i] != i)
    {
        id[i] = id[id[i]];
        i = id[i];
    }
    return i;
}

//Âà§Êñ≠ÊòØÂê¶ËÅîÈÄö
int connected(long long int p, long long int q)
{
    if (find_root(p) == find_root(q))
        return 1;
    else
        return 0;
}

//ËÅîÂêà‰∏§Êï∞
void connect(long long int p, long long int q)
{
    long long int i = find_root(p);
    long long int j = find_root(q);
    if (sz[i] > sz[j])
    {
        id[j] = i;
        sz[i] += sz[j];
    }
    else
    {
        id[i] = j;
        sz[j] += sz[i];
    }
}

//ËÅîÂêàËØ•ÁÇπ‰∏éËØ•ÁÇπÂõõÂë®ÁöÑÊï∞
void unionf(long long int p)
{
    if (p != N * N && p % N != 0)
        if (stat[p + 1] == 1)
            connect(p, p + 1);
    if (p != 1 && p % N != 1)
        if (stat[p - 1] == 1)
            connect(p, p - 1);
    if (p + N <= (N * N))
        if (stat[p + N] == 1)
            connect(p, p + N);
    if (p - N >= 1)
        if (stat[p - N] == 1)
            connect(p, p - N);
}
//Âà§Êñ≠ÊòØÂê¶ËøûÈÄö
int check()
{
    if (connected(1, N * N) == 1)
        return 1;
    return 0;
}

//DEBUG
void debug()
{
    {
        for (long long int i = 1; i <= N * N; i++)
        {
            if (stat[i])
            {
                printf("\033[32;1m%-7c\033[0m", 'o');
            }
            else
                printf("%-7c", 'x');
            if (i % N == 0)
                printf("\n");
        }
        printf("\n");
        for (long long int i = 1; i <= N * N; i++)
        {
            printf("%-2lld", i);
            printf("\033[32;1m %-3lld\033[0m ", id[i]);
            if (i % N == 0)
                printf("\n");
        }
        printf("\n");
        for (long long int i = 1; i <= N * N; i++)
        {
            printf("%-2lld", i);
            printf("\033[32;1m %-3lld\033[0m ", find_root(i));
            if (i % N == 0)
                printf("\n");
        }
        printf("\n");
    }
}

int main()
{
    init();
    srand((unsigned int)time(NULL));
    long long int p;
    int times = 0;
    while (1)
    {
        p = rand() % (N * N) + 1;
        if (stat[p] == 0)
        {
            stat[p] = 1;
            unionf(p);
            times++;
        }
        if (check() == 1)
            break;
    }
    // debug(); //debug
    printf("%lf", (double)times / (N * N));
}// #include <stdio.h>
// int count(int n)
// {
//     int total;
//     if (n == 1)
//         total = 1;
//     else
//     {
//         total = (count(n - 1) + 1) * 2;
//     }
//     return total;
// }
// int count1(float n, float x)
// {
//     if (n == 0)
//         return 1;
//     else if (n == 1)
//         return x;
//     else
//         return ((2 * n - 1) * x - count1(n - 1, x) - (n - 1) * count1(n - 2, x)) / n;
// }
// int main()
// {
//     float input1, input2;
//     float r;
//     scanf("%f %f", &input1, &input2);
//     r = count1(input1, input2);
//     printf("%f", r);
// }
// #include <stdio.h>
// char *(*function)(char *string, char *substring);

// void input(char *string, char *substring)
// {
//     printf(" ËØ∑ËæìÂÖ•Â≠óÁ¨¶‰∏≤:");
//     gets(string);
//     printf(" ËØ∑ËæìÂÖ•Ë¶ÅÊêúÁ¥¢ÁöÑÂ≠óÁ¨¶‰∏≤:");
//     gets(substring);
// }
// int stringlen(char *string)
// {
//     int i = 0;
//     while (string[i] != '\0')
//         i++;
//     return i;
// }
// char *search_string(char *string, char *search_string)
// {
//     int i, j, k;
//     k = stringlen(string) - stringlen(search_string);
//     if (k > 0 && NULL != string && NULL != search_string)
//     {
//         for (i = 0; i <= k; i++)
//             for (j = i; string[j] == search_string[j - i]; j++)
//                 if (search_string[j - i + 1] == '\0')
//                     return string + i + stringlen(search_string);
//     }
//     return NULL;
// }

// void print(char *ret_string)
// {
//     if (ret_string != NULL)
//         printf(" ÊâÄÊêúÁ¥¢Â≠óÁ¨¶‰∏≤‰πãÂêéÁöÑÂ≠óÁ¨¶‰∏∫:%s\n", ret_string);
//     else
//         printf(" Ê≤°ÊúâÊâæÂà∞ÊâÄË¶ÅÊêúÁ¥¢ÁöÑÂ≠óÁ¨¶‰∏≤\n");
// }
// void main()
// {
//     char stringA[50], stringB[50];
//     char search_stringA[50], search_stringB[50];
//     char *ret_stringA, *ret_stringB;
//     input(stringA, search_stringA);
//     ret_stringA = search_string(stringA, search_stringA);
//     printf(" Áõ¥Êé•Ë∞ÉÁî®ÂáΩÊï∞search_string()\n");
//     print(ret_stringA);
//     input(stringB, search_stringB);
//     function = search_string;
//     ret_stringB = function(stringB, search_stringB);
//     printf(" ‰ΩøÁî®ÂáΩÊï∞ÊåáÈíàfunction Ë∞ÉÁî®ÂáΩÊï∞search_string()\n");
//     print(ret_stringB);
//     return;
// }
// #include <stdio.h>
// #define STR "Hello World!"
// void main()
// {
//     char *STR = "This is a string!!!";
//     printf(" Â≠óÁ¨¶‰∏≤‰∏≠ÁöÑÂÆè%s\n", "STR!");
//     printf(" Â≠óÁ¨¶‰∏≤‰∏≠ÁöÑÂÆè STR Âíå‰∏çÂú®Â≠óÁ¨¶‰∏≤‰∏≠ÁöÑÂÆè: %s\n", STR);
//     printf(" Âá∫Áé∞Âú®Â≠óÁ¨¶‰∏≤ÂèòÈáèÂêç‰∏≠ÁöÑÂÆè: %s\n", STR);
//     return;
// }
// #include <stdio.h>
// int main()
// {
//     int a[10], tmp, i, *max, *min;
//     for (i = 0; i < 5; i++)
//     {
//         scanf("%d", &a[i]);
//         if (i == 0)
//             max = min = a;
//         else if (a[i] > *max)
//             max = &a[i];
//         else if (a[i] < *min)
//             min = &a[i];
//     }
//     tmp = *min;
//     *min = *max;
//     *max = tmp;
//     for (i = 0; i < 5; i++)
//         printf("%d ", a[i]);
// }
// #include <stdio.h>
// int main()
// {
//     int a[3][3], i, j, n;
//     scanf("%d", &n);
//     for (i = 0; i < 3; i++)
//     {
//         for (j = 0; j < 3; j++)
//         {
//             scanf("%d", &a[i][j]);
//             if (j >= i)
//                 a[i][j] += n;
//             printf("%d", a[i][j]);
//         }
//         printf("\n");
//     }
// }
// #include <stdio.h>
// int main()
// {
//     int n, i, num = 1, tmp = 1;
//     double s;
//     scanf("%d", &n);
//     for (i = 0; i < 2 * n; i++)
//     {
//         s += tmp * (1 / (float)num);
//         num = num + 1;
//         tmp = -tmp;
//     }
//     printf("%lf", s);
// }
#include <stdio.h>

struct
{
    int hh;
    double b;
    char a;
} ab;
int main()
{
    int a = 0;
    a + 1;
}
#include <stdio.h>
// void main()
// {
//     int n[2], i, j, k;
//     for (i = 0; i < 2; i++)
//         n[i] = 0;
//     k = 2;
//     printf("\n\n");
//     for (i = 0; i < k; i++)
//         for (j = 0; j < k; j++)
//         {
//             n[j] = n[i] + 1;
//             printf("n[%d] = n[%d] + 1\n", j, i);
//             printf("n[%d]=%d\n\n", j, n[j]);
//         }
//     printf("%d\n", n[1]);
// }
// int main()
// {
//     int a[10], i, j, tmp;
//     for (i = 0; i < 10; i++)
//     {
//         a[i] = i;
//     }
//     for (i = 0; i < 10 - 1; i++)
//         for (j = 0; j < 10 - i - 1; j++)
//             if (a[j] < a[j + 1])
//             {
//                 tmp = a[j];
//                 a[j] = a[j + 1];
//                 a[j + 1] = tmp;
//             }
//     for (i = 0; i < 10; i++)
//         printf("%d ", a[i]);
// }
// int main()
// {
//     int a[10], i, j, max;
//     for (i = 0; i < 10; i++)
//     {
//         a[i] = i;
//     }
//     for (i = 0; i < 10; i++)
//     {
//         max = a[i];
//         for (j = i; j < 10; j++)
//             if (a[j] > max)
//             {
//                 max = a[j];
//                 a[j] = a[i];
//                 a[i] = max;
//             }
//     }
//     for (i = 0; i < 10; i++)
//         printf("%d ", a[i]);
// }

// #include <stdio.h>
// #include <math.h>
// int sushu(int x)
// {
//     for (int i = 3; i <= sqrt(x); i += 2)
//     {
//         if (x % i == 0)
//             return 0;
//     }
//     return 1;
// }
// int main()
// {
//     int n, tax;
//     scanf("%d", &n);
//     if (n == 2)
//         tax = 1; //2ÊòØÁ¥†Êï∞
//     else if (n % 2 == 0)
//         tax = 2; //Ê¨ßÊãâÂÆöÁêÜÔºåÂ§ß‰∫é2ÁöÑÂÅ∂Êï∞ÂèØ‰ª•‰∏∫‰∏§‰∏™Á¥†Êï∞‰πãÂíå
//     else if (sushu(n))
//         tax = 1;
//     else if (sushu(n - 2))
//         tax = 2;
//     else
//         tax = 3;
//     printf("%d", tax);
// }

// #include <stdio.h>
// int main()
// {
//     int k1, k2, k4, k6, k10;
//     int m, tol;
//     scanf("%d", &m);
//     k1 = 100000 * 0.1;
//     k2 = k1 + 100000 * (2 - 1) * 0.075;
//     k4 = k2 + 100000 * (4 - 2) * 0.05;
//     k6 = k4 + 100000 * (6 - 4) * 0.03;
//     k10 = k6 + 100000 * (10 - 6) * 0.015;
//     if (m <= 100000 && m >= 0)
//         tol = m * 0.1;
//     else if (m <= 200000 && m > 100000)
//         tol = (m - 100000) * 0.075 + k1;
//     else if (m <= 400000 && m > 200000)
//         tol = (m - 200000) * 0.05 + k2;
//     else if (m <= 600000 && m > 400000)
//         tol = (m - 400000) * 0.03 + k4;
//     else if (m <= 1000000 && m > 600000)
//         tol = (m - 600000) * 0.015 + k6;
//     else if (m > 1000000)
//         tol = (m - 1000000) * 0.01 + k10;
//     else
//         return 0;
//     printf("%d", tol);
// }
#include <stdio.h>
#include <stdlib.h>
struct Linknode
{
    int id;
    struct Linknode *next;
} * head;
int main()
{
    int n, sk;
    scanf("%d %d", &n, &sk);
    struct Linknode *p;
    head = p = (struct Linknode *)malloc(sizeof(struct Linknode));
    for (int i = 1; i <= n; i++)
    {
        p->id = i;
        if (i == n)
            p->next = head;
        else
            p->next = (struct Linknode *)malloc(sizeof(struct Linknode));
        p = p->next;
    }
    p = head;
    int cnt = 1;
    while (p->next != p)
    {
        p = p->next;
        cnt++;
        if (cnt == sk - 1)
        {
            p->next = p->next->next;
            p = p->next;
            cnt = 1;
        }
    }
    printf("%d", p->id);
}#include <stdio.h>
int main()
{
    int i, g, s, b;
    int result(int);
    for (i = 100; i <= 999; i++)
    {
        if (result(i) == i)
            printf("%d\n", i);
    }
}
int result(int m)
{
    int b, s, g;
    b = m / 100;
    s = m / 10 % 10;
    g = m % 10;
    if (g * g * g + s * s * s + b * b * b == m)
        return m;
    else
        return 0;
}#include <stdio.h>
#include <string.h>
int main()
{
    char a[] = "AcC";
    char b[] = {'b', 'b', 'c'};
    char *p = b;
    printf("%ld\n", strlen(a));
    printf("%ld\n", strlen(b));
    for (; *p != '\0'; p++)
        printf("%c", *p);
}
#include <stdio.h>
int main()
{
    int i;
    float sum = 0, a, b, tmp;
    for (i = 1, a = 2, b = 1; i <= 20; i++)
    {
        sum += a / b;
        {
            a = a + b;
            b = a - b;
        }
    }
    printf("%f", sum);
}#include <stdio.h>
int main()
{
    int count;
    int length(char *);
    char a[200];
    gets(a);
    count = length(a);
    printf("%d", count);
}
int length(char *p)
{
    int count = 0;
    for (; *p != '\0'; p++)
        count++;
    return count;
}#include <stdio.h>
int main()
{
    int a[3][4], maxi, maxj, max, i, j;
    for (i = 0; i < 3; i++)
        for (j = 0; j < 4; j++)
            scanf("%d", &a[i][j]);
    max = a[0][0];
    for (i = 0; i < 3; i++)
        for (j = 0; j < 4; j++)
            if (a[i][j] > max)
            {
                max = a[i][j];
                maxi = i;
                maxj = j;
            }
    printf("max is %d \n maxi is %d \n maxj is %d", max, maxi, maxj);
}// Áî®ÈÄâÊã©Ê≥ïÂØπ10‰∏™Êï¥Êï∞ÊéíÂ∫è
#include <stdio.h>
#define N 50000
int main()
{
    int index, i, j, tmp, a[N];
    for (i = 0; i < N; i++)
    {
        a[i] = i;
    }
    for (i = 0; i < N - 1; i++)
    {
        index = i;
        for (j = i + 1; j < N; j++)
        {
            if (a[j] > a[index])
                index = j;
        }
        tmp = a[index];
        a[index] = a[i];
        a[i] = tmp;
    }
    for (i = 0; i < N; i++)
    {
        printf("%d ", a[i]);
    }
}//Á≠õÈÄâÊ≥ïÊ±Ç100‰ª•ÂÜÖÁ¥†Êï∞
#include <stdio.h>
#include <math.h>
#define N 100
int main()
{
    int i, j, a[101] = {0};
    for (i = 2; i <= sqrt(N); i++)
    {
        for (j = i + 1; j <= N; j++)
        {
            if (a[j] == 1)
                continue;
            if (j % i == 0)
                a[j] = 1;
        }
    }
    for (i = 1; i <= 100; i++)
        if (a[i] != 1)
            printf("%d ", i);
}#include <stdio.h>
int main()
{
    int a, b, c, *p1 = &a, *p2 = &b, *p3 = &c, tmp;
    scanf("%d,%d,%d", p1, p2, p3);
    if (*p1 > *p2)
    {
        tmp = *p1;
        *p1 = *p2;
        *p2 = tmp;
    }
    if (*p2 > *p3)
    {
        tmp = *p2;
        *p2 = *p3;
        *p3 = tmp;
    }
    if (*p1 > *p2)
    {
        tmp = *p1;
        *p1 = *p2;
        *p2 = tmp;
    }
    printf("%d %d %d", *p3, *p2, *p1);
}#include <stdio.h>
int main()
{
    int i, j, a[3][4], m1[3], m2[4];
    for (i = 0; i < 3; i++)
        for (j = 0; j < 4; j++)
            scanf("%d", &a[i][j]);
    for (i = 0; i < 3; i++)
    {
        m1[i] = a[i][0];
        for (j = 0; j < 4; j++)
            if (a[i][j] > m1[i])
                m1[i] = a[i][j];
    }
    for (i = 0; i < 4; i++)
    {
        m2[i] = a[0][i];
        for (j = 0; j < 3; j++)
            if (a[j][i] < m2[i])
                m2[i] = a[j][i];
    }
    for (i = 0; i < 3; i++)
        for (j = 0; j < 4; j++)
            if (a[i][j] == m1[i] && a[i][j] == m2[j])
                printf("%d %d %d", a[i][j], i, j);
}#include <stdio.h>
int main()
{
    char a[81];
    int i, cnt = 0;
    gets(a);
    for (i = 0; i < 80; i++)
        if (a[i] >= 'a' && a[i] <= 'z' || a[i] >= 'A' && a[i] <= 'Z')
            cnt++;
    printf("%d", cnt);
}#include <stdio.h>
int main()
{
    int n, i, j, *max, tmp;
    scanf("%d", &n);
    int a[n], *p = a;
    for (i = 0; i < n; i++)
    {
        scanf("%d", a + i);
        printf("%d ", *(a + i));
    }
    printf("\n");
    for (i = 0; i < n; i++)
    {
        max = a + i;
        for (j = i; j < n; j++)
            if (*(a + j) > *max)
            {
                tmp = *max;
                *max = *(a + j);
                *(a + j) = tmp;
            }
    }
    for (i = n - 1; i > -1; i--)
        printf("%d ", *(a + i));
}#include <stdio.h>
#define PI 3.1415926

int main()
{
    double r, h;
    scanf("%lf %lf", &r, &h);
    printf("%.2lf %.2lf %.2lf %.2lf", PI * 2 * r, PI * r * r, PI * r * 2 * h, PI * r * r * h);
    return 0;
}#include <stdio.h>

int main()
{
    int a;
    scanf("%d", &a);
    a += a -= a * a;
    printf("%d", a);
    return 0;
}#include <stdio.h>
#include <math.h>

int main()
{
    double a, n, p;
    scanf("%lf,%lf,%lf", &a, &n, &p);
    a = pow(1 + p, n) * a - a;
    printf("Acc=%.3lf", a);
    return 0;
}
#include <stdio.h>
int main()
{
    int i, a, n, tmp, max;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
    {
        if (i == 0)
        {
            scanf("%d", &max);
            tmp = i;
        }
        else
        {
            scanf("%d", &a);
            if (a > max)
            {
                max = a;
                tmp = i;
            }
        }
    }
    printf("%d %d", max, tmp);
}#include <stdio.h>
typedef struct Infor
{
    char name[20];
    int no, age;
    char sex;
} inf;
int main()
{
    inf s[100];
    int n, i;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
    {
        fscanf(stdin, "%d %s %c %d", &s[i].no, s[i].name, &s[i].sex, &s[i].age);
    }
    for (i = 0; i < n; i++)
    {
        printf("%6d%11s%3c%6d\n", s[i].no, s[i].name, s[i].sex, s[i].age);
    }
}
#include <stdio.h>
#include <math.h>

int main()
{
    double d = 300000, p = 6000, r = 0.01, m;
    m = log(p / (p - d * r)) / log(1 + r);
    printf("%.2lf", m);
    return 0;
}#include <stdio.h>
typedef struct Infor inf;
struct Infor
{
    int val;
    inf *next;
} * head, *p;
int main()
{
    int n, i;
    scanf("%d", &n);
    inf s[n];
    head = s;
    for (i = 0, p = head; i < n; i++, p++)
    {
        fscanf(stdin, "%d", &p->val);
        if (i == n - 1)
            p->next = NULL;
        else
            p->next = p + 1;
    }
    for (p = head;;)
    {
        printf("%d ", p->val);
        if (p++->next == NULL)
            break;
    }
}
#include <stdio.h>
int main()
{
    int a[10] = {10, 20, 30, 40, 50, 60, 70, 80, 90, 99};
    int *p = a, i, tmp, f = 1;
    scanf("%d", &tmp);
    for (i = 0; i < 10; i++, p++)
    {if(tmp<)
        printf("%d ", *p);
        if ((tmp >= *p && tmp < *(p + 1) || tmp >= *p && i == 9) && f == 1)
        {
            printf("%d ", tmp);
            f = 0;
        }
    }
}#include <stdio.h>
#include <math.h>
int main()
{
    double result(double, double, double);
    double a, b, c;
    scanf("%lf,%lf,%lf", &a, &b, &c);
    printf("%f", result(a, b, c));
}
double result(double a, double b, double c)
{
    double p, s;
    p = (a + b + c) / 2;
    s = sqrt(p * (p - a) * (p - b) * (p - c));
    return s;
}#include <stdio.h>
int main()
{
    int a[20], b[20], i, j, c1 = 0, c2 = 20, tmp;
    for (i = 0; i < 20; i++)
        scanf("%d", &a[i]);
    for (i = 0; i < 20; i++)
    {
        if (a[i] < 0)
        {
            b[c1] = a[i];
            c1++;
        }
    }
    c2--;
    for (i = 0; i < 20; i++)
    {
        if (a[i] > 0)
        {
            b[c2] = a[i];
            c2--;
        }
    }
    for (i = 0; i < 20; i++)
        printf("%d ", b[i]);
}#include <stdio.h>
#include <math.h>

int main()
{
    int money, sw;
    scanf("%d", &money);
    double n1, n2, n4, n6, n10, npp;
    n1 = money * 0.01;
    n2 = n1 + (money - 100000) * 0.075;
    n4 = n2 + (money - 200000) * 0.05;
    n6 = n4 + (money - 400000) * 0.03;
    n10 = n6 + (money - 600000) * 0.015;
    npp = n10 + (money - 1000000) * 0.01;
    sw = money / 100000;
    //switch  µœ÷
    switch (sw)
    {
    case 0:
        printf("%lf\n", n1);
        break;
    case 1:
        printf("%lf\n", n2);
        break;
    case 2:
    case 3:
        printf("%lf\n", n4);
        break;
    case 4:
    case 5:
        printf("%lf\n", n6);
        break;
    case 7:
    case 8:
    case 9:
        printf("%lf\n", n10);
        break;
    default:
        printf("%lf\n", npp);
    }
    //IF µœ÷
    if (money <= 100000)
    {
        printf("%lf\n", n1);
    }
    else if (money >= 100000 && money < 200000)
    {
        printf("%lf\n", n2);
    }
    else if (money >= 100000 && money < 200000)
    {
        printf("%lf\n", n2);
    }
    else if (money >= 200000 && money < 400000)
    {
        printf("%lf\n", n4);
    }
    else if (money >= 400000 && money < 600000)
    {
        printf("%lf\n", n6);
    }
    else if (money >= 600000 && money < 1000000)
    {
        printf("%lf\n", n10);
    }
    else
    {
        printf("%lf\n", npp);
    }
    return 0;
}#include <stdio.h>
int main()
{
    // FILE *fp1, *fp2;
    // char tmp;
    // fp1 = fopen("10.1.txt", "r");
    // fp2 = fopen("10.2.txt", "r");
    // while (!feof(fp1))
    //     putchar(fgetc(fp1));
    // fclose(fp1);
    // printf("\n");
    // while (!feof(fp2))
    //     putchar(fgetc(fp2));
    // fclose(fp2);
    printf("123456");
    printf("abcdef");
}#include <stdio.h>
#include <math.h>

int main()
{
    double a1 = 0.015, a2 = 0.021, a3 = 0.0275, a5 = 0.03, ah = 0.0035;
    printf("%lf\n", 1000 * (1 + 5 * a5) - 1000);
    printf("%lf\n", 1000 * (1 + 2 * a2) * (1 + 3 * a3) - 1000);
    printf("%lf\n", 1000 * (1 + 3 * a3) * (1 + 2 * a2) - 1000);
    printf("%lf\n", 1000 * pow((1 + 1 * a1), 5) - 1000);
    printf("%lf\n", 1000 * pow((1 + ah / 4), 4 * 4) - 1000);
    return 0;
} #include <stdio.h>
#include <stdlib.h>
#include <string.h>
//ÈïøÂ∫¶ÂÆö‰πâ
#define LEN sizeof(LB)
//ÁªìÊûÑ‰ΩìÂÆö‰πâ
typedef struct LianBiao LB;
struct LianBiao
{
    char value[20];
    LB *next;
};
LB *head;
//Â£∞Êòé
LB *findNow();
LB *locationId(int id);
// int *findByValue(char target[]);
int print();
//ÂèòÈáè
int init = 0;
int creat(int count)
{
    LB *p;
    int i;
    if (init == 0)
    {
        p = head = (LB *)malloc(LEN * count);
        // printf("ÂàùÂßãÂåñÊàêÂäü,Â§¥Âú∞ÂùÄ‰∏∫%d\n", head);
    }
    //üëÜËã•Êó†ÂàôÂàùÂßãÂåñ
    else
    {
        p = findNow(); //ÊâæÂà∞Êú´Á´Ø
        // printf("Êú´Á´ØÂú∞ÂùÄ‰∏∫%d\n", p);
        p->next = (LB *)malloc(LEN * count);
        // printf("‰∏ã‰∏Ä‰∏™ÁöÑÂú∞ÂùÄÊòØ%d\n", p->next);
    }
    for (i = 0;; i++, p = p->next)
    {
        // printf("ÂàõÂª∫Á¨¨%lld‰∏™ÁªìÊûÑ‰Ωì,Âú∞ÂùÄ‰∏∫%d\n", i, p);
        if (i == count - 1)
        {
            p->next = NULL;
            break;
        }
        else
        {
            p->next = p + 1;
        }
    }
}
int input()
{
    LB *p;
    for (p = head;; p = p->next)
    {
        scanf("%s", p->value);
        // printf("ÁªìÊûÑ‰ΩìÂÄº‰∏∫%sÁöÑÂú∞ÂùÄÊòØ%d\n", p->value, p);
        if (p->next == NULL)
            break;
    }
}
LB *findNow()
{
    LB *p;
    for (p = head;; p = p->next)
        if (p->next == NULL)
            break;
    return p;
}
LB *locationId(int id)
{
    LB *p;
    int i;
    for (p = head, i = 0; i < id; i++, p = p->next)
        if (p->next == NULL)
            return (LB *)-1;
    return p;
}
int insert(int id, char value[])
{
    LB *p, *tmp;
    if (locationId(id) == (LB *)-1)
    {
        printf("‰∏çÂ≠òÂú®Ê≠§ID,‰∏çÊ∑ªÂä†‰ªª‰ΩïÊï∞ÊçÆ\n");
        return -1;
    }
    else
        p = locationId(id);
    if (p == head)
    {
        p = (LB *)malloc(LEN);
        p->next = head;
        strcpy(p->value, value);
        head = p;
    }
    else
    {
        tmp = (LB *)malloc(LEN);
        strcpy(tmp->value, p->value);
        tmp->next = p->next;
        p->next = tmp;
        strcpy(p->value, value);
    }
}
int del(int id)
{
    LB *p, *tmp;
    if (locationId(id) == (LB *)-1)
    {
        printf("‰∏çÂ≠òÂú®Ê≠§ID,‰∏çÂà†Èô§‰ªª‰ΩïÊï∞ÊçÆ\n");
        return -1;
    }
    else
        p = locationId(id);
    if (p == head)
        head = p->next;
    else
    {
        p = locationId(id - 1);
        p->next = p->next->next;
    }
}
int editByValue(int id, char value[])
{
    LB *p, *tmp;
    if (locationId(id) == (LB *)-1)
    {
        printf("‰∏çÂ≠òÂú®Ê≠§ID,‰∏ç‰øÆÊîπ‰ªª‰ΩïÊï∞ÊçÆ\n");
        return -1;
    }
    else
        p = locationId(id);
    strcpy(p->value, value);
}
int print()
{
    LB *p;
    // printf("ËæìÂá∫ÂÜÖÂÆπ:\n");
    for (p = head;; p = p->next)
    {
        printf("%s ", p->value);
        if (p->next == NULL)
        {
            printf("\n");
            break;
        }
    }
}
int findByValue(char target[])
{
    LB *p;
    int i;
    for (i = 0, p = head;; i++, p = p->next)
    {
        if (strcmp(p->value, target) == 0)
            return i;
        else if (p->next == NULL)
            return -1;
    }
}
int main(void)
{
    int n;
    char value[20];
    // ÂàõÂª∫
    {
        scanf("%d", &n);
        creat(n);
        input();
        print();
    }
    // ÊèíÂÖ•
    {
        scanf("%d %s", &n, value);
        insert(n, value);
        print();
    }
    // Êü•ËØ¢
    {
        scanf("%s", value);
        if (findByValue(value) == -1)
            printf("NO\n");
        else
            printf("Find at : %d\n", findByValue(value));
        print();
    }
    // Âà†Èô§
    {
        scanf("%d", &n);
        del(n);
        print();
    }
    // ‰øÆÊîπ
    {
        scanf("%d %s", &n, value);
        editByValue(n, value);
        print();
    }
}#include <stdio.h>
int main()
{
    int #include <stdio.h>
int main()
{
    void r1(), r2();
    int n;
    printf("****************\n* Menu section *\n* 1. Design(&) *\n* 2. Design($) *\n* 3. Exit      *\n****************");
    scanf("%d", &n);
    if (n == 1)
        r1();
    if (n == 2)
        r2();
    if (n == 3)
        return 0;
}
void r1()
{
    printf("&&&&&&&&&&\n &&&&&&&&&&\n  &&&&&&&&&&\n   &&&&&&&&&&\n    &&&&&&&&&&\n     &&&&&&&&&&\n      &&&&&&&&&&\n       &&&&&&&&&&\n        &&&&&&&&&&");
}
void r2()
{
    printf("        $$$$$$$$$$\n       $$$$$$$$$$\n      $$$$$$$$$$\n     $$$$$$$$$$\n    $$$$$$$$$$\n   $$$$$$$$$$\n  $$$$$$$$$$\n $$$$$$$$$$\n$$$$$$$$$$");
}//Õ¨41-2//Õ¨41-3#include <stdio.h>

int main()
{
    int y, m, d, currentDay;
    scanf("%d,%d,%d", &y, &m, &d);
    switch (m)
    {
    case 1:
        currentDay = 1;
        break;
    case 2:
        currentDay = 32;
        break;
    case 3:
        currentDay = 59;
        break;
    case 4:
        currentDay = 90;
        break;
    case 5:
        currentDay = 120;
        break;
    case 6:
        currentDay = 151;
        break;
    case 7:
        currentDay = 181;
        break;
    case 8:
        currentDay = 212;
        break;
    case 9:
        currentDay = 243;
        break;
    case 10:
        currentDay = 273;
        break;
    case 11:
        currentDay = 304;
        break;
    case 12:
        currentDay = 334;
    }
    currentDay += d;
    if ((y % 400 == 0 || y % 100 != 0 && y % 4 == 0) && m > 2)
    {
        currentDay++;
    }
    printf("It is the %dth day.", currentDay);
    return 0;
}#include <stdio.h>
int main()
{
    int num;
    scanf("%d", &num);
    if (num % 2 == 0)
    {
        printf("even number");
    }
    else
    {
        printf("odd number");
    }
    return 0;
}#include <stdio.h>
int main()
{
    float a, b, c;
    scanf("%f,%f,%f", &a, &b, &c);
    if (a + b >= c && a + c >= b && b + c >= a)
    {
        if (a == b && b == c)
        {
            printf("equilateral triangle");
        }
        else if (a == b || b == c || a == c)
        {
            printf("isosceles triangle");
        }
        else
        {
            printf("ordinary triangle");
        }
    }
    else
    {
        printf("cannot form a triangle");
    }
    return 0;
}
#include <stdio.h>
int main()
{
    int swi;
    scanf("%d", &swi);
    switch (swi)
    {
    case 0:
        printf("Sunday");
        break;
    case 1:
        printf("Monday");
        break;
    case 2:
        printf("Tuesday");
        break;
    case 3:
        printf("Wednesday");
        break;
    case 4:
        printf("Thursday");
        break;
    case 5:
        printf("Friday");
        break;
    case 6:
        printf("Saturday");
    }
    return 0;
}#include <stdio.h>
#include <math.h>

int main()
{
    int h1, m1, s1, h2, m2, s2, time1, time2, time;
    scanf("%d:%d:%d", &h1, &m1, &s1);
    scanf("%d:%d:%d", &h2, &m2, &s2);
    time1 = h1 * 3600 + m1 * 60 + s1;
    time2 = h2 * 3600 + m2 * 60 + s2;
    time = abs(time1 - time2);
    h1 = time / 3600;
    m1 = time / 60 % 60;
    s1 = time % 60;
    printf("%02d:%02d:%02d", h1, m1, s1);
    return 0;
}#include <stdio.h>

int main()
{
    int y, m, i, bigMonF = 0, rYearF = 0;
    int bigMon[7] = {1, 3, 5, 7, 8, 10, 12};
    scanf("%d,%d", &y, &m);
    for (i = 0; i < 7; i++)
    {
        if (m == bigMon[i])
        {
            bigMonF = 1;
        }
    }
    if (y % 400 == 0 || y % 100 != 0 && y % 4 == 0)
    {
        rYearF = 1;
    }
    //44-8.c
    if (rYearF == 0 && m == 2)
    {
        printf("28");
    }
    else if (rYearF == 1 && m == 2)
    {
        printf("29");
    }
    else if (bigMonF == 1)
    {
        printf("31");
    }
    else
    {
        printf("30");
    }
    return 0;
}#include <stdio.h>

void main(void)

{

    int x;

    scanf("%d", &x);

    if (x > 0)

        printf("Positive integer!\n");

    else if (x == 0)

        printf("Zero!\n");

    else

        printf("Negative integer!\n");
}#include <stdio.h>

void main(void)

{

    int x, y;

    printf("??????x??????");

    scanf("%d", &x);

    if (x >= -2 && x <= 2)

        y = 10;

    else

        y = 0;

    printf("y=%d\n", y);
}
#include <stdio.h>
#include <math.h>

int main()
{
    double x, y;
    scanf("%lf", &x);
    if (x == 0)
    {
        y = 1.0;
    }
    else if (x < 0)
    {
        y = 2 * x + 1;
    }
    else if (x > 0)
    {
        y = x * x * x + 1;
    }
    printf("%.2f\n", y);
    return 0;
}#include <stdio.h>
int main()
{
    int n;
    scanf("%d", &n);
    if (n % 3 == 0 && n % 5 == 0)
    {
        printf("True");
    }
    else
    {
        printf("False");
    }
    return 0;
}#include <stdio.h>

int main()
{
    int num;
    scanf("%d", &num);
    if (num >= 1 && num <= 10)
        ;
    else
        return 0;
    switch (num)
    {
    case 1:
        printf("one");
        break;
    case 2:
        printf("two");
        break;
    case 3:
        printf("three");
        break;
    case 4:
        printf("four");
        break;
    case 5:
        printf("five");
        break;
    case 6:
        printf("six");
        break;
    case 7:
        printf("seven");
        break;
    case 8:
        printf("eight");
        break;
    case 9:
        printf("nine");
        break;
    case 10:
        printf("ten");
    }
    return 0;
}
#include <stdio.h>
int main()
{
    int i, num[50], zs = 0, fs = 0, zero = 0;
    for (i = 1; i <= 10; i++)
    {
        scanf("%d", &num[i]);
    }
    for (i = 1; i <= 10; i++)
    {
        if (num[i] == 0)
        {
            zero++;
        }
        else if (num[i] > 0)
        {
            zs++;
        }
        else // num[i]<0
        {
            fs++;
        }
    }
    printf("%d %d %d", zs, fs, zero);
    return 0;
}#include <stdio.h>

void main(void)

{

    int x;

    scanf("%d", &x);

    if (x > 0)

        printf("Positive integer!\n");

    else if (x == 0)

        printf("Zero!\n");

    else

        printf("Negative integer!\n");
}//Õ¨44-27.c//Õ¨44-28.c#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int main()
{
    int numL, i, targetNum, num[100];
    char target[100];
    scanf("%s", &target);
    targetNum = atoi(target);
    numL = strlen(target);
    if (numL > 5)
    {
        return 0;
    }
    for (i = numL; i != 0; i--)
    {
        num[i] = (int)((targetNum / (int)pow(10, (i - 1))) % 10);
    }
    for (i = 1; i <= numL; i++)
    {
        printf("%d", num[i]);
    }
    return 0;
}//Õ¨44-29.c#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int main()
{
    //”√µΩ¡ÀÕ®”√µƒΩ‚æˆ∞Ï∑®
    int numL, i, targetNum, num[100];
    char target[100];
    scanf("%s", &target);
    targetNum = atoi(target);
    numL = strlen(target);
    for (i = numL; i != 0; i--)
    {
        num[i] = (int)((targetNum / (int)pow(10, (i - 1))) % 10);
    }
    //’˝ Ω≥Ã–Ú
    if (targetNum >= 10000 && targetNum < 100000)
    {
        if (num[1] == num[5] && num[2] == num[4])
        {
            printf("Yes");
        }
        else
        {
            printf("No");
        }
    }
    else
        printf("Failure");
    return 0;
}
#include <stdio.h>

void main(void)

{

    int x, k;

    printf("«Î ‰»Îxµƒ÷µ£∫\n");

    scanf("%d", &x);

    k = x % 5;

    if (k == 0)

        printf("Yes!\n");

    else

        printf("No!\n");
}#include <stdio.h>
int main()
{
    int num;
    char mark;
    scanf("%d", &num);
    mark = (num < 90) ? (num < 90 && num >= 80) ? 'B' : (num < 80 && num >= 70) ? 'C' : ((num < 70 && num >= 60) ? 'D' : 'E') : 'A';
    printf("%c", mark);
    return 0;
}#include <stdio.h>

void main(void)

{

    int x, k;

    printf("«Î ‰»Îxµƒ÷µ£∫\n");

    scanf("%d", &x);

    k = x % 5;

    if (k == 0)

        printf("Yes!\n");

    else

        printf("No!\n");
}#include <stdio.h>
int main()
{
    double l, bonus;
    scanf("%lf", l);
    if (l <= 100000)
    {
        bonus = l * 0.1;
    }
    else if (l > 100000 && l <= 200000)
    {
        
        bonus = 100000 * 0.1 + (l - 100000) * 0.075;
    }
    else if (l > 200000 &&l <= 300000)
    {
        bonus = 100000 * 0.1 + 100000 * 0.075 + 200000 * 0.2 + (l - 200000) * 0.005;
    }
    if (l <= 100000)
    {
        bonus = l * 0.1;
    }
    if (l <= 100000)
    {
        bonus = l * 0.1;
    }
    if (l <= 100000)
    {
        bonus = l * 0.1;
    }
}
#include <stdio.h>
int main()
{
    int num1, num2, ans;
    scanf("%d %d", &num1, &num2);
    scanf("%d", &ans);
    if (num1 + num2 == ans)
    {
        printf("right");
    }
    else
    {
        printf("error");
    }
    return 0;
}#include <stdio.h>
int main()
{
    int a, b;
    char obj;
    scanf("%d %d", &a, &b);
    getchar();
    scanf("%c", &obj);
    switch (obj)
    {
    case '+':
        printf("%d", a + b);
        break;
    case '-':
        printf("%d", a - b);
        break;
    case '*':
        printf("%d", a * b);
        break;
    case '/':
        printf("%d", a / b);
    }
    return 0;
}#include <stdio.h>
#define PI 3.1415926

int main()
{
    double r, c, s;
    scanf("%lf", &r);
    if (r >= 0)
        ;
    else
    {
        printf("Input error!");
        return 0;
    }
    s = PI * r * r;
    c = PI * r * 2;
    printf("%.2lf\n%.2lf", s, c);
    return 0;
}
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int main()
{
    int numL, i, targetNum, num[100];
    char target[100];
    scanf("%s", &target);
    targetNum = atoi(target);
    numL = strlen(target);
    if (numL >= 5)
        return 0;
    else
        printf("%d", numL);
    return 0;
}#include <stdio.h>
int main()
{
    int a;
    scanf("%d", &a);
    switch ((a / 10))
    {
    case 0:;
    case 1:;
    case 2:;
    case 3:;
    case 4:;
    case 5:
        printf("m=1");
        break;
    case 6:
        printf("m=2");
        break;
    case 7:
        printf("m=3");
        break;
    case 8:
        printf("m=4");
        break;
    default:
        printf("m=5");
    }
    return 0;
}#include <stdio.h>
int main()
{
    double hr, fee;
    scanf("%lf", &hr);
    if (hr < 10)
        fee = 30;
    else if (hr >= 10 && hr <= 50)
        fee = 3 * hr;
    else
        fee = 2.5 * hr;
    printf("%.2lf", fee);
    return 0;
}
#include <stdio.h>
int main()
{
    int swi;
    scanf("%d", &swi);
    switch (swi)
    {
    case 0:
        printf("ƒ„œ≤ª∂µƒ—’…´ «∫Ï…´");
        break;
    case 1:
        printf("ƒ„œ≤ª∂µƒ—’…´ «≥»…´");
        break;
    case 2:
        printf("ƒ„œ≤ª∂µƒ—’…´ «¬Ã…´");
        break;
    case 3:
        printf("ƒ„œ≤ª∂µƒ—’…´ «ª∆…´");
        break;
    case 4:
        printf("ƒ„œ≤ª∂µƒ—’…´ ««‡…´");
        break;
    case 5:
        printf("ƒ„œ≤ª∂µƒ—’…´ «◊œ…´");
        break;
    default:
        printf("√ª”–’‚÷÷—’…´");
    }
    return 0;
}#include <stdio.h>

int main()
{
    int x, y, flag;
    scanf("%d,%d", &x, &y);
    if (x > 0 && y > 0)
        flag = 1;
    else if (x < 0 && y > 0)
        flag = 2;
    else if (x < 0 && y < 0)
        flag = 3;
    else if (x > 0 && y < 0)
        flag = 4;
    else
        flag = 0;
    switch (flag)
    {
    case 1:
        printf("1");
        break;
    case 2:
        printf("2");
        break;
    case 3:
        printf("3");
        break;
    case 4:
        printf("4");
        break;
    case 0:
        printf("Failure");
    }
    return 0;
}#include <stdio.h>

int main()
{
    double l;
    double n1, n2, n4, n6, n10, n;
    scanf("%lf", &l);
    n1 = 100000 * 0.1;
    n2 = n1 + 100000 * 0.075;
    n4 = n2 + 200000 * 0.05;
    n6 = n4 + 200000 * 0.03;
    n10 = n6 + 400000 * 0.015;
    if (l < 100000)
    {
        n = l * 0.1;
    }
    else if (l <= 200000)
    {
        n = n1 + (l - 100000) * 0.075;
    }
    else if (l <= 400000)
    {
        n = n2 + (l - 200000) * 0.05;
    }
    else if (l <= 600000)
    {
        n = n4 + (l - 400000) * 0.03;
    }
    else if (l <= 1000000)
    {
        n = n6 + (l - 600000) * 0.015;
    }
    else if (l > 1000000)
    {
        n = n10 + (l - 1000000) * 0.01;
    }
    printf("%.lf", n);
    return 0;
}#include <stdio.h>
#include <math.h>
int main()
{
    int i;
    scanf("%d", &i);
    printf("%d", abs(i));
    return 0;
}#include <stdio.h>

void main(void)

{

    char ch;

    ch = getchar();

    if (ch >= 'a' && ch <= 'z')

        printf("This character is lowercase.\n");

    else if (ch >= 'A' && ch <= 'Z')

        printf("This character is uppercase.\n");

    else if (ch >= '0' && ch <= '9')

        printf("This character is a digit.\n");

    else

        printf("This character is other character.\n");
}//Õ¨44-30.c#include <stdio.h>
int main()
{
    int x, y, z, tmp;
    scanf("%d %d %d", &x, &y, &z);
    if (x > y)
    {
        tmp = x;
        x = y;
        y = tmp;
    }
    if (x > z)
    {
        tmp = z;
        z = x;
        x = tmp;
    }
    if (y > z)
    {
        tmp = y;
        y = z;
        z = tmp;
    }
    printf("%d %d %d", x, y, z);
    return 0;
}#include <stdio.h>

int main()
{
    int num[100], i = 1, t, numL, numCor[100], total = 0, tmp;
    scanf("%d %d %d", &num[1], &num[2], &num[3]);
    numL = 3;
    while (1)
    {
        //»Ù≈≈–ÚŒ¥ÕÍ≥…‘Ú÷ÿ–¬≈≈–Ú
        if (i == numL)
        {
            i = 1;
            total = 0;
        }
        //ø™ º≈≈–Ú
        if (num[i] <= num[i + 1])
        {
            numCor[i] = 1;
        }
        else
        {
            numCor[i] = 0;
            tmp = num[i];
            num[i] = num[i + 1];
            num[i + 1] = tmp;
        }
        //≈–∂œ «∑Ò≈≈–ÚÕÍ≥…
        total = total + numCor[i];
        if (total == (numL - 1))
        {
            break;
        }
        //◊‘‘ˆ
        i++;
    }
    printf("%d", num[2]);
    return 0;
}//Õ¨44-26.c#include <stdio.h>
int main()
{
    int x, y;
    scanf("%d %d", &x, &y);
    if (x > y)
    {
        printf("max=%d", x);
    }
    else
    {
        printf("max=%d", y);
    }
    return 0;
}#include <stdio.h>
int main()
{
    int hr12, hr24, min;
    int flag;
    scanf("%d:%d", &hr24, &min);
    if (hr24 >= 0 && hr24 <= 11)
    {
        flag = 0; //0 is AM
    }
    else
    {
        flag = 1;
    }

    if (hr24 == 0 || hr24 == 12)
    {
        hr12 = 12;
    }
    else if (flag == 1)
    {
        hr12 = hr24 - 12;
    }
    else
    {
        hr12 = hr24;
    }

    if (flag == 0)
    {
        printf("%02d:%02d AM", hr12, min);
    }
    if (flag == 1)
    {
        printf("%02d:%02d PM", hr12, min);
    }

    return 0;
}//Õ¨44-25.c#include <stdio.h>
int main()
{
    int y;
    scanf("%d", &y);
    if (y % 400 == 0 || y % 4 == 0 && y % 100 != 0)
    {
        printf("Yes");
    }
    else
    {
        printf("No");
    }
    return 0;
}#include <stdio.h>

void main(void)

{

    int x, y;

    printf("«Î ‰»Îxµƒ÷µ£∫");

    scanf("%d", &x);

    if (-2 <= x && x <= 2)

        y = 10;

    else

        y = 0;

    printf("y=%d\n", y);
}//Õ¨44-31.c#include <stdio.h>

void main(void)

{

    char ch;

    ch = getchar();

    if (ch >= 'a' && ch <= 'z')

        printf("This character is lowercase.\n");

    else if (ch >= 'A' && ch <= 'Z')

        printf("This character is uppercase.\n");

    else if (ch >= '0' && ch <= '9')

        printf("This character is a digit.\n");

    else

        printf("This character is other character.\n");
}
//Õ¨44-1.c#include <stdio.h>

int main()
{
    int y, m, d, i, bigMonF = 0, rYearF = 0;
    int bigMon[7] = {1, 3, 5, 7, 8, 10, 12};
    scanf("%d-%d-%d", &y, &m, &d);
    if (y >= 1900 && y <= 2035)
        ;
    else
        return 0;
    for (i = 0; i < 7; i++)
    {
        if (m == bigMon[i])
        {
            bigMonF = 1;
        }
    }
    if (y % 400 == 0 || y % 100 != 0 && y % 4 == 0)
    {
        rYearF = 1;
    }
    if (d == 31 && m == 12)
    {
        y++;
        m = 1;
        d = 1;
    }
    else if (d == 30 && bigMonF == 0)
    {
        m++;
        d = 1;
    }
    else if (d == 31 && bigMonF == 1)
    {
        m++;
        d = 1;
    }
    else if (m == 2 && d == 29 && rYearF == 1)
    {
        m++;
        d = 1;
    }
    else if (m == 2 && d == 28 && rYearF == 0)
    {
        m++;
        d = 1;
    }
    else
    {
        d++;
    }
    printf("%d-%d-%d", y, m, d);
    return 0;
}#include <stdio.h>
int main()
{
    int your, frd;
    scanf("%d", &your);
    scanf("%d", &frd);
    if (your >= frd)
    {
        printf("You are older!");
    }
    else
    {
        printf("Your friend is older!");
    }
    return 0;
}#include <stdio.h>
int main()
{
    int num;
    char mark;
    scanf("%d", &num);
    mark = (num < 90) ? ((num < 90 && num >= 60) ? 'B' : 'C') : 'A';
    printf("%d belongs to %c", num, mark);
    return 0;
}#include <stdio.h>
int main()
{
    int a, b, tol;
    char obj;
    scanf("%d%c%d", &a, &obj, &b);
    switch (obj)
    {
    case '+':
        tol = a + b;
        break;
    case '-':
        tol = a - b;
        break;
    case '*':
        tol = a * b;
        break;
    case '/':
        tol = a / b;
        break;
    default:
        printf("Unknown operator!");
    }
    printf("%d %c %d = %d", a, obj, b, tol);
    return 0;
}#include <stdio.h>

int main(void)

{

    float a, b, c;

    float max(float x, float y);

    printf("ËØ∑ËæìÂÖ•‰∏§‰∏™ÂÆûÊï∞Ôºå‰∏≠Èó¥Áî®ÈÄóÂè∑ÂàÜÈöîÔºö");

    scanf("%f,%f", &a, &b);

    c = max(a, b);

    printf("‰∏§‰∏™Êï∞ÁöÑÊúÄÂ§ßÂÄº‰∏∫:%6.2f\n", c);

    return 0;
}

float max(float x, float y)

{

    float z;

    if (x > y)

        z = x;

    else

        z = y;

    return z;
}
#include <stdio.h>
int f = 1;

int fac(int m)

{

    f = f * m;

    return f;
}

int main(void)

{

    int i, n;

    scanf("%d", &n);

    for (i = 1; i <= n; i++)
    {
        printf("%d!=%d\n", i, fac(i));
    }

    return 0;
}#include <stdio.h>
int main()
{
    int n;
    int prime(int);
    scanf("%d", &n);
    n = prime(n);
    if (n == 0)
        printf("no");
    else
        printf("yes");
    return 0;
}
int prime(int n)
{
    int i;
    for (i = 2; i < n; i++)
        if (n % i == 0)
            return 0;
    return 1;
}#include <stdio.h>
int main()
{
    int n, a[100], i;
    int sort(int, int[]);
    scanf("%d", &n);
    for (i = 0; i < n; i++)
        scanf("%d", &a[i]);
    sort(n, a);
    for (i = 0; i < n; i++)
        printf("%d ", a[i]);
    return 0;
}
int sort(int n, int a[])
{
    int i, j, tmp;
    for (i = 1; i <= n; i++)
        for (j = 1; j <= n - i; j++)
            if (a[j - 1] > a[j])
            {
                tmp = a[j - 1];
                a[j - 1] = a[j];
                a[j] = tmp;
            }
    return 0;
}#include <stdio.h>
#include <string.h>
int main()
{
    char ch1[50], ch2[50];
    gets(ch1);
    gets(ch2);
    if (strlen(ch1) < strlen(ch2))
    {
        printf("%s %d", ch1, strlen(ch1));
    }
    else
    {
        printf("%s %d", ch2, strlen(ch2));
    }
}#include <stdio.h>
int input(int a[][10])
{
    int i;
    for (i = 0; i < 10; i++)
        scanf("%d %d %d", &a[0][i], &a[1][i], &a[2][i]);
    return 0;
}
int sort(int a[][10])
{
    int i, j, temp, swit;
    for (i = 0; i < 9; i++)
        for (j = 0; j < 9 - i; j++)
            if (a[0][j] > a[0][j + 1])
            {
                for (swit = 0; swit < 3; swit++)
                {
                    temp = a[swit][j];
                    a[swit][j] = a[swit][j + 1];
                    a[swit][j + 1] = temp;
                }
            }

    return 0;
}
int find(int n, int a[][10])
{
    int i;
    for (i = 0; i < 10; i++)
    {
        if (a[0][i] == n)
        {
            return i;
        }
    }
    return -1;
}
int main()
{
    int a[3][10], n, i;
    input(a);
    sort(a);
    scanf("%d", &n);
    i = find(n, a);
    if (i == -1)
        printf("Can't find");
    else
        printf("score:  %d  %d", a[1][i], a[2][i]);
    return 0;
}#include <stdio.h>
#include <string.h>
#define isSubEng(i) ch[i] >= 'a' && ch[i] <= 'z'
int main()
{
    int i;
    char ch[100];
    gets(ch);
    for (i = 0; i < strlen(ch); i++)
    {
        if (i == 0 && isSubEng(i))
            ch[i] -= 32;
        if (ch[i] == ' ' && isSubEng(i + 1))
            ch[i + 1] -= 32;
        printf("%c", ch[i]);
    }
}#include <stdio.h>

float add(float x, float y)

{

    float z;

    z = x + y;

    return z;
}

int main(void)

{

    float a, b, c;

    printf("please input a and bÔºö");

    scanf("%f,%f", &a, &b);

    c = add(a, b);

    printf("sum=%6.2f\n", c);

    return 0;
}
#include <stdio.h>
#include <math.h>
int main()
{
    int n, i;
    double a[50], tol = 0, sum = 0;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
    {
        scanf("%lf", &a[i]);
        tol += a[i];
    }
    tol /= n;
    for (i = 0; i < n; i++)
        sum += pow((a[i] - tol), 2);
    sum = sqrt(sum / n);
    printf("%lf", sum);
}
#include <stdio.h>
#include <string.h>
int main()
{
    char ch1[50], ch2[50];
    gets(ch1);
    gets(ch2);
    strcat(ch1, " ");
    strcat(ch1, ch2);
    puts(ch1);
}#include <stdio.h>
int main()
{
    int m, n, i, j, a[10][10];
    int sum(int, int, int[][10]);
    scanf("%d,%d", &m, &n);
    for (i = 0; i < m; i++)
        for (j = 0; j < n; j++)
            scanf("%d", &a[i][j]);
    printf("sum=%d", sum(m, n, a));
}
int sum(int m, int n, int a[][10])
{
    int sum = 0, i, j;
    for (i = 0; i < m; i++)
        for (j = 0; j < n; j++)
            sum += a[i][j];
    return sum;
}#include <stdio.h>
int main()
{
    int n, i, a[100];
    int sum(int, int[]);
    scanf("%d", &n);
    for (i = 0; i < n; i++)
        scanf("%d", &a[i]);
    printf("%d", sum(n, a));
    return 0;
}
int sum(int n, int a[])
{
    int i, sum;
    for (i = 0, sum = 0; i < n; i++)
        sum += a[i];
    return sum;
}//œ–¿¥Œﬁ ¬ÕÊ π”√÷∏’Î
#include <stdio.h>
float fxxkElementType(float *p, float *s, int n, int cnt)
{
    *s += *p;
    if (n == 1)
        return *s / cnt;
}
int main()
{
    int n, i, cnt = 0;
    float sum = 0, tmp, fin, *p, *s;
    p = &tmp;
    s = &sum;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
    {
        scanf("%f", &tmp);
        cnt++;
        if (i != n - 1)
            fxxkElementType(p, s, 0, 0);
        else
            fin = fxxkElementType(p, s, 1, cnt);
    }
    printf("%.2f", fin);
}
#include <stdio.h>

long int fac(int n)
{

    long r = 1;

    int i;

    for (i = 1; i <= n; i++)

        r *= i;

    return r;
}
long int sum(int x, int y)

{

    long int z1, z2;

    z1 = fac(x);

    z2 = fac(y);

    return (z1 + z2);
}

int main(void)

{

    long int fac(int n);

    long int sum(int x, int y);

    int a, b;

    long int c;

    printf("please input a and b: ");

    scanf("%d,%d", &a, &b);

    c = sum(a, b);

    printf("sum=%ld\n", c);

    return 0;
}
#include <stdio.h>
int A = 11, B = 6;

int min(int x, int y)

{

    int z;

    z = x < y ? x : y;

    return z;
}

int main(void)

{

    printf("min=%d\n", min(A, B));

    return 0;
}
#include <stdio.h>
int main()
{
    int n, i;
    scanf("%d", &n);
    int result(int);
    for (i = 1; i <= n; i++)
    {
        printf("%12d", result(i));
        if (i % 5 == 0)
            printf("\n");
    }
    return 0;
}
int result(int n)
{
    if (n == 1 || n == 2)
        return 1;
    else
        return result(n - 1) + result(n - 2);
}#include <stdio.h>
#include <math.h>
int input(int *p)
{
    scanf("%d", p);
    if (*p % 2 == 0 && *p > 6)
        ;
    else
        return -1;
}
void findsushu(int a[], int n)
{
    int i, j, cnt = 0;
    for (i = 1; i <= n; i++)
        a[i] = i;
    for (i = 2; i <= sqrt(n); i++)
        for (j = i + 1; j <= n; j++)
            if (j % i == 0)
                a[j] = 0;
    for (i = 2; i < n; i++)
        if (a[i] != 0)
        {
            printf("%d ", a[i]);
            cnt++;
        }
    printf("\nThe total is %d", cnt);
}
int sushu()
{
    int *p;
    int n;
    p = &n;
    if (input(p) == -1)
        return -1;
    int a[1000], b[1000];
    findsushu(a, n);
}

int main()
{
    if (sushu() == -1)
        printf("Input Error.");
}#include <stdio.h>
int main()
{
    int a, b;
    float d, e;
    char c1, c2;
    double f, g;
    long m, n;
    unsigned int p, q;
    a = 61;
    b = 62;
    c1 = 'a';
    c2 = 'b';
    d = 5.67;
    e = -6.78;
    f = 1234.56789;
    g = 0.123456789;
    m = 50000;
    n = -60000;
    p = 32768;
    q = 40000;
    printf("a=%d, b=%d\n", a, b);
    printf("c1=%c, c2=%c\n", c1, c2);
    printf("d=%f, e=%f\n", d, e);
    printf("f=%lf, g=%lf\n", f, g);
    printf("m=%ld, n=%ld\n", m, n);
    printf("p=%u, q=%u\n", p, q);
    return 0;
}#include <stdio.h>
#include <math.h>
int main()
{
    double a, n, p;
    scanf("%lf,%lf,%lf", &a, &n, &p);
    printf("Acc=%.3lf", a * pow(1 + p, n) - a);
    return 0;
}
#include <stdio.h>

int main()
{
    int a, b;
    scanf("%d %d", &a, &b);
    printf("%d", a * b);
}#include <stdio.h>
#include <math.h>
int main()
{
    int a, b, c, tmp;
    scanf("%d %d %d", &a, &b, &c);
    if (a > b)
    {
        tmp = a;
        a = b;
        b = tmp;
    }
    if (a > c)
    {
        tmp = c;
        c = a;
        a = tmp;
    }
    if (b > c)
    {
        tmp = b;
        b = c;
        c = tmp;
    }
    printf("%d", c);
    return 0;
}#include <stdio.h>
#define PI 3.1415926
int main()
{
    double r, h;
    scanf("%lf,%lf", &r, &h);
    printf("%lf\n", PI * r * 2);
    printf("%lf\n", PI * r * r);
    printf("%lf", PI * r * r * h);
    return 0;
}
#include <stdio.h>

int main()
{
    double x, y;
    char ch;
    scanf("%lf,%lf", &x, &y);
    scanf("%c", &ch);
    ch = getchar();
    switch (ch)
    {
    case '+':
        printf("%f", x + y);
        break;
    case '-':
        printf("%f", x - y);
        break;
    case '*':
        printf("%f", x * y);
        break;
    case '/':
        if (y != 0)
            printf("%f", x / y);
        else
            printf("error");
        break;
    default:
        printf("error");
    }
    return 0;
}#include <stdio.h>
int main(void)

{

    struct Friends_list

    {

        char name[10];

        int age;

        char telephone[13];
    };

    struct Friends_list friend1 = {"zhang", 24, "82982543"}, *p;

    p = &friend1;

    printf("%s %d %s\n", p->name, p->age, p->telephone);

    return 0;
}#include <stdio.h>
#include <string.h>
typedef struct Stu
{
    char name[20], id[30];
    struct Stu *next;
} stu;

int main()
{
    int i;
    stu s[100], *head;
    head = s;
    int cnt = 0;
    for (i = 0;; i++)
    {
        scanf("%s %s", s[i].name, s[i].id);
        if (strcmp(s[i].name, "no") == 0)
        {
            s[i].next = NULL;
            break;
        }
        if (i != 0)
            s[i - 1].next = &s[i];
        cnt++;
    }
    printf("ÊÄªÂÖ±%d‰∏™Â≠¶ÁîüÔºà‰ø°ÊÅØÔºâÔºö\n", cnt);
    i = 0;
    while (1)
    {
        i++;
        printf("Á¨¨%d‰∏™Â≠¶Áîü‰ø°ÊÅØÔºö", i);
        printf("%s %s\n", head->name, head->id);
        if (head->next == NULL)
            break;
        else
            head = head->next;
    }
}
#include <stdio.h>
struct sphh
{
    int a;
    int *b;
} sp[3];
int main()
{
    int i, a[3];
    for (i = 0; i < 3; i++)
        scanf("%d", &a[i]);
    for (i = 0; i < 3; i++)
        scanf("%d", &sp[i].a);
    sp[0].b = &a[0];
    sp[1].b = &a[1];
    sp[2].b = &a[2];
    struct sphh *p = sp;
    printf("%d %d", ++(p->a), *++p->b);
}#include <stdio.h>
#include <stdlib.h>
#define elesz sizeof(ele)
struct element
{
    int num;
    double score;
    struct element *next;
} * head;
typedef struct element ele;

void creat()
{
    ele *p;
    p = head = (ele *)malloc(elesz);
    while (scanf("%d %lf", &p->num, &p->score) && p->num != 0 && p->score != 0)
    {
        p->next = (ele *)malloc(elesz);
        p = p->next;
    }
    p->next = NULL;
}
void print()
{
    ele *p = head;
    printf("%-3s %-3s  %-3s\n", "id", "num", "score");
    for (int id = 1; p->next != NULL; p = p->next, id++)
        printf("%-3d %-3d  %-3.3lf\n", id, p->num, p->score);
}
void insert()
{
    int id, num;
    double score;
    scanf("%d %d %lf", &id, &num, &score);
    ele *p = head,
        *tmp;
    for (int i = 1; i <= id - 1; i++, p = p->next)
        ;
    tmp = p->next;
    p->next = (ele *)malloc(elesz);
    p->next->num = num;
    p->next->score = score;
    p = p->next;
    p->next = tmp;
}
void search()
{
    int num;
    scanf("%d", &num);
    ele *p = head;
    for (int id = 1; p->next != NULL; p = p->next, id++)
    {
        if (p->num == num)
        {
            printf("Find at %d", id);
            return;
        }
    }
    printf("No");
}
void del()
{
    int num;
    scanf("%d", &num);
    ele *p = head;
    for (; p->next != NULL; p = p->next)
    {
        if (p->next->num == num)
            break;
    }
    p->next = p->next->next;
}
void edit()
{
    int id;
    double score;
    scanf("%d %lf", &id, &score);
    ele *p = head;
    for (int i = 1; i != id; p = p->next, i++)
        ;
    p->score = score;
}
int main()
{
    creat();
    print();
    insert();
    print();
    search();
    del();
    print();
    edit();
    print();
}#include <stdio.h>
#include <stdlib.h>
#define LEN sizeof(stu)
struct Stu
{
    float num, score;
    struct Stu *next;
};
typedef struct Stu stu;
stu *head;

int initial = 0; //ÊòØÂê¶Â∑≤ÁªèÂàùÂßãÂåñ

stu *findLast() //Êü•ÊâæÈìæË°®ÊúÄÂêéÁöÑ‰ΩçÁΩÆ
{
    stu *p;
    if (head == NULL) //ÈìæË°®‰∏∫Á©∫
        return -1;
    for (p = head; p->next != NULL; p = p->next)
        ;
    return p;
}

stu *findLot(int id) //Êü•ÊâæÈìæË°®ÊåáÂÆö‰ΩçÁΩÆÂπ∂ËøîÂõûËØ•‰ΩçÁΩÆÂú∞ÂùÄ
{
    int i;
    stu *p;
    if (head == NULL) //ÈìæË°®Êú™ÂàùÂßãÂåñ
        return -1;
    for (i = 0, p = head;; i++, p = p->next)
    {
        if (p->next == NULL)
            return -1; //Â∑≤ÁªèÂà∞Êú´Á´Ø‰πüÊâæ‰∏çÂà∞
        if (i == id - 1)
            break;
    }
    return p;
}

void creat()
{
    int i;
    stu *p;
    if (initial == 0) //Ëã•Êú™ÂàùÂßãÂåñ
    {
        p = head = (stu *)malloc(LEN);
        initial = 1;
    }
    else //Â∑≤ÂàùÂßãÂåñ
    {
        p = findLast(); //Ë∞ÉÁî®ÂáΩÊï∞ÊâæÂà∞ÈìæË°®Êú´Á´Ø
        p->next = (stu *)malloc(LEN);
    }

    while (1)
    {
        scanf("%f %f", &p->num, &p->score);
        if (p->num == 0)
        {
            p->next = NULL;
            break;
        }
        p->next = (stu *)malloc(LEN);
        p = p->next;
    }
}

int del(int id)
{
    stu *p;
    if (findLot(id) == -1)
        return -1;
    else
        p = findLot(id);

    if (p == head) //Âà†Èô§ÈìæË°®Â§¥ÁöÑÊìç‰Ωú
        head = p->next;
    else if (p->next == NULL) //Âà†Èô§ÈìæË°®Â∞æÈÉ®
    {
        p = findLot(id - 1); //Êü•Êâæ‰∏ä‰∏Ä‰∏™‰ΩçÁΩÆ
        p->next = NULL;
    }
    else
    {
        p = findLot(id - 1);     //Êü•Êâæ‰∏ä‰∏Ä‰∏™‰ΩçÁΩÆ
        p->next = p->next->next; //Áõ¥Êé•ËÆ©‰∏ä‰∏Ä‰∏™‰ΩçÁΩÆÁöÑnext‰∏∫‰∏ã‰∏ã‰∏™‰ΩçÁΩÆ(Á≠â‰∫éË∑≥Ëøá‰∫Ü‰∏≠Èó¥‰ΩçÁΩÆÂÆûÁé∞‰∫ÜÂØπ‰∏≠Èó¥‰ΩçÁΩÆÁöÑÂà†Èô§)
    }
}

int insert(int id, float num, float score)
{
    stu *p, *new;

    if (findLot(id) == -1)
        return -1;
    else
        p = findLot(id);

    new = (stu *)malloc(LEN);
    new->num = num;
    new->score = score;

    if (p->next == NULL) //ÂΩìÊèíÂÖ•ÁÇπÂú®ÈìæË°®Â∞æÁöÑÊìç‰Ωú
    {
        new->next = NULL;
        p->next = new;
    }
    else
    {
        new->next = p->next;
        p->next = new;
    }
}

int edit(int id, float num, float score)
{
    stu *p, *new;

    if (findLot(id) == -1)
        return -1;
    else
        p = findLot(id);

    p->num = num;
    p->score = score;
}

int printId(int id)
{
    stu *p;
    int i;
    if (head == NULL) //ÈìæË°®Êú™ÂàùÂßãÂåñ
        return -1;
    for (i = 1, p = head;; i++, p = p->next)
    {
        if (p->next == NULL)
            return -1; //Â∑≤ÁªèÂà∞Êú´Á´Ø‰πüÊâæ‰∏çÂà∞
        if (i == id)
            break;
    }
    printf("%g %g", p->num, p->score);
}

int printSearchByScore(float score)
{
    int i, cnt = 0;
    stu *p;
    if (head == NULL) //ÈìæË°®Êú™ÂàùÂßãÂåñ
        return -1;
    for (i = 1, p = head;; i++, p = p->next)
    {
        if (p->next == NULL)
            break; //Â∑≤ÁªèÂà∞Êú´Á´Ø‰πüÊâæ‰∏çÂà∞
        if (p->score == score)
        {
            printf("ÊâæÂà∞Ê≠§ÂàÜÊï∞ÔºåÂú®ÈìæË°®ÁöÑÁ¨¨%d‰∏™‰ΩçÁΩÆ\n", i);
            cnt++;
        }
    }
    if (cnt == 0)
        return -1;
}

int printSearchByNum(float num)
{
    int i, cnt = 0;
    stu *p;
    if (head == NULL) //ÈìæË°®Êú™ÂàùÂßãÂåñ
        return -1;
    for (i = 1, p = head;; i++, p = p->next)
    {
        if (p->next == NULL)
            break; //Â∑≤ÁªèÂà∞Êú´Á´Ø‰πüÊâæ‰∏çÂà∞
        if (p->num == num)
        {
            printf("ÊâæÂà∞Ê≠§ÂàÜÊï∞ÔºåÂú®ÈìæË°®ÁöÑÁ¨¨%d‰∏™‰ΩçÁΩÆ\n", i);
            cnt++;
        }
    }
    if (cnt == 0)
        return -1;
}

int printAll()
{
    stu *p;
    if (head == NULL) //ÈìæË°®Êú™ÂàùÂßãÂåñ
        return -1;
    for (p = head; p->next != NULL; p = p->next)
    {
        printf("%g %g\n", p->num, p->score);
    }
    if (p == head) //ÈìæË°®‰∏∫Á©∫
        return -1;
}

int main(void)
{
    int ctrl;
    while (1)
    {
        printf("ËØ∑ËæìÂÖ•Ë¶ÅËøõË°åÁöÑÊìç‰ΩúÊï∞Â≠óÔºö\n    1 ÂàõÂª∫\n    2 ÊèíÂÖ•\n    3 ‰øÆÊîπ(ÈÄöËøá‰ΩçÁΩÆ)\n    4 Âà†Èô§\n    5 ËæìÂá∫ÊåáÂÆö‰ΩçÁΩÆÊï∞ÊçÆ\n    6 Êü•Êâæ(ÈÄöËøáÂ≠¶Âè∑)\n    7 Êü•Êâæ(ÈÄöËøáÂàÜÊï∞)\n    8 ËæìÂá∫Êï¥‰∏™ÈìæË°®\n");
        scanf("%d", &ctrl);

        switch (ctrl)
        {
            int id;
            float value1, value2;
        case 1:
            printf("ËØ∑ÂàùÂßãÂåñË¶ÅÂàõÂª∫ÁöÑÈìæË°®(Ê†ºÂºè:Â≠¶Âè∑ ÂàÜÊï∞)(ËæìÂÖ•0 0ÁªìÊùü)\n");
            creat();
            break;

        case 2:
            printf("ËØ∑ËæìÂÖ•Ë¶ÅÊèíÂÖ•ÁöÑ‰ΩçÁΩÆ(‰ºöÂú®Ê≠§ËäÇÁÇπÂêéÊèíÂÖ•)(Ëµ∑ÂßãÁÇπ‰∏∫1)\n");
            scanf("%d", &id);
            printf("ËØ∑ËæìÂÖ•Ë¶ÅÊèíÂÖ•ÁöÑÂÄº\n");
            scanf("%f %f", &value1, &value2);
            if (insert(id, value1, value2) == -1)
                printf("ÊèíÂÖ•Â§±Ë¥•Ôºå‰∏çÂ≠òÂú®Ê≠§ËäÇÁÇπ\n");
            break;

        case 3:
            printf("ËØ∑ËæìÂÖ•Ë¶Å‰øÆÊîπÁöÑ‰ΩçÁΩÆ(Ëµ∑ÂßãÁÇπ‰∏∫1)\n");
            scanf("%d", &id);
            printf("ËØ∑ËæìÂÖ•Ë¶Å‰øÆÊîπÁöÑÂÄº\n");
            scanf("%f %f", &value1, &value2);
            if (edit(id, value1, value2) == -1)
                printf("‰øÆÊîπÂ§±Ë¥•Ôºå‰∏çÂ≠òÂú®Ê≠§ËäÇÁÇπ\n");
            break;

        case 4:
            printf("ËØ∑ËæìÂÖ•Ë¶ÅÂà†Èô§ÁöÑ‰ΩçÁΩÆ(Ëµ∑ÂßãÁÇπ‰∏∫1)\n");
            scanf("%d", &id);
            if (del(id) == -1)
                printf("Âà†Èô§Â§±Ë¥•Ôºå‰∏çÂ≠òÂú®Ê≠§ËäÇÁÇπ\n");
            break;

        case 5:
            printf("ËØ∑ËæìÂÖ•Ë¶ÅËæìÂá∫ÁöÑ‰ΩçÁΩÆ(Ëµ∑ÂßãÁÇπ‰∏∫1)\n");
            scanf("%d", &id);
            if (printId(id) == -1)
                printf("‰∏çÂ≠òÂú®Ê≠§ËäÇÁÇπ\n");
            break;

        case 6:
            printf("ËØ∑ËæìÂÖ•Ë¶ÅÊü•ÊâæÁöÑÂ≠¶Âè∑\n");
            scanf("%f", &value1);
            if (printSearchByNum(value1) == -1)
                printf("‰∏çÂ≠òÂú®Ê≠§Â≠¶Âè∑\n");
            break;

        case 7:
            printf("ËØ∑ËæìÂÖ•Ë¶ÅÊü•ÊâæÁöÑÂàÜÊï∞\n");
            scanf("%f", &value1);
            if (printSearchByScore(value1) == -1)
                printf("‰∏çÂ≠òÂú®Ê≠§ÂàÜÊï∞\n");
            break;

        case 8:
            if (printAll() == -1)
                printf("ÈìæË°®‰∏∫Á©∫\n");
            break;

        default:
            printf("ËØ∑ËæìÂÖ•Ê≠£Á°ÆÁöÑÊìç‰Ωú\n");
        }
        printf("ÊåâÂõûËΩ¶ÈîÆÁªßÁª≠(Êåâctrl+zÁªìÊùüÁ®ãÂ∫è)\n");
        getchar();
        getchar();
    }
}#include <stdio.h>
#include <string.h>
typedef struct Stu
{
    char name[20], id[30];
    struct Stu *next;
} stu;

int main()
{
    int i, n;
    stu s[100], *head, *p;
    head = s;
    for (p = head;; p = p->next)
    {
        scanf("%s %s", p->name, p->id);
        if (strcmp(p->id, "0") == 0)
        {
            (p - 1)->next = NULL;
            break;
        }
        p->next = p + 1;
    }
    scanf("%d", &n);
    for (i = 0, p = head; i < n - 1; i++, p = p->next)
        ;
    if (p == head)
        head = p->next;
    else if (p->next == NULL)
        (p - 1)->next = NULL;
    else
        (p - 1)->next = p->next;

    for (p = head;; p = p->next)
    {
        printf("%s,%s\n", p->name, p->id);
        if (p->next == NULL)
            break;
    }
}
#include <stdio.h>

struct stu /* Â≠¶Áîü‰ø°ÊÅØ */

{

    int no; /* Â≠¶Âè∑ */

    char name[10]; /* ÂßìÂêç */

    char sex[3]; /* ÊÄßÂà´ */

    int age; /* Âπ¥ÈæÑ */

} stu;

int main(void)

{

    printf("ËØ∑ËæìÂÖ•Â≠¶Âè∑ÔºåÂßìÂêçÔºåÊÄßÂà´ÔºåÂπ¥ÈæÑ\n");

    scanf("%d%s%s%d", &stu.no, stu.name, stu.sex, &stu.age);

    printf("Â≠¶Âè∑:%d, ÂßìÂêç:%s, ÊÄßÂà´:%s, Âπ¥ÈæÑ:%d\n", stu.no, stu.name, stu.sex, stu.age);
}#include <stdio.h>
#include <stdlib.h>
#define LEN sizeof(struct Stu)
typedef struct Stu
{
    float num, score;
    struct Stu *next;
} stu;

stu *creat()
{
    stu *head;
    head = (stu *)malloc(LEN * 100);
    return head;
}
stu *input(stu *head)
{
    stu *p;
    for (p = head;; p++)
    {
        scanf("%f %f", &p->num, &p->score);
        if (p->num == 0)
        {
            (p - 1)->next = NULL;
            break;
        }
        p->next = p + 1;
    }
}
stu *print(stu *head)
{
    stu *p;
    for (p = head;; p = p->next)
    {
        printf("%.f  %.1f\n", p->num, p->score);
        if (p->next == NULL)
            break;
    }
}
int main()
{
    stu *head;
    head = creat();
    input(head);
    print(head);
}
#include <stdio.h>
struct man
{
    char name[20];
    int age;
} person[3] = {"li", 18, "wang", 25, "sun", 22};
int main()
{
    int maxid, i;
    maxid = 0;
    for (i = 0; i < 3; i++)
        if (person[i].age > person[maxid].age)
            maxid = i;
    printf("%s %d", person[maxid].name, person[maxid].age);
}#include <stdio.h>
int main()
{
    float a1, a2, b1, b2;
    scanf("%f,%f", &a1, &a2);
    scanf("%f,%f", &b1, &b2);
    printf("%-.1f+%-.1f*i", a1 - b1, a2 - b2);
}#include <stdio.h>
struct Date
{
    int year, month, day;
};
typedef struct Date Riqi;
Riqi date;
int main()
{
    int dMonth = 0, rYear = 0, i;
    int calculate();
    scanf("%d,%d,%d", &date.year, &date.month, &date.day);
    calculate();
}
int rMonth(int month)
{
    if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
        return 1;
    else
        return 0;
}
int twoMonth(int year)
{
    if ((date.year % 4 == 0 && date.year % 100 != 0) || date.year % 400 == 0)
        return 1;
    else
        return 0;
}
int calculate()
{
    int day = 0, i;
    for (i = 1; i < date.month; i++)
    {
        if (i == 2 && twoMonth(date.year) == 1)
            day += 29;
        else if (i == 2 && twoMonth(date.year) == 0)
            day += 28;
        if (i != 2 && rMonth(i) == 1)
            day += 31;
        else if (i != 2 && rMonth(i) == 0)
            day += 30;
    }
    day += date.day;
    printf("%d/%d is the %dth day in %d.", date.month, date.day, day, date.year);
}#include <stdio.h>
#include <stdlib.h>
#define LEN sizeof(struct Stu)
typedef struct Stu
{
    char name[20];
    long long int id;
    struct Stu *next;
} stu;

int main()
{
    int i;
    long long int n;
    stu s[100], *head, *p;
    head = s;
    for (p = head;; p = p->next)
    {
        scanf("%s %lld", p->name, &p->id);
        if (p->id == 0)
        {
            (p - 1)->next = NULL;
            break;
        }
        p->next = p + 1;
    }
    scanf("%lld", &n);
    for (p = head; p->id != n; p = p->next)
        ;
    if (p->next == NULL)
    {
        p->next = (stu *)malloc(LEN);
        p->next->next = NULL;
        scanf("%s %lld", p->next->name, &p->next->id);
    }
    else
    {
        stu *tmp;
        tmp = p->next;
        p->next = (stu *)malloc(LEN);
        p->next->next = tmp;
        scanf("%s %lld", p->next->name, &p->next->id);
    }
    for (p = head;; p = p->next)
    {
        printf("%s,%lld\n", p->name, p->id);
        if (p->next == NULL)
            break;
    }
}
#include <stdio.h>
int main()
{
    int n, qua[100], pri[100], i;
    scanf("%d", &n);
    int sort(int[], int[], int);
    for (i = 0; i < n; i++)
        scanf("%d", &qua[i]);
    for (i = 0; i < n; i++)
        scanf("%d", &pri[i]);
    sort(qua, pri, n);
    for (i = 0; i < n; i++)
        printf("%d %d\n", qua[i], pri[i]);
}
int sort(int qua[], int pri[], int n)
{
    int i, j, min, max, tmp;
    int ctrl = 0, start, end;
    for (i = 0; i < n; i++)
    {
        min = qua[i];
        for (j = i; j < n; j++)
            if (qua[j] < min)
            {
                tmp = qua[j];
                qua[j] = qua[i];
                qua[i] = tmp;
                tmp = pri[j];
                pri[j] = pri[i];
                pri[i] = tmp;
            }
    }
    for (i = 0; i < n - 1; i++)
    {
        if (qua[i] == qua[i + 1] && ctrl == 0)
        {
            start = i;
            ctrl = 1;
        }
        if (qua[i] != qua[i + 1] && ctrl == 1)
        {
            end = i;
            ctrl = 2;
        }
        if (ctrl == 2)
        {
            for (i = start; i < end; i++)
            {
                max = pri[i];
                for (j = i; j < end; j++)
                    if (pri[j] > max)
                    {
                        tmp = qua[j];
                        qua[j] = qua[i];
                        qua[i] = tmp;
                        tmp = pri[j];
                        pri[j] = pri[i];
                        pri[i] = tmp;
                    }
            }
            ctrl = 0;
        }
    }
}
#include <stdio.h>
struct Stu
{
    char name[20], no[20];
    float score1, score2, score3, aver;
};
int main()
{
    int n, i;
    typedef struct Stu stu;
    scanf("%d", &n);
    stu s[10];
    float avers = 0, sum;
    int max, maxid;
    for (i = 0; i < n; i++)
    {
        scanf("%s%s%f%f%f", s[i].no, s[i].name, &s[i].score1, &s[i].score2, &s[i].score3);
        sum = s[i].score1 + s[i].score2 + s[i].score3;
        s[i].aver = sum / 3;
        avers += s[i].aver;
        if (i == 0)
        {
            max = sum;
            maxid = 0;
        }
        else if (sum > max)
            maxid = i;
    }
    avers = avers / n;
    printf("%10s%10s%9s%9s%9s%8s\n", "No.", "name", "score[1]", "score[2]", "score[3]", "average");
    for (i = 0; i < n; i++)
        printf("%10s%10s%9.2f%9.2f%9.2f%8.2f\n", s[i].no, s[i].name, s[i].score1, s[i].score2, s[i].score3, s[i].aver);
    printf("average=%6.2f\n", avers);
    printf("The highest score is:%10s%10s\n", s[maxid].no, s[maxid].name);
    printf("His scores are:%6.2f%6.2f%6.2f,average:%6.2f\n", s[maxid].score1, s[maxid].score2, s[maxid].score3, s[maxid].aver);
}#include <stdio.h>
#include <stdlib.h>
#define LEN sizeof(node)
typedef struct Node
{
    int num;
    struct Node *next;
} node;

int main(void)

{
    node *head, *new, *p;
    int num = 1, init = 0;
    printf("ËØ∑ËæìÂÖ•ÁºñÂè∑:\n");
    while (num != 0)
    {
        scanf("%d", &num);
        if (init == 0)
        {
            head = new = (node *)malloc(LEN);
            init = 1;
        }
        else
            new = (node *)malloc(LEN);
        new->num = num;
        if (num == 0)
        {
            p->next = new;
            new->next = NULL;
        }
        else
            p->next = new;
        p = new;
    }

    printf("The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:The single linked list is:");
    printf("The single linked list is:\n");

    for (p = head; p->next != NULL; p = p->next)
        printf("%d\n", p->num);

    return 0;
}#include <stdio.h>

int main(void)

{

    union Num

    {

        int i;

        char ch;

        float f;

    } a;

    a.i = 106;

    printf("%d\n", a.i);

    return 0;
}
#include <stdio.h>

int main(void)

{

    int count, grades;

    printf("«Î ‰»Î∑÷ ˝£® ‰»Î∏∫ ˝Ω· ¯£©£∫\n");

    while (grades >= 0)
    {
        scanf("%d", &grades);
        if (grades >= 60)
            count++;
    }

    printf("Passing number£∫%d\n", count);

    return 0;
}#include <stdio.h>
int main()
{
    int num[100], i, j, numL, numCor[100], total = 0, tmp; //≈≈–Ú◊‘¥¯±‰¡ø
    int n, sum = 0;
    scanf("%d", &n);

    // ‰»Î ˝◊÷
    i = 0;
    do
    {
        scanf("%d", &num[i]);
        numL = i;
        i++;
    } while (getchar() != '\n');
    //≈≈–Ú
    for (int i = 0; i < numL; i++)
    {
        total = 0;
        for (j = 0; j < numL - i; j++)
        {
            if (num[j] <= num[j + 1])
            {
                numCor[j] = 1;
            }
            else
            {
                numCor[j] = 0;
                tmp = num[j];
                num[j] = num[j + 1];
                num[j + 1] = tmp;
            }
            total += numCor[j];
        }
    }
    //«Û∫Õ
    for (i = 0; i <= numL; i++)
    {
        sum += num[i];
    }
    // ‰≥ˆ
    printf("%d %d %d", num[numL], num[0], sum / (numL + 1));
    return 0;
}
#include <stdio.h>
#include <math.h>

int main(void)

{

    int i, j;

    long long int sum, item;

    sum = 0;

    item = 1;

    for (i = 1; i <= 10; i++)
    {
        item = pow(i, i);
        sum += item;
    }

    printf("sum is:%d\n", sum);

    return 0;
}#include <stdio.h>
int main()
{
    int n, i, j;
    int a[30][30];
    scanf("%d", &n);
    for (i = 0; i < n; i++)
    {
        for (j = 0; j <= i; j++)
        {
            if (j == i)
            {
                printf("1");
                a[i][j] = 1;
            }
            else if (j == 0)
            {
                printf("1 ");
                a[i][j] = 1;
            }
            else
                printf("%d ", a[i][j] = a[i - 1][j] + a[i - 1][j - 1]);
        }
        printf("\n");
    }
}
#include <stdio.h>
int main()
{
    int a, midNum, n, i, sum = 0;
    scanf("%d,%d", &a, &n);
    midNum = a;
    for (i = 1; i <= n; i++)
    {
        sum += midNum;
        midNum = midNum * 10 + a;
    }
    printf("%d+%d%d+...=%ld\n", a, a, a, sum);
    return 0;
}#include <stdio.h>
int main()
{
    int n, i, j, ln;
    scanf("%d", &n);
    if (n % 2 == 0)
    {
        printf("Failure");
        return 0;
    }

    for (i = 1; i <= n; i += 2)
    {
        ln++;
        for (j = 0; j < ((n + 1) / 2 - ln); j++)
        {
            printf(" ");
        }
        for (j = 0; j < i; j++)
        {
            printf("*");
        }
        printf("\n");
    }
    ln = 0;
    for (i = 1; i <= n; i += 2)
    {
        ln++;
        for (j = 0; j < ln; j++)
        {
            printf(" ");
        }
        for (j = 0; j <= n - i - 2; j++)
        {
            printf("*");
        }
        printf("\n");
    }
}#include <stdio.h>
int main()
{
    int sum = 0, i;
    scanf("%d", &i);
    do
    {
        sum += i;
        i--;
    } while (i != 0);
    printf("%d", sum);
    return 0;
}#include <stdio.h>

int main()
{
    int i, n, st, array[100];
    array[1] = 1;
    array[2] = 1;
    scanf("%d", &n);
    st = 2 * n;
    for (i = 3; i <= st; i++)
    {
        array[i] = array[i - 1] + array[i - 2];
    }
    for (i = 1; i <= 2 * n; i++)
    {
        printf("%d\n", array[i]);
    }
    return 0;
}
#include <stdio.h>
int main()
{
    int i;
    char ch;
    scanf("%c", &ch);
    for (i = 1; i <= 8; i++)
    {
        if (i % 2 == 0)
        {
            printf(" %c%c %c%c %c%c %c%c\n", ch, ch, ch, ch, ch, ch, ch, ch);
        }
        else
        {
            printf("%c%c %c%c %c%c %c%c\n", ch, ch, ch, ch, ch, ch, ch, ch);
        }
    }
    return 0;   `



        
}#include <stdio.h>
int main()
{
    char i, j, k;
    for (i = 'a'; i <= 'c'; i += 1)
    {
        for (j = 'x'; j <= 'z'; j += 1)
        {
            if ((i == 'a' && j == 'x') || (i == 'c' && (j == 'x' || j == 'z')))
                ;
            else
                printf("%c--%c\n", i, j);
        }
    }
}#include <stdio.h>
int main()
{
    int n, i;
    double sum = -0.000002, fz = 2, fm = 1, tmp = 1;
    printf("Please input n : ");
    scanf("%d", &n);
    for (i = 1; i <= n; i++)
    {
        sum += (fz / fm);
        tmp = fm;
        fm = fz;
        fz = tmp + fz;
    }
    printf("sum is %9.6f\n", sum);
    return 0;
}#include <stdio.h>
int main()
{
    int n, i;
    double sum = 1;
    scanf("%d", &n);
    if (n % 2 == 0)
        ;
    else
        return 0;
    if (n < 2)
    {
        sum = 1;
    }
    else
    {
        for (i = 2; i <= n; i += 2)
        {
            sum += (1 / (double)i);
        }
    }
    printf("s=%.5f", sum);
}#include <stdio.h>
#include <math.h>

int main()
{
    int i, j, n, midNum1, midNum2, array[100];
    scanf("%d", &n);
    for (i = 1, j = 0; i <= n; i++)
    {
        midNum1 = i + 100;
        midNum2 = i + 100 + 168;
        if ((pow((int)sqrt(midNum1), 2) == midNum1) && (pow((int)sqrt(midNum2), 2) == midNum2))
        {
            j++;
            array[j] = i;
        }
    }

    for (i = 1; i <= j; i++)
    {
        printf("%d ", array[i]);
    }
    return 0;
}#include <stdio.h>
#include <math.h>
int main()
{
    int i, j, k, cnt = 0;
    int n, nm;
    scanf("%d", &n);
    for (i = 2; i <= n; i++)
    {
        for (j = 1, k = 0; j <= i; j++)
        {
            if (i % j == 0)
            {
                k++;
            }
        }
        if (k == 2)
        {
            printf("%-4d", i);
            cnt++;
            if (cnt % 10 == 0)
            {
                printf("\n");
            }
        }
    }
    printf("\nThe total is %d", cnt);
    return 0;
}#include <stdio.h>
int main()
{
    long int m, n, nSum, mSum, nmSum, A, C;
    int i;
    scanf("%d,%d", &n, &m);
    if (m >= 0 && n >= m && n <= 20)
        ;
    else
        return 0;
    for (i = 1, mSum = 1; i <= m; i++)
    {
        mSum *= i;
    }
    for (i = 1, nSum = 1; i <= n; i++)
    {
        nSum *= i;
    }
    for (i = 1, nmSum = 1; i <= (n - m); i++)
    {
        nmSum *= i;
    }
    printf("%ld %ld", nSum / nmSum, nSum / (nmSum * mSum));
    return 0;
}#include <stdio.h>
int main()
{
    int chars = 0, spaces = 0, digits = 0, others = 0;
    char ch;
    while (1)
    {
        ch = getchar();
        if (ch == '\n')
        {
            break;
        }
        else if (ch >= 'a' && ch <= 'z' || ch >= 'A' && ch <= 'Z')
        {
            chars++;
        }
        else if (ch == ' ')
        {
            spaces++;
        }
        else if (ch >= '0' && ch <= '9')
        {
            digits++;
        }
        else
        {
            others++;
        }
    }
    printf("char=%d space=%d digit=%d others=%d", chars, spaces, digits, others);
    return 0;
}#include <stdio.h>
int main()
{
    int sum = 0, i;
    scanf("%d", &i);
    while (i != 0)
    {
        sum += i;
        i--;
    }
    printf("%d", sum);
    return 0;
}#include <stdio.h>
int main()
{
    int n;
    int i;
    scanf("%d", &n);
    for (i = 1; i <= n; i++)
    {
        if (n % i == 0)
        {
            printf("%d\n", i);
        }
    }
    return 0;
}//need a review
#include <stdio.h>
int main()
{
    float sn = 100.0, hn;
    int i, n;
    scanf("%d", &n);
    for (i = 2, hn = sn / 2; i <= n; i++)
    {
        sn += 2 * hn;
        hn = hn / 2;
    }
    printf("the total of road is %f\n", sn);
    printf("the %d-th is %f meter\n", n, hn);
    return 0;
}#include <stdio.h>
int main()
{
    int passwd = 123456, input, ir = 0;
    while (ir != 3)
    {
        scanf("%d", &input);
        if (input != passwd)
        {
            printf("Error\n");
            ir++;
        }
        if (input == passwd)
        {
            printf("True");
            return 0;
        }
    }
    return 0;
}#include <stdio.h>

int main(void)

{
    int i;
    for (i = 1; i < 11; i++)
    {

        printf("%2d£∫hello world!\n", i);
    }
    return 0;
}#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int main()
{
    //≥ı ºªØ«Û ˝±‰¡ø
    int numL1, numL2, i, targetNum, num1[100], num2[100];
    char target[100];
    //∆‰À˚±‰¡ø
    int n;
    int x, y, powy;
    //–¥»Î
    scanf("%d", &n);
    for (x = 1; x < n; x++)
    {
        //«Û ˝µƒ∑÷Ω‚
        memcpy(&x, target, sizeof(int));
        targetNum = atoi(target);
        numL1 = strlen(target);
        for (i = numL1; i != 0; i--)
        {
            num1[i] = (int)((targetNum / (int)pow(10, (i - 1))) % 10);
        }
        printf("1,%d\n", x);
        for (y = 1; y < sqrt(n); y++)
        {
            powy = pow(y, y);
            memcpy(&powy, target, sizeof(int));
            targetNum = atoi(target);
            numL2 = strlen(target);
            for (i = numL2; i != 0; i--)
            {
                num2[i] = (int)((targetNum / (int)pow(10, (i - 1))) % 10);
            }
            if (num1[1] == num2[1])
            {
                printf("%d", i);
            }
            printf("2,%d\n", y);
        }
    }
}#include <stdio.h>

int main()
{
    int i, j, ln = 1, n;
    scanf("%d", &n);
    for (; n >= 1; n--)
    {
        for (j = ln; j > 1; j--)
        {
            printf(" ");
        }
        for (i = (n - 1) * 2 + 1; i >= 1; i--)
        {
            printf("*");
        }
        ln++;
        printf("\n");
    }
    return 0;
}#include <stdio.h>

int main()
{
    int i, j, k;
    for (i = 1; i <= 4; i++)
    {
        for (j = 1; j <= 4; j++)
        {
            for (k = 1; k <= 4; k++)
            {
                if (i != j && j != k)
                {
                    printf("%d,%d,%d\n", i, j, k);
                }
            }
        }
    }
    return 0;
}
#include <stdio.h>
int main()
{
    int n;
    int i, j, k;
    scanf("%d", &n);
    for (i = 1; i <= n; i++)
    {
        for (j = 1; j <= i; j++)
        {
            printf("%d*%d=%d ", i, j, i * j);
        }
        printf("\n");
    }
    return 0;
}#include <stdio.h>
int main()
{
    int N, b, i;
    scanf("%d,%d", &N, &b);
    if (N <= 100 && N > 0 && b <= 100 && b > 0)
        ;
    else
        return 0;
    for (i = 0; i < N; i++)
    {
        printf("%d*%d=%d\n", b, i + 1, b * (i + 1));
    }
    return 0;
}
#include <stdio.h>
int main()
{
    int N, midNum;
    scanf("%d", &N);
    midNum = N;
    for (; N > 1; N--)
    {
        midNum *= (N - 1);
    }
    printf("%d", midNum);
    return 0;
}
#include <stdio.h>

int main()
{
    int i, j, k, cnt = 0;
    for (i = 1; i <= 100; i++)
    {
        for (j = 1; j <= 100; j++)
        {
            for (k = 1; k <= 100; k++)
            {
                if (i + j + k == 100)
                    if (5 * i + 1 * j + 0.5 * k == 100)
                    {
                        printf("%d %d %d\n", i, j, k);
                        cnt++;
                    }
            }
        }
    }
    printf("The total is %d", cnt);
    return 0;
}#include <stdio.h>
int main()
{
    int N, midNum;
    scanf("%d", &N);
    midNum = N;
    while (N != 1)
    {
        midNum *= (N - 1);
        N--;
    }
    printf("%d", midNum);
    return 0;
}
#include <stdio.h>
int main()
{
    int i, j;
    double sum = 0, tmp = 1;
    for (i = 1; i <= 63; i++)
    {
        tmp *= 2;
        sum += tmp;
    }
    printf("%lf", sum);
    return 0;
}#include <stdio.h>
int main()
{
    int N, midNum;
    scanf("%d", &N);
    if (N > 0)
        midNum = N;
    else
        return 0;
    do
    {
        midNum *= (N - 1);
        N--;
    } while (N != 1);
    printf("%d", midNum);
    return 0;
}
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int main()
{
    printf("Please input a number to devide:\n");
    int numL, i, targetNum, num[100];
    char target[100];
    scanf("%s", &target);
    targetNum = atoi(target);
    numL = strlen(target);
    for (i = numL; i != 0; i--)
    {
        num[i] = (int)((targetNum / (int)pow(10, (i - 1))) % 10);
    }
    for (i = 1; i <= numL; i++)
    {
        printf("%d", num[i]);
    }
    return 0;
}#include <stdio.h>
int main()
{
    int n, i, sum = 1;
    scanf("%d", &n);
    for (i = 2; i <= n; i++)
    {
        sum = (sum + 1) * 2;
    }
    printf("the total is %d", sum);
    return 0;
}#include <stdio.h>
int main()
{
    int n, i;
    double dPai, midNum = 0;
    scanf("%d", &n);
    for (i = 3; i <= (4 * n - 1); i += 2)
    {
        midNum = -midNum;
        midNum -= 1 / (double)i;
    }
    dPai = (1 + midNum) * 4;
    printf("%.12lf", dPai);
    return 0;
}#include <stdio.h>

int main()
{
    int i, j, k, array[20], jSum, oSum, jCnt, oCnt, jArray[20], oArray[20];

    // ‰»Î ˝¡–
    for (i = 1; i <= 20; i++)
    {
        scanf("%d", &array[i]);
    }

    //∑÷¿Î∆Ê≈º ˝
    for (i = 1, j = 1, k = 1, jSum = 0, oSum = 0, jCnt = 0, oCnt = 0; i <= 20; i++)
    {
        if (array[i] % 2 == 0)
        {
            oArray[j] = array[i];
            j++;
            oSum += array[i];
            oCnt++;
        }
        else
        {
            jArray[k] = array[i];
            k++;
            jSum += array[i];
            jCnt++;
        }
    }

    //¥Ú”°∆Ê ˝Ω·π˚
    for (i = 1; i <= jCnt; i++)
    {
        printf("%d ", jArray[i]);
    }
    printf("%.2lf\n", (double)jSum / jCnt);

    //¥Ú”°≈º ˝Ω·π˚
    for (i = 1; i <= oCnt; i++)
    {
        printf("%d ", oArray[i]);
    }
    printf("%.2lf\n", (double)oSum / oCnt);

    return 0;
}#include <stdio.h>
int main()
{
    int n, sum;
    int i;
    scanf("%d", &n);
    for (i = 1, sum = 0; i <= n; i++)
    {
        if (i % 2 != 0)
        {
            sum += i;
        }
    }
    printf("%d", sum);
    return 0;
}#include <stdio.h>
int main()
{
    int sum, total = 0, i, j;
    scanf("%d", &i);
    while (i != 0)
    {
        j = i;
        sum = 1;
        while (j != 0)
        {
            sum *= j;
            j--;
        }
        total += sum;
        i--;
    }
    printf("%d", total);
    return 0;
}#include <stdio.h>
int main()
{
    int num, i, midNum = 0;
    scanf("%d", &num);
    i = 1;
    while (1)
    {
        midNum += i;
        if (midNum > num)
            break;
        i++;
    }
    printf("n=%d", (i - 1));
}#include <stdio.h>
int main()
{
    int gm, sm, gn, sn;
    int i, j;
    for (i = 1; i < 100; i++)
    {
        for (j = 1; j < 100; j++)
        {
            gm = i % 10;
            sm = i / 10;
            gn = j % 10;
            sn = j / 10;
            if (((double)i / j == (double)sm / gn) && gm == sn)
            {
                printf("%d/%d\n", i, j);
            }
        }
    }
    return 0;
}#include <stdio.h>

int main()
{

    int x, tmp;
    double sum = 0;
    for (x = 1; x <= 51; x++)
    {
        tmp = (x - 1) * 2 + 1;
        if (x % 2 == 0)
        {
            tmp = -tmp;
        }
        sum += (double)1 / tmp;
    }
    printf("%lf", sum);
    return 0;
}#include <stdio.h>

int main()
{
    int num[100], i, n, numL, numCor[100], total = 0, tmp;
    char ch;
    scanf("%d", &n);
    printf("Please input %d number(s):\n", n);
    for (i = 1;; i++)
    {
        scanf("%d", &num[i]);
        numL = i;
        if (i == n)
            break;
    }
    i = 1;
    while (1)
    {
        //»Ù≈≈–ÚŒ¥ÕÍ≥…‘Ú÷ÿ–¬≈≈–Ú
        if (i == numL)
        {
            i = 1;
            total = 0;
        }
        //ø™ º≈≈–Ú
        if (num[i] <= num[i + 1])
        {
            numCor[i] = 1;
        }
        else
        {
            numCor[i] = 0;
            tmp = num[i];
            num[i] = num[i + 1];
            num[i + 1] = tmp;
        }
        //≈–∂œ «∑Ò≈≈–ÚÕÍ≥…
        total = total + numCor[i];
        if (total == (numL - 1))
        {
            break;
        }
        //◊‘‘ˆ
        i++;
    }
    printf("max=%d min=%d", num[numL], num[1]);
    return 0;
}#include <stdio.h>
int main()
{
    int i, j;
    char ch;
    scanf("%c", &ch);
    printf("@@");
    for (i = 0; i < 10; i++)
    {
        for (j = 2; j <= (2 * i + 2); j += 2)
        {
            printf("%c%c", ch, ch);
        }
        printf("\n");
    }
    return 0;
}#include <stdio.h>
#include <math.h>
int main()
{
    int n, b, s, g, i, cnt = 0;
    scanf("%d", &n);
    if (n <= 999 && n >= 100)
        ;
    else if (n > 999)
    {
        printf("Too large!");
        return 0;
    }
    else
        return 0;
    for (i = 100; i <= n; i++)
    {
        b = i / 100 % 10;
        s = i / 10 % 10;
        g = i / 1 % 10;
        if (i == pow(g, 3) + pow(s, 3) + pow(b, 3))
        {
            printf("%d^3+%d^3+%d^3=%d\n", g, s, b, i);
            cnt++;
        }
    }
    printf("Total is %d", cnt);
    return 0;
}#include <stdio.h>
int main()
{
    int n;
    int i, j;
    scanf("%d", &n);
    for (i = 3, j = 0; i <= n; i++)
    {
        if (i % 3 != 0)
        {
            printf("%d ", i);
            j++;
            if (j % 5 == 0)
            {
                printf("\n");
            }
        }
    }
    return 0;
}#include <stdio.h>

int main(void)

{

    float sn = 100.0, hn = sn / 2;

    int n;

    for (n = 2; n <= 10; n++)
    {

        sn = sn + 2 * hn;

        hn = hn / 2;
    }
    printf("the total of road is %.2f meter\n", sn);

    printf("the tenth is %.3f meter\n", hn);

    return 0;
}#include <stdio.h>

int main(void)

{

    int r;

    float area;

    for (r = 1; r <= 10; r++)

    {

        area = 3.141593 * r * r;

        if (area > 100.0)

            break;

        printf("radius=%d, area=%.2f\n", r, area);
    }

    printf("The current radius is:%2d\n", r);

    return 0;
}
#include <stdio.h>
int main()
{
    int n;
    int i, j, k;
    scanf("%d", &n);
    for (i = 1; i <= n; i++)
    {
        for (j = 1; j <= n; j++)
        {
            printf("%d*%d=%-3d", i, j, i * j);
        }
        printf("\n");
    }
    return 0;
}#include <stdio.h>
int main()
{
    int m, n, i, j, lowF, bigF;
    scanf("%d,%d", &m, &n);
    if (m < n)
    {
        lowF = m;
        bigF = n;
    }
    else
    {
        lowF = n;
        bigF = m;
    }
    for (i = lowF;; i--)
    {
        if (m % i == 0 && n % i == 0)
            break;
    }
    for (j = bigF;; j++)
    {
        if (j % m == 0 && j % n == 0)
            break;
    }
    printf("Greatest common divisor : %d\n", i);
    printf("Least/lowest common multiple : %d", j);
    return 0;
}#include <stdio.h>

int main()
{
    int n, i;
    long long int midNum = 1, sum = 1;
    scanf("%d", &n);
    if (n >= 1 && n <= 9)
        ;
    else
        return 0;
    for (i = 2; i <= n; i++)
    {
        midNum = midNum * 10 + i;
        sum += midNum;
    }
    printf("%ld", sum);
    return 0;
}
#include <stdio.h>
int main()
{
    int sum = 0, i;
    scanf("%d", &i);
    for (; i >= 1; i--)
    {
        sum += i;
    }
    printf("%d", sum);
    return 0;
}#include <stdio.h>
int main()
{
    int n, sum;
    int i, j, k;
    scanf("%d", &n);
    for (i = 1; i < n; i++)
    {
        for (j = 1, sum = 0; j < i; j++)
        {
            if (i % j == 0)
            {
                sum += j;
            }
        }
        if (i == sum)
        {
            printf("%d=", i);
            for (j = 1; j < i; j++)
            {
                if (i % j == 0)
                {
                    printf("%d+", j);
                }
            }
            printf("\b \n");
        }
    }
    return 0;
}#include <stdio.h>

int main(void)

{

    int a, b;

    void swap(int *p1, int *p2);

    printf("Please input a and bÔºö");

    scanf("%d%d", &a, &b);
    int *p1 = &a, *p2 = &b;
    swap(p1, p2);

    printf("swapped: a=%d,b=%d\n", a, b);

    return 0;
}

void swap(int *p1, int *p2)

{

    int temp;

    temp = *p1;

    *p1 = *p2;

    *p2 = temp;
}#include <stdio.h>
int main()
{
    int n, i, cnt = 0, tol, lot, arr[200];
    scanf("%d", &n);
    int *p = arr;
    for (i = 1; i <= n; i++)
        arr[i] = i;
    while (tol != 1)
    {
        tol = 0;
        for (i = 1; i <= n; i++)
        {
            if (*(p + i) != 0)
            {
                lot = i;
                cnt++;
                tol++;
            }
            if (cnt == 3)
            {
                *(p + i) = 0;
                cnt = 0;
            }
        }
    }
    printf("The last one is NO.%d", *(arr + lot));
}#include <stdio.h>
int main()
{
    double a[4][5], (*p)[5] = a;
    int i, j;
    for (i = 0; i < 4; i++)
        for (j = 0; j < 5; j++)
            scanf("%lf", *(p + i) + j);
    void average(double(*)[]);
    average(p);
    void findLost(double(*)[]);
    findLost(p);
    void findGood(double(*)[]);
    findGood(p);
}
void average(double (*p)[5])
{
    int i;
    double sum;
    for (i = 0; i < 4; i++)
        sum += *(*(p + i));
    printf("Average of course 1: %.1f\n", sum / 4);
}
void findLost(double (*p)[5])
{
    int i, j, fail[4] = {0}, cnt;
    double sum;
    printf("More than 2 failed courses:\n");
    for (i = 0; i < 4; i++)
    {
        for (j = 0, cnt = 0; j < 5; j++)
        {
            if (*(*(p + i) + j) < 60)
                cnt++;
        }
        if (cnt >= 2)
            fail[i] = 1;
    }
    for (i = 0; i < 4; i++)
    {
        sum = 0;
        if (fail[i] == 1)
        {
            for (j = 0; j < 5; j++)
                sum += *(*(p + i) + j);
            printf("No %d: %.1f %.1f %.1f %.1f %.1f average: %.1f\n", i + 1, *(*(p + i) + 0), *(*(p + i) + 1), *(*(p + i) + 2), *(*(p + i) + 3), *(*(p + i) + 4), sum / 5);
        }
    }
}
void findGood(double (*p)[5])
{
    int i, j, good[4] = {0}, cnt;
    double sum, avr[4];
    printf("Average score >=90 or all courses >=85:\n");
    for (i = 0; i < 4; i++)
    {
        sum = 0;
        for (j = 0, cnt = 0; j < 5; j++)
        {
            if (*(*(p + i) + j) >= 85)
                cnt++;
            sum += *(*(p + i) + j);
        }
        avr[i] = sum / 5;
        if (cnt == 5 || avr[i] >= 90)
            good[i] = 1;
    }
    for (i = 0; i < 4; i++)
        if (good[i] == 1)
        {
            for (j = 0; j < 5; j++)
                sum += *(*(p + i) + j);
            printf("No %d: %.1f %.1f %.1f %.1f %.1f average: %.1f\n", i + 1, *(*(p + i) + 0), *(*(p + i) + 1), *(*(p + i) + 2), *(*(p + i) + 3), *(*(p + i) + 4), avr[i]);
        }
}
#include <stdio.h>
int main()
{
    int i, a[11], *max, *min, tmp;
    for (i = 0; i < 10; i++)
        scanf("%d", &a[i]);
    max = min = a;
    for (i = 0; i < 10; i++)
    {
        if (a[i] > *max)
            max = &a[i];
        else if (a[i] < *min)
            min = &a[i];
    }
    tmp = *max;
    *max = a[9];
    a[9] = tmp;
    tmp = *min;
    *min = a[0];
    a[0] = tmp;
    for (i = 0; i < 10; i++)
        printf("%d ", a[i]);
}#include <stdio.h>
int main()
{
    double a[4][5], (*p)[5] = a;
    int i, j;
    for (i = 0; i < 4; i++)
        for (j = 0; j < 5; j++)
            scanf("%lf", *(p + i) + j);
    void average(double(*)[]);
    average(p);
    void findLost(double(*)[]);
    findLost(p);
    void findGood(double(*)[]);
    findGood(p);
}
void average(double (*p)[5])
{
    int i;
    double sum;
    for (i = 0; i < 4; i++)
        sum += *(*(p + i));
    printf("Average of course 1: %.1f\n", sum / 4);
}
void findLost(double (*p)[5])
{
    int i, j, fail[4] = {0}, cnt;
    double sum;
    printf("More than 2 failed courses:\n");
    for (i = 0; i < 4; i++)
    {
        for (j = 0, cnt = 0; j < 5; j++)
        {
            if (*(*(p + i) + j) < 60)
                cnt++;
        }
        if (cnt >= 2)
            fail[i] = 1;
    }
    for (i = 0; i < 4; i++)
    {
        sum = 0;
        if (fail[i] == 1)
        {
            for (j = 0; j < 5; j++)
                sum += *(*(p + i) + j);
            printf("No %d: %.1f %.1f %.1f %.1f %.1f average: %.1f\n", i + 1, *(*(p + i) + 0), *(*(p + i) + 1), *(*(p + i) + 2), *(*(p + i) + 3), *(*(p + i) + 4), sum / 5);
        }
    }
}
void findGood(double (*p)[5])
{
    int i, j, good[4] = {0}, cnt;
    double sum, avr[4];
    printf("Average score >=90 or all courses >=85:\n");
    for (i = 0; i < 4; i++)
    {
        sum = 0;
        for (j = 0, cnt = 0; j < 5; j++)
        {
            if (*(*(p + i) + j) >= 85)
                cnt++;
            sum += *(*(p + i) + j);
        }
        avr[i] = sum / 5;
        if (cnt == 5 || avr[i] >= 90)
            good[i] = 1;
    }
    for (i = 0; i < 4; i++)
        if (good[i] == 1)
        {
            for (j = 0; j < 5; j++)
                sum += *(*(p + i) + j);
            printf("No %d: %.1f %.1f %.1f %.1f %.1f average: %.1f\n", i + 1, *(*(p + i) + 0), *(*(p + i) + 1), *(*(p + i) + 2), *(*(p + i) + 3), *(*(p + i) + 4), avr[i]);
        }
}
#include <stdio.h>
#include <string.h>
int main()
{
    char c[1000];
    scanf("%s", c);
    void mystrlen(char *);
    mystrlen(c);
}
void mystrlen(char *s)
{
    printf("The length of string is %d", strlen(s));
}// ∂®“Â“ª∏ˆ∫¨”–¡Ω∏ˆ’˚ ˝‘™Àÿµƒ“ªŒ¨ ˝◊Èa[2]£¨∂®“Â¡Ω∏ˆ’˚–Õ÷∏’Îp1∫Õp2∑÷±÷∏œÚa[0]∫Õa[1]£¨ ‰»Î¡Ω∏ˆ’˚ ˝∏¯a[0]∫Õa[1]£¨ ‰≥ˆ“‘œ¬–≈œ¢£∫

// 1£©*p1∫Õ*p2£ª

// 2£© ‰≥ˆp1∫Õp2£ª

// 3£© ‰≥ˆp2-p1°£
#include <stdio.h>
int main()
{
    int a[2], *p1 = &a[0], *p2 = &a[1];
    scanf("%d %d", &a[0], &a[1]);
    printf("%d %d\n", *p1, *p2);
    printf("%d %d\n", p1, p2);
    printf("%d", p2 - p1);
}#include <stdio.h>
int main()
{
    int a, b, c, *p1 = &a, *p2 = &b, *p3 = &c;
    scanf("%d %d %d", p1, p2, p3);
    void swap(int *, int *, int *);
    swap(p1, p2, p3);
    printf("%d %d %d", c, b, a);
}
void swap(int *p1, int *p2, int *p3)
{
    int tmp;
    if (*p1 > *p2)
    {
        tmp = *p1;
        *p1 = *p2;
        *p2 = tmp;
    }
    if (*p2 > *p3)
    {
        tmp = *p2;
        *p2 = *p3;
        *p3 = tmp;
    }
    if (*p1 > *p2)
    {
        tmp = *p1;
        *p1 = *p2;
        *p2 = tmp;
    }
}#include <stdio.h>

int main(void)
{

    int i, *p;

    p = &i;

    printf("Please input iÔºö");

    scanf("%d", p);

    printf("i=%d\n", *p);

    return 0;
}#include <stdio.h>
#include <stdlib.h>
#define LEN sizeof(node)
typedef struct Node node;
struct Node
{
    int value;
    node *next;
};
node *head, *p, *new;
int main()
{
    int i, init = 0, dead = 3, tCnt;
    scanf("%d", &tCnt);

    for (i = 1; i <= tCnt; i++)
    {
        if (init == 0)
        {
            new = head = (node *)malloc(LEN);
            init = 1;
        }
        else
        {
            new = (node *)malloc(LEN);
            p->next = new;
        }
        new->value = i;
        p = new;
    }
    p->next = head;

    p = head;
    while (p->next != p)
    {
        for (i = 0; i < dead - 2; i++, p = p->next)
            ;
        p->next = p->next->next;
        p = p->next;
    }
    printf("The last one is NO.%d", p->value);
}
#include <stdio.h>
#include <string.h>
int main()
{
    char c1[20], c2[20], c3[20], i;
    char *p[3] = {c1, c2, c3};
    scanf("%s %s %s", c1, c2, c3);
    for (i = 0; i < 3; i++)
        printf("%s ", p[i]);
    printf("\n");
    void compare(char *[]);
    compare(p);
    for (i = 0; i < 3; i++)
        printf("%s ", p[i]);
}
void compare(char *p[3])
{
    int i, j;
    char min[20];
    for (i = 0; i < 3; i++)
    {
        strcpy(min, p[i]);
        for (j = i; j < 3; j++)
            if (strcmp(p[j], min) < 0)
            {
                strcpy(min, p[j]);
                strcpy(p[j], p[i]);
                strcpy(p[i], min);
            }
    }
}#include <stdio.h>
#include <string.h>
int main()
{
    int n;
    scanf("%d", &n);
    getchar();
    char c[n][20], i;
    char *p[n];
    for (i = 0; i < n; i++)
    {
        gets(c[i]);
        p[i] = c[i];
    }
    void sort(int n, char *[]);
    sort(n, p);
    printf("Now,the sequence is:\n");
    for (i = 0; i < n; i++)
        printf("%s\n", p[i]);
}
void sort(int n, char *p[])
{
    int i, j;
    char min[25];
    for (i = 0; i < n; i++)
    {
        strcpy(min, p[i]);
        for (j = i; j < n; j++)
            if (strcmp(p[j], min) < 0)
            {
                strcpy(min, p[j]);
                strcpy(p[j], p[i]);
                strcpy(p[i], min);
            }
    }
}#include <stdio.h>

int main()
{
    int a[10], *p = a, *pMax, *pMin, i;
    void input(int *, int);
    void sort(int *, int *, int *, int n);
    input(p, 10);
    sort(p, pMax, pMin, 10);
}
void input(int *p, int n)
{
    for (int i; i < n; i++, p++)
        scanf("%d", p);
}
void sort(int *p, int *pMax, int *pMin, int n)
{
    pMax = pMin = p;
    for (int i = 0; i < 10; i++)
        if (*(p + i) > *pMax)
            pMax = (p + i);
        else if (*(p + i) < *pMin)
            pMin = (p + i);
    int t;
    t = *pMin;
    *pMin = *p;
    *p = t;
    t = *pMax;
    *pMax = *(p + 9);
    *(p + 9) = t;
    for (int i = 0; i < n; i++)
        printf("%d ", *(p + i));
}#include <stdio.h>

int swap(int *m, int *n)
{
    int tmp;
    tmp = *m;
    *m = *n;
    *n = tmp;
}
int main()
{
    int m, n, *m1 = &m, *n1 = &n;
    scanf("%d,%d", &m, &n);
    printf("%d,%d\n", m, n);
    swap(m1, n1);
    printf("%d,%d", m, n);
}#include <stdio.h>
#include <string.h>
int main()
{
    char c[1000];
    scanf("%s", c);
    void mystrlen(char *);
    mystrlen(c);
}
void mystrlen(char *s)
{
    printf("The length of string is %ld", strlen(s));
}#include <stdio.h>
#include <string.h>
int main()
{
    int n;
    scanf("%d", &n);
    getchar();
    char c[n][20], i;
    char *p[n];
    for (i = 0; i < n; i++)
    {
        gets(c[i]);
        p[i] = c[i];
    }
    void sort(int n, char *[]);
    sort(n, p);
    printf("Now,the sequence is:\n");
    for (i = 0; i < n; i++)
        printf("%s\n", p[i]);
}
void sort(int n, char *p[])
{
    int i, j;
    char min[25];
    for (i = 0; i < n; i++)
    {
        strcpy(min, p[i]);
        for (j = i; j < n; j++)
            if (strcmp(p[j], min) < 0)
            {
                strcpy(min, p[j]);
                strcpy(p[j], p[i]);
                strcpy(p[i], min);
            }
    }
}#include <stdio.h>

void input(int *p)

{

    int i;

    for (i = 0; i <= 9; i++)

        scanf("%d", p + i); //ËØ•Ë°åÊúâÈîôËØØ
}

void output(int *p)

{

    int i;

    for (i = 0; i <= 9; i++)

        printf("%d ", *(p + i)); //ËØ•Ë°åÊúâÈîôËØØ

    printf("\n");
}

int main(void)

{

    int a[10];

    input(a); //ËØ•Ë°åÊúâÈîôËØØ

    output(a); //ËØ•Ë°åÊúâÈîôËØØ

    return 0;
}#include <stdio.h>

#include <string.h>

int main(void)

{
    int i;
    char *a = "You are a student";
    char t[25];
    char *b = t;
    for (i = 0; *(a + i) != '\0'; i++)
        *(b + i) = *(a + i);
    printf("a=%s\nb=%s\n", a, b);

    return 0;
}#include <stdio.h>
#include <string.h>
int main()
{
    int i;
    char tmp[20], ch[15][20];
    char(*str)[20];
    str = ch;
    FILE *fp;
    fp = fopen("2-3.test", "w+");
    strcpy(tmp, "one");
    fputs("One\n", fp);
    fputs("Two\n", fp);
    fputs("Three\n", fp);
    fputs("Four\n", fp);
    fputs("Five\n", fp);
    fputs("Six\n", fp);
    fputs("Seven\n", fp);
    fputs("Eight\n", fp);
    fputs("Nine\n", fp);
    fputs("Ten", fp);
    rewind(fp);
    for (i = 0; i < 10; i++)
        fscanf(fp, "%s", *(str + i));
    for (i = 0; i < 10; i++)
        printf("%s\n", *(str + i));
}
#include <stdio.h>
int main()
{
    FILE *fp1, *fp2;
    char tmp;
    fp1 = fopen("2-2.1.txt", "r");
    fp2 = fopen("2-2.2.txt", "r");
    while (!feof(fp1))
    {
        tmp = fgetc(fp1);
        putchar(tmp);
    }
    fclose(fp1);
    printf("\n");
    while (!feof(fp2))
    {
        tmp = fgetc(fp2);
        putchar(tmp);
    }
    fclose(fp2);
}#include <stdio.h>
int main()
{
    FILE *fp;
    fp = fopen("2-1.txt", "w+");
    int i, n;
    float tmp, a[12];
    for (i = 0; i < 10; i++)
    {
        scanf("%f", &tmp);
        fwrite(fp, "%.2f ", tmp);
    }
    rewind(fp);
    for (i = 0; i < 10; i++)
        fscanf(fp, "%f", &a[i]);
    scanf("%d", &n);
    scanf("%f", &a[n - 1]);

    rewind(fp);
    for (i = 0; i < 10; i++)
    {
        fscanf(fp, "%f", &tmp);
        printf("%.2f ", tmp);
    }
    printf("\n");
    rewind(fp);
    for (i = 0; i < 10; i++)
        fprintf(fp, "%.2f ", a[i]);
    rewind(fp);
    for (i = 0; i < 10; i++)
    {
        fscanf(fp, "%f", &tmp);
        printf("%.2f ", tmp);
    }
}#include <stdio.h>

int main(void)

{

    int i, array[10] = {3, 12, 5, 7, 11, 32, 46, 26, 9, 27};

    printf(" ˝◊È∏˜‘™Àÿ÷µ“¿¥ŒŒ™£∫");

    for (i = 0; i < 10; i++)

        printf("%4d", array[i]);

    printf("\n");

    return 0;
}#include <stdio.h>

int main(void)

{

    int i;

    char str[6] = "apple";

    printf("∏√◊÷∑˚¥ÆŒ™£∫");

    for (i = 0; str[i] != '\0'; i++)

        putchar(str[i]);

    printf("\n");

    return 0;
}
#include <stdio.h>

int main()
{
    int num[100], i, j, numL, numCor[100], total = 0, tmp;
    scanf("%d", &i);
    i = 0;
    do
    {
        scanf("%d", &num[i]);
        numL = i;
        i++;
    } while (getchar() != '\n');

    for (int i = 0; i < numL; i++)
    {
        total = 0;
        for (j = 0; j < numL - i; j++)
        {
            if (num[j] <= num[j + 1])
            {
                numCor[j] = 1;
            }
            else
            {
                numCor[j] = 0;
                tmp = num[j];
                num[j] = num[j + 1];
                num[j + 1] = tmp;
            }
            total += numCor[j];
        }
    }

    for (i = 0; i <= numL; i++)
    {
        printf("%4d", num[i]);
    }
    return 0;
}#include <stdio.h>
int main()
{
    int num[6][6], n, ln, lnt, sum;
    scanf("%d", &n);
    n--;

    if (n >= 2 && n <= 6)
        ;
    else
        return 0;

    ln = lnt = 0;
    while (ln <= n)
    {
        scanf("%d", &num[ln][lnt]);
        if (lnt == n)
        {
            ln++;
            lnt = 0;
            continue;
        }
        lnt++;
    }
    for (ln = 0; ln <= n; ln++)
    {
        sum += num[ln][ln];
    }
    printf("sum=%d", sum);
    return 0;
}#include <stdio.h>

int main()
{
    int i;
    char ch[50];
    gets(ch);
    for (i = 0; ch[i] != '\0'; i++)
        ;
    printf("%d", i);
    return 0;
}#include <stdio.h>
#include <string.h>

int main(void)

{

    char str1[20], str2[20], str3[20], strmax[20];

    printf("«Î ‰»Î3∏ˆ◊÷∑˚¥Æ£∫\n");

    scanf("%s%s%s", str1, str2, str3);

    if (strcmp(str1, str2) > 0)

        strcpy(strmax, str1);

    else

        strcpy(strmax, str2);

    if (strcmp(str3, strmax) > 0)

        strcpy(strmax, str3);

    printf("◊Ó¥Ûµƒ◊÷∑˚¥ÆŒ™£∫%s\n", strmax);

    return 0;
}#include <stdio.h>
#include <string.h>
int main()
{
    int capital[3] = {0}, lower[3] = {0}, space[3] = {0}, digit[3] = {0}, other[3] = {0}, ln, i;
    char ch[81];
    for (ln = 0; ln < 3; ln++)
    {
        gets(ch);
        for (i = 0; i < strlen(ch); i++)
        {
            if (ch[i] >= 'a' && ch[i] <= 'z')
            {
                lower[ln]++;
            }
            else if (ch[i] >= 'A' && ch[i] <= 'Z')
            {
                capital[ln]++;
            }
            else if (ch[i] == ' ')
            {
                space[ln]++;
            }
            else if (ch[i] >= '0' && ch[i] <= '9')
            {
                digit[ln]++;
            }
            else
            {
                other[ln]++;
            }
        }
    }
    for (i = 0; i < 3; i++)
    {
        printf("%d line:capital=%d,lower=%d,digit=%d,space=%d,other=%d\n", i, capital[i], lower[i], digit[i], space[i], other[i]);
    }
    return 0;
}#include <stdio.h>
int main()
{
    int num[6][6], m, i, j, sum;

    scanf("%d", &m);

    for (i = 0; i < m; i++)
        for (j = 0; j < m; j++)
            scanf("%d", &num[i][j]);

    for (i = 0, sum = 0; i < m; i++)
        sum += num[i][i];
    printf("sum=%d", sum);
    return 0;
}#include <stdio.h>

int main(void)

{

    int i, n = 5;

    float f[5];

    printf("«Î ‰»Î5∏ˆ µ ˝£∫");

    for (i = 0; i < 5; i++)

        scanf("%f", &f[i]);

    printf("’‚5∏ˆ ˝Œ™£∫");

    for (i = 0; i < 5; i++)

        printf("%6.1f", f[i]);

    printf("\n");

    return 0;
}#include <stdio.h>

int main()
{
    int num[10][10], ln, lnt, tmp;
    ln = lnt = 0;
    while (ln < 4)
    {
        scanf("%d", &num[ln][lnt]);
        if (lnt == 3)
        {
            ln++;
            lnt = 0;
            continue;
        }
        lnt++;
    }
    for (ln = 0; ln < 4; ln++)
    {
        for (lnt = 0; lnt < ln; lnt++)
        {
            tmp = num[ln][lnt];
            num[ln][lnt] = num[lnt][ln];
            num[lnt][ln] = tmp;
        }
    }
    for (ln = 0; ln < 4; ln++)
    {
        for (lnt = 0; lnt < 4; lnt++)
        {
            printf("%d ", num[ln][lnt]);
        }
        printf("\n");
    }
    return 0;
}#include <stdio.h>
int main()
{
    int num[10][10], n, ln, lnt;
    scanf("%d", &n);
    n--;
    if (n >= 3 && n <= 10)
        ;
    else
        return 0;
    for (ln = 0; ln <= n; ln++)
    {
        for (lnt = 0; lnt <= ln; lnt++)
        {
            if (ln == 0 || lnt == ln || lnt == 0)
            {
                num[ln][lnt] = 1;
            }
            else
            {
                num[ln][lnt] = num[ln - 1][lnt - 1] + num[ln - 1][lnt];
            }
        }
    }
    for (ln = 0; ln <= n; ln++)
    {
        for (lnt = 0; lnt <= ln; lnt++)
        {
            printf("%5d", num[ln][lnt]);
        }
        printf("\n");
    }
    return 0;
}#include <stdio.h>

int main()
{
    int num[100], i, j, numL, numCor[100], total = 0, tmp;

    scanf("%d", &i);
    i = 0;
    do
    {
        scanf("%d", &num[i]);
        numL = i;
        i++;
    } while (getchar() != '\n');

    for (int i = 0; i < numL; i++)
    {
        total = 0;
        for (j = 0; j < numL - i; j++)
        {
            if (num[j] <= num[j + 1])
            {
                numCor[j] = 1;
            }
            else
            {
                numCor[j] = 0;
                tmp = num[j];
                num[j] = num[j + 1];
                num[j + 1] = tmp;
            }
            total += numCor[j];
        }
    }

    scanf("%d", &num[numL + 1]);
    numL++;

    for (int i = 0; i < numL; i++)
    {
        total = 0;
        for (j = 0; j < numL - i; j++)
        {
            if (num[j] <= num[j + 1])
            {
                numCor[j] = 1;
            }
            else
            {
                numCor[j] = 0;
                tmp = num[j];
                num[j] = num[j + 1];
                num[j + 1] = tmp;
            }
            total += numCor[j];
        }
    }
    printf("The new array is:\n");
    for (i = 0; i <= numL; i++)
    {
        printf("%4d", num[i]);
    }

    return 0;
}#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int main()
{
    int numL, i, targetNum, num[100];
    char target[100];
    scanf("%s", &target);
    targetNum = atoi(target);
    numL = strlen(target);
    for (i = numL; i != 0; i--)
    {
        num[i] = (int)((targetNum / (int)pow(10, (i - 1))) % 10);
    }
    for (i = numL; i != 0; i--)
    {
        if (i == 1)
        {
            printf("%d", num[1]);
        }
        else
        {
            printf("%d ", num[i]);
        }
    }
}#include <stdio.h>
int main()
{
    int num[6][6], n, i, j, sum;

    for (i = 0; i < 3; i++)
        for (j = 0; j < 3; j++)
            scanf("%d", &num[i][j]);

    for (i = 0, sum = 0; i < 3; i++)
        sum += num[i][i];
    printf("%d");
    return 0;
}#include <stdio.h>

int main(void)

{
    int i, j;

    int m[3][4] = {{11, 12, 13, 14}, {21, 22, 23, 24}, {31, 32, 33, 34}};

    printf(" ‰≥ˆΩ·π˚Œ™£∫\n");

    for (i = 0; i < 3; i++)
    {

        for (j = 0; j < 4; j++)
        {

            printf("%4d", m[i][j]);
        }
        printf("\n");
    }

    return 0;
}
#include <stdio.h>

int main(void)

{

    int i, j;

    float f[2][3] = {-1.5, 2.6, -3.7, 1.1, -1.2, 1.3};

    float sum = 0;

    for (i = 0; i < 2; i++)

        for (j = 0; j < 3; j++)

            if (f[i][j] > 0)

                sum = sum + f[i][j];

    printf(" ˝◊È÷–¥Û”⁄0µƒ∏˜‘™Àÿ÷Æ∫ÕŒ™%5.1f\n", sum);

    return 0;
}#include <stdio.h>
int main1()

{
    int m, n;         //±ﬂæ‡
    int i, j;         //—≠ª∑
    int num[20][20];  //∂˛Œ¨ ˝◊È
    int bigIM[20][2]; //––◊Ó¥Û÷µ
    int bigJN[20][2]; //¡–◊Ó¥Û÷µ
    int tmp, hBig, zSml;
    scanf("%d*%d", &m, &n);
    for (i = 0; i < m; i++)
        for (j = 0; j < n; j++)
            scanf("%d", &num[i][j]);
    //≈–∂œ√ø––◊Ó¥Û÷µ≤¢¥¢¥Ê–– ˝
    for (i = 0; i < m; i++)
    {
        hBig = num[i][0];
        bigIM[i][0] = 0;
        for (j = 0; j < n; j++)
        {
            if (num[i][j] > hBig)
            {
                hBig = num[i][j];
                bigIM[i][0] = j;
            }
        }
    }
    printf("%d\n", bigIM[2][0]);
    //≈–∂œ√ø¡–◊Ó¥Û÷µ≤¢¥¢¥Ê¡– ˝
    for (i = 0; i < n; i++)
    {
        zSml = num[0][i];
        bigJN[i][0] = 0;
        for (j = 0; j < m; j++)
        {
            if (num[j][i] < zSml)
            {
                zSml = num[j][i];
                bigJN[i][0] = j;
            }
        }
    }
    printf("%d\n", bigJN[2][0]);
    //≈–∂œ «∑Òœ‡µ»
    for (i = 0; i < m; i++)
    {
        for (j = 0; j < n; j++)
        {
            if (bigIM[i][0] == i && bigJN[j][0] == j)
            {
                printf("Array[%d][%d]=%d\n", i, j, num[i][j]);
            }
        }
    }
    return 0;
}
#include <stdio.h>
int main()
{
    int num[50][50], n, ln, lnt, sum, tmp, cnt, dCnt;

    scanf("%d", &n);
    n--;
    if (n >= 1 && n <= 20)
        ;
    else
        return 0;
    n++;

    ln = lnt = 0;
    while (ln < n)
    {
        scanf("%d", &num[ln][lnt]);
        if (lnt == n - 1)
        {
            ln++;
            lnt = 0;
            continue;
        }
        lnt++;
    }

    for (ln = 0, cnt = 0, dCnt = 0; ln < n; ln++)
    {
        for (lnt = 0; lnt < ln; lnt++)
        {
            if (num[ln][lnt] == num[lnt][ln])
            {
                cnt++;
            }
            dCnt++;
        }
    }

    if (dCnt == cnt)
    {
        printf("Yes");
    }
    else
    {
        printf("No");
    }

    return 0;
}// Ωªªª¡Ω∏ˆ’˚ ˝µƒ÷µ°£
#include <stdio.h>

int main()
{
    int x, y;
    scanf("%d %d", &x, &y);
    x = x + y;
    y = x - y;
    x = x - y;
    printf("%d %d", x, y);
    return 0;
}#include <stdio.h>
int main()
{
    int n, num = 0;
    scanf("%d", &n);
    double r;
    r = n;
    while (r >= 0.3)
    {
        r = r - 0.3;
        num = num + 1;
    }
    printf("%d %.0lf", num, r * 10);
    return 0;
}#include <stdio.h>

int main()
{
    int a, b, c, temp;
    scanf("%d %d %d", &a, &b, &c);
    printf("%d,%d,%d\n", a, b, c);
    temp = b;
    b = a;
    a = c;
    c = temp;
    printf("%d,%d,%d", a, b, c);
    return 0;
}#include <stdio.h>
#define PI 3.141592653

int main()
{
    double r = 1;
    while (r != 0)
    {
        scanf("%lf", &r);
        if (r != 0)
        {
            printf("%.3lf\n", ((double)4 / 3) * PI * r * r * r);
        }
    }
    return 0;
}
// ∏¯∂®“ª∏ˆ¥Û–¥◊÷ƒ∏£¨“™«Û”√–°–¥◊÷ƒ∏ ‰≥ˆ°£


#include <stdio.h>

int main()
{
    char letter;
    scanf("%c", &letter);
    printf("%c", letter + 32);
    return 0;
}#include <stdio.h>
#include <math.h>

int main()
{
    double a, b, c, delta, result1, result2;
    scanf("%lf,%lf,%lf", &a, &b, &c);
    delta = b * b - 4 * a * c;
    result1 = (b + sqrt(delta)) / (double)2 * a;
    result2 = (-b + sqrt(delta)) / (double)2 * a;
    printf("x1=%lf,x2=%lf", result1, result2);
    return 0;
}#include <stdio.h>
int main()
{
    float n, r1 = 0.0036, r2 = 0.0225, r3 = 0.0198, p1, p2, p3;
    scanf("%f", &n);
    p1 = n * (1 + r1);
    p2 = n * (1 + r2);
    p3 = n * (1 + r3 / 2) * (1 + r3 / 2);
    printf("p1=%f\n", p1);
    printf("p2=%f\n", p2);
    printf("p3=%f\n", p3);
    return 0;
}#include <stdio.h>
int main()
{
    int s = 0, m = 0, h = 0, x;
    x = s;
    scanf("%d", &s);
    h = s / 3600;
    m = s / 60;
    s = s % 60;
    m = m % 60;
    printf("%ds=%d:%d:%d!\n", x, h, m, s);
    return 0;
}#include <stdio.h>
int main()
{
    int a;
    scanf("%d", &a);
    a += a -= a * a;
    printf("%d", a);
    return 0;
}
#include <stdio.h>
#include <math.h>

int main()
{
    double a, b, c, delta, result1, result2;
    scanf("%lf", &a);
    scanf("%lf", &b);
    scanf("%lf", &c);
    delta = b * b - 4 * a * c;
    result1 = (-b + sqrt(delta)) / (double)2 * a;
    result2 = (-b - sqrt(delta)) / (double)2 * a;
    printf("x1=%7.2lf\nx2=%7.2lf", result1, result2);
    return 0;
}#include <stdio.h>

int main()
{
    char a, b, c;
    a = getchar();
    getchar();
    b = getchar();
    getchar();
    c = getchar();
    putchar(a);
    putchar(b);
    putchar(c);
    return 0;
}//Õ¨31-2#include <stdio.h>
int main()
{
    double F, C;
    scanf("%lf", &F);
    C = (double)5 / 9 * (F - 32);
    printf("%lf", C);
    return 0;
}#include <stdio.h>
int main()
{
    int a, b;
    scanf("%d %d", &a, &b);
    printf("%d", a * a + b * b);
    return 0;
}#include <stdio.h>

int main()
{
    char w;
    scanf("%c", &w);
    printf("%c%c%c%c\n%c\n%c\n%c%c%c%c", w, w, w, w, w, w, w, w, w, w);
    return 0;
}#include <stdio.h>
int main()
{
    int a, b;
    scanf("%d %d", &a, &b);
    --a;
    ++b;
    printf("%d %d", a, b);
    return 0;
}#include <stdio.h>
#define PI 3.141592653

int main()
{
    double r, h;
    scanf("%lf %lf", &r, &h);
    printf("%.2lf %.2lf %.2lf %.2lf", PI * 2 * r, PI * r * r, PI * r * 2 * h, PI * r * r * h);
    return 0;
}//Õ¨31-3//∏¯≥ˆ»˝Ω«–Œµƒ»˝±ﬂ≥§£¨”√∫£¬◊π´ Ω«Û»˝Ω«–Œ√Êª˝≤¢ ‰≥ˆ£¨Ω·π˚±£¡Ù¡ΩŒª–° ˝°£

//  ‰»Î»˝Ω«–Œ»˝∏ˆ±ﬂ≥§a,b,c£¨º∆À„s=(a+b+c)/2£¨‘Ú

// »˝Ω«–Œ√Êª˝=(s*(s-a)*(s-b)*(s-c))^(1/2)

#include <stdio.h>
#include <math.h>

int main()
{
    float s, area, a, b, c;
    scanf("%f %f %f", &a,
          &b, &c);
    s = (a + b + c) / 2;
    area = sqrt(s * (s - a) * (s - b) * (s - c));
    printf("area=%.2f\n", area);
    return 0;
}#include <stdio.h>
int main()
{
    unsigned int a, b, c;
    scanf("%d %d %d", &a, &b, &c);
    printf("%d %d %.2lf", a + b + c, a * b * c, (double)(a + b + c) / 3);
    return 0;
}#include <stdio.h>
#include <stdlib.h>

void main()
{
    float l, s, r;
    scanf("%f", &r);
    l = 3.14 * 2 * r;
    s = 3.14 * r * r;
    printf("Area is %f\n", s);
    printf("Circumference is %f\n", l);
}#include <stdio.h>

int main()
{
    printf("100\n");
    printf("Good\n");
    printf("3.140000");
    return 0;
}#include <stdio.h>
int main()
{
    int n, a[100], max, tmp, i, j;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
        scanf("%d", &a[i]);
    for (i = 0; i < n; i++)
    {
        max = a[i];
        for (j = i; j < n; j++)
        {
            if (a[j] > max)
            {
                max = a[j];
                tmp = a[i];
                a[i] = a[j];
                a[j] = tmp;
            }
        }
    }
    for (i = 0; i < 5; i++)
        printf("%d ", a[i]);
    return 0;
}
#include <stdio.h>

int main()
{
    int a, b, c, d, e;
    scanf("%d %d %d %d %d", &a, &b, &c, &d, &e);
    printf("%.1lf", (a + b + c + d + e) / 5.0);
}#include <stdio.h>

int main()
{
    printf("Name\tAge\tGender\n");
    printf("---------------------\n");
    printf("Jack\t18\tman");
}#include <stdio.h>

int main()
{
    int a, b;
    scanf("%x %o", &a, &b);
    printf("%d", a + b);
}#include <stdio.h>
int main()
{
    double a;
    double i;
    scanf("%lf %lf", &a, &i);
    i = a / (i * i);
    if (i >= 18.5 && i <= 23.9)
        printf("Normal");
    else
        printf("Abnormal");
}#include <stdio.h>

int main()
{
    printf("I lost my cellphone!");
}#include <stdio.h>
int main()
{
    int i, a, b, c, d, e;
    for (i = 10000; i <= 99999; i++)
    {
        a = (i / 10000 % 10);
        b = (i / 1000 % 10);
        c = (i / 100 % 10);
        d = (i / 10 % 10);
        e = (i % 10);
        if (e * (a * 1000 + b * 100 + c * 10 + d) + (e + d * 10) * (a * 100 + b * 10 + c * 1) + (e + d * 10 + c * 100) * (a * 10 + b) + a * (e + d * 10 + c * 100 + b * 1000) == i)
        {
            printf("%d ", i);
        }
    }
}#include <stdio.h>
int main()
{
    double a, tol;
    int m, d, cop = 0;
    scanf("%lf %d %d %d", &a, &m, &d, &cop);
    if (m == 11 && d == 11)
        tol = a * 0.7;
    if (m == 12 && d == 12)
        tol = a * 0.8;
    if (cop == 1 && tol > 50)
        tol -= 50;
    else if (cop == 1 && tol <= 50)
        tol = 0;
    printf("%.2lf", tol);
    return 0;
}#include <stdio.h>
#include <string.h>
int main()
{
    int i, c, c1 = 0, c2 = 0;
    char n[50];
    gets(n);
    c = strlen(n);
    for (i = 0; i < c; i++)
    {
        if (n[i] == 'A')
            c1++;
        if (n[i] == 'B')
            c2++;
    }
    if (c1 > c2)
        printf("A");
    else if (c1 == c2)
        printf("E");
    else
        printf("B");
}#include <stdio.h>

int main()
{
    char ch;
    while ((ch = getchar()) != EOF)
    {
        getchar();
        if (ch >= 'a' && ch <= 'z' || ch >= 'A' && ch <= 'Z')
            printf("YES\n");
        else
            printf("NO\n");
    }
}#include <stdio.h>
int main()
{
    int n, m, c, b[20], a, sum, cnt = 0;
    int i, j;
    scanf("%d %d %d", &n, &m, &c);
    for (i = 0; i < m; i++)
        scanf("%d", &b[i]);
    for (i = 0; i < n; i++)
    {
        sum = 0;
        for (j = 0; j < m; j++)
        {
            scanf("%d", &a);
            sum += (a * b[j]);
        }
        if (sum + c > 0)
            cnt++;
    }
    printf("%d", cnt);
}#include <stdio.h>
int main()
{
    int i, j;
    char a[5], min, none;
    while (scanf("%c%c%c%c", &a[0], &a[1], &a[2], &none) != EOF)
    {
        for (i = 0; i < 3; i++)
        {
            min = a[i];
            for (j = i; j < 3; j++)
                if (a[j] < min)
                {
                    min = a[j];
                    a[j] = a[i];
                    a[i] = min;
                }
        }
        for (i = 0; i < 3; i++)
        {
            if (i <= 1)
                printf("%c ", a[i]);
            else
                printf("%c\n", a[i]);
        }
    }
}#include <stdio.h>
int main()
{
    int k[100], n, i;
    for (i = 0; i < n; i++)
    {
        scanf("%d", n);
    }
}#include <stdio.h>
int main()
{
    int n, i, c[20], v[20], sum = 0;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
        scanf("%d", &v[i]);
    for (i = 0; i < n; i++)
        scanf("%d", &c[i]);
    for (i = 0; i < n; i++)
        if (v[i] - c[i] > 0)
            sum += v[i] - c[i];
    printf("%d", sum);
}#include <stdio.h>
int main()
{
    int i, n, h, max = 0, cnt = 0;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
    {
        scanf("%d", &h);
        if (h >= max || i == 0)
        {
            max = h;
            cnt++;
        }
    }
    printf("%d", cnt);
}#include <stdio.h>
int main()
{
    int n, i, j;
    int a[30][30];
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
        {
            for (j = 0; j <= i; j++)
            {
                if (i == 0 || j == i)
                {
                    printf("1");
                    a[i][j] = 1;
                }
                else if (j == 0)
                {
                    printf("1 ");
                    a[i][j] = 1;
                }
                else
                    printf("%d ", a[i][j] = a[i - 1][j] + a[i - 1][j - 1]);
            }
            printf("\n");
        }
        printf("\n");
    }
}#include <stdio.h>
int main()
{
    char a;
    int n, i, j, cnt = 0;
    scanf("%d", &n);
    getchar();
    for (i = 1;; i++)
    {
        for (j = 1; j <= i; j++)
        {
            scanf("%c", &a);
            if (j == i)
                printf("%c", a);
            cnt++;
            if (cnt > n)
                return 0;
        }
    }
}
#include <stdio.h>
int main()
{
    int i, j, n, tmp;
    double a[100], sum;
    while (scanf("%d", &n) != EOF)
    {
        sum = 0;
        for (i = 0; i < n; i++)
            scanf("%lf", &a[i]);
        for (i = 0; i < n; i++)
        {
            for (j = 0; j < n - i - 1; j++)
            {
                if (a[j + 1] > a[j])
                {
                    tmp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = tmp;
                }
            }
        }
        for (i = 1; i < n - 1; i++)
            sum += a[i];
        printf("%.2lf\n", sum / (n - 2));
    }
}#include <stdio.h>
int main()
{
    long long int i, n, cnt, a[60];
    while (scanf("%lld", &n) != EOF)
    {
        cnt = 0;
        for (i = 1; i <= n; i++)
        {
            if (i <= 3)
            {
                a[i] = cnt = i;
            }
            else
            {
                a[i] = cnt = a[i - 1] + a[i - 2];
            }
        }
        printf("%lld\n", cnt);
    }
}#include <stdio.h>
#include <math.h>
#define max(a, b) a > b ? a : b;
int main()
{
    long long int n, i, man = 0, che;
    double a, tmp, euc;
    scanf("%lld", &n);
    for (i = 0; i < n; i++)
    {
        scanf("%lf", &a);
        if (i == 0)
            che = a;
        if (a < 0)
            tmp = -a;
        else
            tmp = a;
        euc += tmp * tmp;
        man += (int)tmp;
        che = (int)max(tmp, che);
    }
    printf("%lld\n%.15lf\n%lld", man, sqrt(euc), che);
}#include <stdio.h>
int main()
{
    int n, cnt = 0;
    double d, x, y;
    scanf("%d %lf", &n, &d);
    while (n--)
    {
        scanf("%lf %lf", &x, &y);
        if (x * x + y * y <= d * d)
            cnt++;
    }
    printf("%d", cnt);
}#include <stdio.h>
int a[1000000];
int main()
{
    int n, m, k;
    int i, sizenow, cnt = 0, pcnt;
    scanf("%d %d %d", &n, &m, &k);
    for (i = 0; i < n; i++)
        scanf("%d", &a[i]);
    for (sizenow = k, pcnt = m, i = n - 1; i >= 0; i--)
    {
        if (a[i] <= k && pcnt != 0)
        {
            if (sizenow - a[i] >= 0)
            {
                cnt++;
                sizenow -= a[i];
            }
            else if (sizenow - a[i] < 0)
            {
                pcnt--;
                if (pcnt == 0)
                    break;
                sizenow = k;
                sizenow -= a[i];
                cnt++;
            }
            if (sizenow == 0)
            {
                pcnt--;
                sizenow = k;
            }
        }
        else
            break;
    }
    printf("%d", cnt);
}#include <stdio.h>
int arr[20000000][2];
int min(int i, int j)
{
    if (i > j)
    {
        return j;
    }
    else
    {
        return i;
    }
}

int main()
{
    int i, id, cnR = 0, cnL = 0, tol = 0;
    char in;
    scanf("%d", &i);
    i *= 2;
    while (i--)
    {
        scanf("%c %d", &in, &id);
        if (in == 'L')
        {
            cnL++;
            arr[id][0] = cnL;
            arr[id][1] = 0;
        }
        else if (in == 'R')
        {
            cnR++;
            arr[id][0] = cnR;
            arr[id][1] = 1;
        }
        else if (in == '?')
        {
            if (arr[id][1] == 0)
            {
                printf("%d\n", min(cnR + arr[id][0] - 1, cnL - arr[id][0]));
            }
            else if (arr[id][1] == 1)
            {
                printf("%d\n", min(cnL + arr[id][0] - 1, cnR - arr[id][0]));
            }
        }
    }
    return 0;
}#include <stdio.h>
int main()
{
    int a, sum;
    scanf("%d", &a);
    sum = ((1 + a) * a) / 2;
    if (sum % 2 == 0)
        printf("0");
    else
        printf("1");
    return 0;
}#include <stdio.h>
int main()
{
    int c, n, score = 0, a[1010] = {0}, tmp, rCnt, i;
    scanf("%d %d", &c, &n);
    while (n--)
    {
        rCnt = 0;
        scanf("%d", &tmp);
        a[tmp]++;
        for (i = 1; i <= c; i++)
            if (a[i] >= 1)
                rCnt++;
        if (rCnt == c)
        {
            score++;
            for (i = 1; i <= c; i++)
                a[i]--;
        }
    }
    printf("%d", score);
}#include <stdio.h>

// int main()
// {
//     int Li[104], vi[104], li[104], lr[104];
//     int i, j, ln, cnt[104];
//     scanf("%d", &ln);
//     for (i = 0; i < ln; i++)
//     {
//         scanf("%d", &Li[i]);
//         scanf("%d", &vi[i]);
//         scanf("%d", &li[i]);
//         scanf("%d", &lr[i]);
//     }
//     for (i = 0; i < ln; i++)
//     {
//         cnt[i] = 0;
//         for (j = 1; j < li[i]; j++)
//         {
//             if (j % vi[i] == 0)
//             {
//                 cnt[i]++;
//             }
//         }
//         for (j = lr[i] + 1; j <= Li[i]; j++)
//         {
//             if (j % vi[i] == 0)
//             {
//                 cnt[i]++;
//             }
//         }
//     }
//     for (i = 0; i < ln; i++)
//         printf("%d\n", cnt[i]);
//     return 0;
// }


int main()
{
    int Li, vi, li, lr;
    int i, fnl;
    scanf("%d", &i);
    while (i--)
    {
        fnl = 0;
        scanf("%d %d %d %d", &Li, &vi, &li, &lr);
        fnl = Li / vi + (li - 1) / vi - lr / vi;
        printf("%d\n", fnl);
    }
    return 0;
}#include <stdio.h>
int main()
{
    
}#include <stdio.h>
int main()
{
    long long int i, n, cnt, a[60];
    while (1)
    {
        cnt = 0;
        scanf("%lld", &n);
        if (n == 0)
            break;
        for (i = 1; i <= n; i++)
        {
            if (i <= 4)
            {
                a[i] = cnt = i;
            }
            else
            {
                a[i] = cnt = a[i - 1] + a[i - 3];
            }
        }
        printf("%lld\n", cnt);
    }
}
#include <stdio.h>
#include <math.h>
int sushu(int x)
{
    for (int i = 3; i <= sqrt(x); i += 2)
    {
        if (x % i == 0)
            return 0;
    }
    return 1;
}
int main()
{
    int n, tax;
    scanf("%d", &n);
    if (n == 2)
        tax = 1; //2ÊòØÁ¥†Êï∞
    else if (n % 2 == 0)
        tax = 2; //Ê¨ßÊãâÂÆöÁêÜÔºåÂ§ß‰∫é2ÁöÑÂÅ∂Êï∞ÂèØ‰ª•‰∏∫‰∏§‰∏™Á¥†Êï∞‰πãÂíå
    else if (sushu(n))
        tax = 1;
    else if (sushu(n - 2))
        tax = 2;
    else
        tax = 3;
    printf("%d", tax);
}
#include <stdio.h>
int main()
{
    int n, i, sum;
    while (scanf("%d", &n) != EOF)
    {
        sum = 1;
        for (i = 0; i < n - 1; i++)
            sum = (sum + 1) * 2;
        printf("%d\n", sum);
    }
}#include <stdio.h>
int main()
{
    int n, c;
    int i, j, k = 1, cnt = 0, tmp, t[5010], t1[5010];
    scanf("%d %d", &n, &c);
    int a[5010] = {0};
    for (i = 1; i <= n; i++)
    {
        scanf("%d", &tmp);
        t[i] = tmp;
        a[tmp]++;
        if (a[tmp] > c)
        {
            printf("NO");
            return 0;
        }
    }
    for (i = 1; i <= 5000; i++)
    {
        if (a[i] != 0)
        {
            for (j = 1; j <= n; j++)
            {
                if (t[j] == i)
                {
                    t1[j] = k;
                    k++;
                }
                if (k > c)
                    k = 1;
            }
            cnt++;
        }
    }
    printf("YES\n");
    for (i = 1; i <= n; i++)
        printf("%d ", t1[i]);
}#include <stdio.h>
int main()
{
    long long int a, b, n, tol, t;
    scanf("%lld", &t);
    while (t--)
    {
        scanf("%lld %lld %lld", &n, &a, &b);
        if (n == 1)
            tol = a;
        else if (a * 2 <= b)
            tol = n * a;
        else
        {
            if (n % 2 == 0)
                tol = (n / 2) * b;
            else
                tol = ((n - 1) / 2) * b + a;
        }
        printf("%lld\n", tol);
    }
}#include <stdio.h>
int main()
{
    int t1, h1, m1, t2, h2, m2, t, h, m;
    scanf("%d:%d", &h1, &m1);
    scanf("%d:%d", &h2, &m2);
    t1 = h1 * 3600 + m1 * 60;
    t2 = h2 * 3600 + m2 * 60;
    t = t1 + (t2 - t1) / 2;
    h = t / 3600;
    m = t / 60 % 60;
    printf("%02d:%02d", h, m);
}#include <stdio.h>
int main()
{
    int i, j, m, n, min;
    scanf("%d %d", &m, &n);
    int a[100];
    for (i = 0; i < m + n; i++)
        scanf("%d", &a[i]);
    for (i = 0; i < m + n; i++)
        for (min = a[i], j = i; j < m + n; j++)
            if (a[j] < min)
            {
                min = a[j];
                a[j] = a[i];
                a[i] = min;
            }
    for (i = 0; i < m + n; i++)
        printf("%d ", a[i]);
}#include <stdio.h>
int main()
{
    int c1 = 0, c2 = 0, a, i = 10;
    while (i--)
    {
        scanf("%d", &a);
        if (a > 0)
            c1++;
        else if (a < 0)
            c2++;
    }
    printf("positive:%d\nnegative:%d", c1, c2);
}
#include <stdio.h>
int main()
{
    int a[10], i = 10;
    while (i--)
        scanf("%d", &a[i]);
    i = 10;
    while (i--)
        printf("%d ", a[9 - i]);
}#include <stdio.h>
int main()
{
    int n, t, s = 0;
    scanf("%d", &n);
    while (n--)
    {
        scanf("%d", &t);
        s += t;
        if (n == 0)
            printf("%d", s);
    }
}#include <stdio.h>
int main()
{
    int n, i, a[50], f0, f1 = 1;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
        scanf("%d", &a[i]);
    for (i = 0; i < n; i++)
    {
        if (a[i] < a[i + 1])
        {
            f0 = 0;
            break;
        }
        else if (a[i] > a[i + 1])
        {
            f0 = 1;
            break;
        }
    }
    for (; i < n - 1; i++)
    {
        if (a[i] < a[i + 1] && f0 == 1)
        {
            f1 = 0;
            break;
        }
        else if (a[i] > a[i + 1] && f0 == 0)
        {
            f1 = 0;
            break;
        }
    }
    if (f1 == 0)
        printf("unsorted");
    else
        printf("sorted");
}#include <stdio.h>
int main()
{
    int a, i = 10;
    while (i--)
    {
        scanf("%d", &a);
        printf("%d ", a);
    }
}#include <stdio.h>
int main()
{
    int n, i, a[51], t;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
        scanf("%d", &a[i]);
    scanf("%d", &t);
    for (i = 0; i < n; i++)
        if (a[i] != t)
            printf("%d ", a[i]);
}
#include <stdio.h>
int main()
{
    int n, i, j, a[51], t;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
        scanf("%d", &a[i]);
    scanf("%d", &t);
    a[n] = t;
    for (i = 0; i <= n; i++)
        if (t < a[i])
        {
            for (j = n; j > i; j--)
                a[j] = a[j - 1];
            a[i] = t;
            break;
        }
    for (i = 0; i < n + 1; i++)
        printf("%d ", a[i]);
}
#include <stdio.h>
int main()
{
    int a[100], max, min, i, t;
    scanf("%d", &t);
    for (i = 0; i < t; i++)
        scanf("%d", &a[i]);
    min = a[0];
    for (i = 0; i < t; i++)
        if (a[i] < min)
            min = a[i];
    max = a[0];
    for (i = 0; i < t; i++)
        if (a[i] > max)
            max = a[i];
    printf("%d", max - min);
}#include <stdio.h>
int main()
{
    int n, i, j;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
        {
            for (j = 0; j < n; j++)
            {
                if (i == 0 || j == 0 || j == n - 1 || i == n - 1)
                    printf("* ");
                else
                    printf("  ");
            }
            printf("\n");
        }
    }
}#include <stdio.h>
int main()
{
    int n, i, j;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i <= n; i++)
        {
            for (j = 0; j <= n - i; j++)
            {
                printf("* ");
            }
            for (j = 0; j < i; j++)
            {
                printf(" ");
            }
            printf("\n");
        }
        for (i = 1; i <= n; i++)
        {
            for (j = 0; j <= i; j++)
            {
                printf("* ");
            }
            for (j = 0; j < n - i; j++)
            {
                printf(" ");
            }
            printf("\n");
        }
    }
}#include <stdio.h>
int main()
{
    int n, i, j, t;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
        {
            for (j = 0; j < n; j++)
            {
                if (j == i || j == n - i - 1)
                {
                    printf("*");
                }
                else
                {
                    printf(" ");
                }
            }
            printf("\n");
        }
    }
}#include <stdio.h>
int main()
{
    int n, i, j;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
        {
            for (j = 0; j < i; j++)
            {
                printf(" ");
            }
            printf("*");
            for (j = i; j < n - 1; j++)
            {
                printf(" ");
            }
            printf("\n");
        }
    }
    return 0;
}#include <stdio.h>
int main()
{
    int n, i, j;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
        {
            for (j = 0; j < n; j++)
            {
                if (j == 0 || j == i || i == n - 1)
                    printf("* ");
                else
                    printf("  ");
            }
            printf("\n");
        }
    }
}#include <stdio.h>
int main()
{
    int n, i, j;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
        {
            for (j = 0; j <= i; j++)
            {
                printf("* ");
                if (j == i)
                    printf("\n");
            }
        }
    }
}#include <stdio.h>
int main()
{
    int n, i;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 1; i <= n * n; i++)
        {
            printf("* ");
            if (i % n == 0)
                printf("\n");
        }
    }
}#include <stdio.h>
int main()
{
    int n, i, j;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
        {
            for (j = 0; j < n - i; j++)
            {
                printf("* ");
                if (j == n - i - 1)
                    printf("\n");
            }
        }
    }
}#include <stdio.h>
int main()
{
    int n, i, j;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
        {
            for (j = 0; j < n; j++)
            {
                if (j < n - i - 1)
                    printf(" ");
                else
                    printf("* ");
                if (j == n - 1)
                    printf("\n");
            }
        }
    }
}#include <stdio.h>
int main()
{
    int n, i;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
            printf("*");
        printf("\n");
    }
}#include <stdio.h>
int main()
{
    int n, i, j;
    while (scanf("%d", &n) != EOF)
    {
        n++;
        for (i = 0; i < n - 1; i++)
        {
            for (j = 0; j < n; j++)
            {
                if (j < n - i - 1)
                    printf(" ");
                else
                    printf("* ");
                if (j == n - 1)
                    printf("\n");
            }
        }
        for (i = 0; i < n; i++)
        {
            for (j = 0; j < n; j++)
            {
                if (j < i)
                    printf(" ");
                else
                    printf("* ");
                if (j == n - 1)
                    printf("\n");
            }
        }
    }
}#include <stdio.h>
int main()
{
    int n, i, j;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
        {
            for (j = i; j < n - 1; j++)
            {
                printf(" ");
            }
            printf("*");
            for (j = 0; j < i; j++)
            {
                printf(" ");
            }
            printf("\n");
        }
    }
    return 0;
}#include <stdio.h>
int main()
{
    int n, i, j;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
        {
            for (j = 0; j < n; j++)
            {
                if (j < i)
                    printf(" ");
                else
                    printf("* ");
                if (j == n - 1)
                    printf("\n");
            }
        }
    }
}#include <stdio.h>
int main()
{
    int n, i, j;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
        {
            for (j = 0; j <= (n - i) * 2; j++)
            {
                printf(" ");
            }
            for (j = 0; j <= i; j++)
            {
                printf("*");
            }
            printf("\n");
        }
    }
    return 0;
}#include <stdio.h>
int main()
{
    int n, i, j;
    while (scanf("%d", &n) != EOF)
    {
        for (i = 0; i < n; i++)
        {
            for (j = 0; j < n; j++)
            {
                if (j < n - i - 1)
                    printf("  ");
                else
                    printf("* ");
                if (j == n - 1)
                    printf("\n");
            }
        }
    }
}#include <stdio.h>
int main()
{
    int m, n, a[10][10], i, j, tmp;
    scanf("%d %d", &n, &m);
    for (i = 0; i < n; i++)
        for (j = 0; j < m; j++)
            scanf("%d", &a[i][j]);
    for (i = 0; i < n; i++)
        for (j = 0; j < i; j++)
        {
            tmp = a[j][i];
            a[i][j] = a[j][i];
            a[j][i] = tmp;
        }
        #include <stdio.h>
int main()
{
    int n, arr[30], tmp[30], i, j;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
    {
        for (j = 0; j <= i; j++)
        {
            if (j == 0 || j == i)
                tmp[j] = 1;
            else
                tmp[j] = arr[j - 1] + arr[j];
            printf("%5d", tmp[j]);
        }
        for (j = 0; j <= i; j++)
        {
            arr[j] = tmp[j];
        }
        printf("\n");
    }
    return 0;
}#include <stdio.h>
int main()
{
int n, m, i, a;
scanf("%d %d", &n, &m);
for (i = 1; i <= n * m; i++)
{
scanf("%d", &a);
printf("%d ", a);
if (i % m == 0)
printf("\n");
}
return 0;
}#include <stdio.h>
int main()
{
    int n, m, i, j, a[10][10], x, y;
    scanf("%d %d", &n, &m);
    for (i = 0; i < n; i++)
        for (j = 0; j < m; j++)
            scanf("%d", &a[i][j]);
    scanf("%d %d", &x, &y);
    printf("%d", a[x - 1][y - 1]);
    return 0;
}#include<stdio.h>
int main()
{
int n,m,i,j,t=0,a,x,y;
scanf("%d %d",&n,&m);
for (i=0;i<n;i++)
for (j=0;j<m;j++)
{
scanf("%d",&a);
if (a>t)
{
t=a;
x=i;
y=j;
}
}
printf("%d %d",x+1,y+1);
}#include <stdio.h>
int main()
{
    int n, a, i, j, cnt = 0;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++)
        {
            scanf("%d", &a);
            if (j < i && a != 0)
            {
                printf("NO\n");
                return 0;
            }
        }
    printf("YES\n");
}#include <stdio.h>
int main()
{
    float a, sum[5] = {0};
    int i, t = 0;
    for (i = 0; i < 25; i++)
    {
        t++;
        scanf("%f", &a);
        if (i / 5 == 0)
        {
            printf("%.1f ", a);
            sum[0] += a;
        }
        if (i / 5 == 1)
        {
            printf("%.1f ", a);
            sum[1] += a;
        }
        if (i / 5 == 2)
        {
            printf("%.1f ", a);
            sum[2] += a;
        }
        if (i / 5 == 3)
        {
            printf("%.1f ", a);
            sum[3] += a;
        }
        if (i / 5 == 4)
        {
            printf("%.1f ", a);
            sum[4] += a;
        }
        if (t % 5 == 0)
            printf("%.1f\n", sum[i / 5]);
    }
}#include <stdio.h>
int main()
{
    int i, j, n, m, k, s1, s2, tmp;
    char o;
    scanf("%d %d", &n, &m);
    int a[10][10];
    for (i = 0; i < n; i++)
        for (j = 0; j < m; j++)
            scanf("%d", &a[i][j]);
    scanf("%d", &k);
    while (k--)
    {
        getchar();
        scanf("%c %d %d", &o, &s1, &s2);
        s1--;
        s2--;
        // printf("%c %d %d", o, s1, s2);
        if (o == 'r')
            for (i = 0; i < m; i++)
            {
                tmp = a[s1][i];
                a[s1][i] = a[s2][i];
                a[s2][i] = tmp;
            }
        else if (o == 'c')
        {
            for (i = 0; i < n; i++)
            {
                tmp = a[i][s1];
                a[i][s1] = a[i][s2];
                a[i][s2] = tmp;
            }
        }
    }
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < m; j++)
            printf("%d ", a[i][j]);
        printf("\n");
    }
}#include <stdio.h>
int main()
{
    int i, j, n, m, tmp;
    scanf("%d %d", &n, &m);
    int a1[10][10];
    for (i = 0; i < n; i++)
        for (j = 0; j < m; j++)
            scanf("%d", &a1[j][i]);
    for (i = 0; i < m; i++)
    {
        for (j = 0; j < n; j++)
            printf("%d ", a1[i][j]);
        printf("\n");
    }
    return 0;
}#include <stdio.h>
int main()
{
    char a[3][4];
    int cntK[4] = {0}, cntO[4] = {0}, cntB[4] = {0}, i, j;
    for (i = 0; i < 3; i++)
        for (j = 0; j < 4;)
        {
            scanf("%c", &a[i][j]);
            if (a[i][j] != ' ')
                j++;
        }
    for (i = 0; i < 3; i++)
    {
        cntK[0] = cntB[0] = cntK[2] = cntB[2] = 0;
        if (a[i][i] == 'K')
            cntK[1]++;
        else if (a[i][i] == 'B')
            cntB[1]++;
        if (a[i][2 - i] == 'K')
            cntK[3]++;
        else if (a[i][2 - i] == 'B')
            cntB[3]++;
        for (j = 0; j < 3; j++)
        {
            if (a[i][j] == 'K')
                cntK[0]++;
            else if (a[i][j] == 'B')
                cntB[0]++;
            if (a[j][i] == 'K')
                cntK[2]++;
            else if (a[j][i] == 'B')
                cntB[2]++;
        }
        if (cntK[0] == 3 || cntK[1] == 3 || cntK[2] == 3 || cntK[3] == 3)
        {
            printf("KiKi wins!");
            return 0;
        }
        if (cntB[0] == 3 || cntB[1] == 3 || cntB[2] == 3 || cntB[3] == 3)
        {
            printf("BoBo wins!");
            return 0;
        }
    }
    printf("No winner!");
    return 0;
}#include <stdio.h>
int main()
{
int m,n,i,c=0,a[100];
scanf("%d %d",&m,&n);
for (i=0;i<2*m*n;i++)
{
scanf("%d",&a[i]);
if (i>=m*n)
if (a[i]==a[i-m*n])
c++;
}
if (c == m * n)
printf("Yes");
else
printf("No");
}#include <stdio.h>
int main()
{
    int a;
    while (scanf("%d", &a) != EOF)
    {
        printf("%d\n", 2 << a - 1);
    }
    return 0;
}#include <stdio.h>
int main()
{
    double a, b, c;
    scanf("%lf %lf %lf", &a, &b, &c);
    printf("%.2lf %.2lf", a + b + c, (a + b + c) / 3);
    return 0;
}#include <stdio.h>
int main()
{
    char a;
    while ((a = getchar()) != EOF)
    {
        getchar();
        printf("%c\n", a + 32);
    }
    return 0;
}#include <stdio.h>
#include <math.h>
int main()
{
    double a, b, c, p;
    scanf("%lf %lf %lf", &a, &b, &c);
    printf("circumference=%.2lf ", a + b + c);
    p = (a + b + c) / 2;
    printf("area=%.2lf", sqrt(p * (p - a) * (p - b) * (p - c)));
    return 0;
}#include <stdio.h>
int main()
{
    int n, h, m;
    scanf("%d %d %d", &n, &h, &m);
    if (m % h == 0)
        m = m / h;
    else
        m = (m / h) + 1;
    n = n - m;
    printf("%d", n);
    return 0;
}#include <stdio.h>
int main()
{
    int a, g, s, b, q;
    scanf("%d", &a);
    g = a % 10;
    s = a / 10 % 10;
    b = a / 100 % 10;
    q = a / 1000 % 10;
    printf("%d%d%d%d", g, s, b, q);
}#include <stdio.h>
int main()
{
    int a = 40, c = 212;
    printf("%d", (-8 + 22) * a - 10 + c / 2);
}#include <stdio.h>
#include <stdio.h>
int main()
{
    int i;
    float a;
    scanf("%f", &a);
    i = a / 1;
    printf("%d", i % 10);
    return 0;
}#include <stdio.h>
int main()
{
    printf("The size of short is %d bytes.\n", sizeof(short));
    printf("The size of int is %d bytes.\n", sizeof(int));
    printf("The size of long is %d bytes.\n", sizeof(long));
    printf("The size of long long is %d bytes.", sizeof(long long));
}#include <stdio.h>
int main()
{
    int h, m, s, time;
    scanf("%d", &time);
    h = time / 3600;
    m = time / 60 % 60;
    s = time % 60;
    printf("%d %d %d", h, m, s);
}#include <stdio.h>
#include <math.h>
#define PI 3.1415926
int main()
{
    double a;
    scanf("%lf", &a);
    printf("%.3lf", (double)4 / 3 * PI * a * a * a);
    return 0;
}#include <stdio.h>
int main()
{
    double i;
    scanf("%lf", &i);
    printf("%.lf", 3.156 * 10000000 * i);
}#include <stdio.h>
int main()
{
    int a, b;
    double i;
    scanf("%d %d", &a, &b);
    i = (double)b / 100;
    printf("%.2lf", a / (i * i));
    return 0;
}#include <stdio.h>
int main()
{
    int a, b, i, j;
    scanf("%d %d", &a, &b);
    if (a + b >= 100)
    {
        printf("%d", (a + b) % 100);
    }
    else
        printf("%d", a + b);
    return 0;
}#include <stdio.h>
int main()
{
    int m, n, i, tmp, cnt = 0;
    scanf("%d %d", &m, &n);
    int a[10000];
    for (i = 0; i < m * n; i++)
        scanf("%d", &a[i]);
    for (i = 0; i < m * n; i++)
    {
        scanf("%d", &tmp);
        if (tmp == a[i])
        {
            cnt++;
        }
    }
    printf("%.2lf", (double)cnt / (m * n) * 100);
    return 0;
}
#include <stdio.h>
int main()
{
    int a;
    scanf("%d", &a);
    if (a >= 0 && a <= 3)
    {
        printf("Good");
    }
    if (a >= 4 && a <= 9)
    {
        printf("Danger");
    }
    if (a >= 10)
    {
        printf("Danger++");
    }
}
#include <stdio.h>
int main()
{
    double a, b, c, d, e;
    scanf("%lf %lf %lf %lf %lf", &a, &b, &c, &d, &e);
    printf("%.2lf", (a + b + c + d + e) / 5);
}#include <stdio.h>
int main()
{
    int a;
    while (scanf("%d", &a) != EOF)
    {
        if (a == 200)
            printf("OK\n");
        if (a == 202)
            printf("Accepted\n");
        if (a == 400)
            printf("Bad Request\n");
        if (a == 403)
            printf("Forbidden\n");
        if (a == 404)
            printf("Not Found\n");
        if (a == 500)
            printf("Internal Server Error\n");
        if (a == 502)
            printf("Bad Gateway\n");
    }
}
#include <stdio.h>
int main()
{
    double a[7], sum = 0, tmp;
    int i, j;
    for (i = 0; i < 7; i++)
        scanf("%lf", &a[i]);
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 7 - i - 1; j++)
        {
            if (a[j] > a[j + 1])
            {
                tmp = a[j];
                a[j] = a[j + 1];
                a[j + 1] = tmp;
            }
        }
    }
    for (i = 1; i < 6; i++)
    {
        sum += a[i];
    }
    printf("%.2lf", sum / 5);
}#include <stdio.h>
int main()
{
    printf("Happy New Year*2019*");
}#include <stdio.h>
#include <string.h>
int main()
{
    int n, i, j, tmp[101], cnt;
    for (i = 1; i <= 100; i++)
        tmp[i] = i;
    while (scanf("%d", &n) != EOF)
    {
        int a[101];
        cnt = 0;
        memcpy(a, tmp, 101 * sizeof(int));
        for (i = 2; i <= n; i++)
        {
            for (j = i + 1; j <= n; j++)
            {
                if (j % i == 0)
                {
                    a[j] = 0;
                }
            }
        }
        for (i = 2; i <= n; i++)
            if (a[i] != 0)
                printf("%d ", a[i]);
            else
                cnt++;
        printf("\n%d\n", cnt);
    }
}#include <stdio.h>
int main()
{
    int a[50], tmp, i, j, n;
    scanf("%d", &n);
    for (i = 0; i < n; i++)
        scanf("%d", &a[i]);
    scanf("%d", &a[n]);
    for (i = 0; i <= n; i++)
    {
        for (j = 0; j <= n - i - 1; j++)
        {
            if (a[j] > a[j + 1])
            {
                tmp = a[j];
                a[j] = a[j + 1];
                a[j + 1] = tmp;
            }
        }
    }
    for (i = 0; i <= n; i++)
    {
        printf("%d ", a[i]);
    }
}#include <stdio.h>
#include <string.h>
int main()
{
    char input[15];
    do
    {
        gets(input);
        if (strcmp(input, "admin admin") == 0)
            printf("Login Success!\n");
        else
            printf("Login Fail!\n");
    } while (getchar() != EOF);
    return 0;
}#include <stdio.h>
int main()
{
    int a, i, j;
    while (scanf("%d", &a) != EOF)
    {
        for (i = 0; i < a; i++)
        {
            for (j = 0; j <= i; j++)
            {
                printf("%d ", j + 1);
            }
            printf("\n");
        }
    }
}#include <stdio.h>

int main()
{
    int y, m, i, bigMonF = 0, rYearF = 0;
    int bigMon[7] = {1, 3, 5, 7, 8, 10, 12};
    while (scanf("%d %d", &y, &m) != EOF)
    {
        bigMonF = 0;
        rYearF = 0;
        for (i = 0; i < 7; i++)
            if (m == bigMon[i])
                bigMonF = 1;
        if (y % 400 == 0 || y % 100 != 0 && y % 4 == 0)
            rYearF = 1;
        if (rYearF == 0 && m == 2)
            printf("28\n");
        else if (rYearF == 1 && m == 2)
            printf("29\n");
        else if (bigMonF == 1)
            printf("31\n");
        else
            printf("30\n");
    }
    return 0;
}#include <stdio.h>
int main()
{
    int a, b;
    while ((scanf("%d %d", &a, &b)) != EOF)
    {
        if (a == b)
            printf("%d=%d\n", a, b);
        else if (a > b)
            printf("%d>%d\n", a, b);
        else
            printf("%d<%d\n", a, b);
    }
    return 0;
}#include <stdio.h>
#include <math.h>
int main()
{
    double delta, a, b, c, i, j;
    while (scanf("%lf %lf %lf", &a, &b, &c) != EOF)
    {
        if (a == 0)
        {
            printf("Not quadratic equation");
            return 0;
        }
        delta = b * b - 4 * a * c;
        i = -b / (2 * a);
        j = sqrt(delta) / (2 * a);
        if (delta == 0)
            printf("x1=x2=%.2lf\n", i);
        else if (delta > 0)
            printf("x1=%.2lf;x2=%.2lf\n", i - j, i + j);
        else
        {
            j = sqrt(-delta) / (2 * a);
            if (i == 0)
                printf("x1=0.00-%.2lfi;x2=0.00+%.2lfi\n", j, j);
            else
                printf("x1=%.2lf-%.2lfi;x2=%.2lf+%.2lfi\n", i, j, i, j);
        }
    }
}
#include <stdio.h>
int main()
{
    int a, b, c;
    while ((scanf("%d %d %d", &a, &b, &c)) != EOF)
    {
        if (a + b > c && b + c > a && a + c > b)
        {
            if (a == b && b == c)
                printf("Equilateral triangle!\n");
            else if (a == b || b == c || a == c)
                printf("Isosceles triangle!\n");
            else
                printf("Ordinary triangle!\n");
        }
        else
            printf("Not a triangle!\n");
    }
    return 0;
}#include <stdio.h>
int main()
{
    double a, b;
    char c;
    while (scanf("%lf%c%lf", &a, &c, &b) != EOF)
    {
        if (c == '/' && b == 0)
            printf("Wrong!Division by zero!\n");
        else
        {
            switch (c)
            {
            case '+':
                printf("%.4lf+%.4lf=%.4lf\n", a, b, a + b);
                break;
            case '-':
                printf("%.4lf-%.4lf=%.4lf\n", a, b, a - b);
                break;
            case '*':
                printf("%.4lf*%.4lf=%.4lf\n", a, b, a * b);
                break;
            case '/':
                printf("%.4lf/%.4lf=%.4lf\n", a, b, a / b);
                break;
            default:
                printf("Invalid operation!\n");
            }
        }
    }
}#include <stdio.h>
int main()
{
    int a;
    while (scanf("%d", &a) != EOF)
    {
        if (a >= 60)
            printf("Pass\n");
        else
            printf("Fail\n");
    }
    return 0;
}#include <stdio.h>
int main()
{
    int a;
    while (scanf("%d", &a) != EOF)
    {
        if (a >= 90 && a <= 100)
            printf("Perfect\n");
    }
    return 0;
}#include <stdio.h>
int main()
{
    int a;
    while (scanf("%d", &a) != EOF)
    {
        if (a % 2 == 0)
            printf("Even\n");
        else
            printf("Odd\n");
    }
    return 0;
}#include <stdio.h>
int main()
{
    char a;
    while ((a = getchar()) != EOF)
    {
        getchar();
        if (a == 'A' || a == 'E' || a == 'I' || a == 'O' || a == 'U' || a == 'a' || a == 'e' || a == 'i' || a == 'o' || a == 'u')
            printf("Vowel\n");
        else
            printf("Consonant\n");
    }
    return 0;
}
#include <stdio.h>
int main()
{
    int a;
    scanf("%d", &a);
    if (a >= 140)
        printf("Genius");
    return 0;
}#include <stdio.h>
int main()
{
    char a;
    while ((a = getchar()) != EOF)
    {
        getchar();
        if ((a >= 'A' && a <= 'Z'))
            printf("%c\n", a + 32);
        else if (a >= 'a' && a <= 'z')
            printf("%c\n", a - 32);
    }
    return 0;
}
#include <stdio.h>
int main()
{
    int a, b;
    double i;

    while (scanf("%d %d", &a, &b) != EOF)
    {
        i = (double)b / 100;
        i = a / (i * i);
        if (i < 18.5)
            printf("Underweight\n");
        else if (i >= 18.5 && i <= 23.9)
            printf("Normal\n");
        else if (i > 23.9 && i <= 27.9)
            printf("Overweight\n");
        else
            printf("Obese\n");
    }
    return 0;
}#include <stdio.h>
int main()
{
    char a;
    while ((a = getchar()) != EOF)
    {
        getchar();
        if ((a >= 'A' && a <= 'Z') || (a >= 'a' && a <= 'z'))
            printf("%c is an alphabet.\n", a);
        else
            printf("%c is not an alphabet.\n", a);
    }
    return 0;
}
#include <stdio.h>
int main()
{
    int a;
    while ((scanf("%d", &a)) != EOF)
    {
        if (a > 0)
            printf("1\n");
        else if (a == 0)
            printf("0.5\n");
        else
            printf("0\n");
    }
    return 0;
}#include <stdio.h>
int main()
{
    int a, b, c;
    int max(int, int);
    while (scanf("%d %d %d", &a, &b, &c) != EOF)
        printf("%d\n", max(a, max(b, c)));
}
int max(int a, int b)
{
    if (a > b)
        return a;
    else
        return b;
}